
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOinstruccion : cuerpoInstruccioncuerpoInstruccion : cuerpo\n                        | cuerpo cuerpoInstruccioncuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_while_bool\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotante\n              | declaracionvalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLinea\n               | valor sentencia_while_boolbooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanos\n                  | VARIABLE IGUAL solicitudDatosTeclado\n                  | VARIABLE IGUAL entero_a_flotanteelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS\n                        | PRINTF PARENTESIS_IZ PARENTESIS_DERoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE declaraciones ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaraciones ELSE declaraciones END\n                    | IF condicionIf declaraciones estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaraciones ENDestructura_secundaria_if : ELSEIF condicionIf declaraciones ELSE declaraciones END\n                                | ELSEIF condicionIf declaraciones estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | estructura_ifUnaLinea\n                    | sentencia_while\n                    | sentencia_while_booldeclaraciones : declaracion \n                    | declaracion declaracionessentencia_while_bool : WHILE declaracion declaraciones END\n                            | WHILE VARIABLE declaraciones END sentencia_while : WHILE expresiones_booleanas sentencia_while END\n                      | WHILE expresiones_booleanas declaracion END sentencia_case : CASE VARIABLE sentencia_when ENDsentencia_when : WHEN declaracion declaracionsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA elemento_hasheach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase declaraciones ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase cuerpoVariables\n                | asignacion cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones\n                cuerpoClaseE : cuerpoClase\n                | cuerpoClase cuerpoClaseE'
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,54,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,89,90,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,184,185,186,188,189,194,196,197,199,200,202,203,204,205,206,207,209,211,212,213,214,215,221,222,223,224,225,228,230,232,233,234,235,237,239,241,243,247,248,249,251,252,253,255,256,257,259,262,267,268,270,271,272,273,274,276,278,279,],[30,30,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,80,-51,86,-52,-111,95,101,102,110,114,125,-153,129,129,-141,-36,-37,129,86,-40,-41,-42,-43,-44,-45,139,140,152,-97,-98,-99,-100,-101,-102,-103,-64,-53,-59,-60,-61,-62,-63,-46,-49,172,174,-157,129,-124,129,-88,129,-143,129,129,-133,-134,-135,-136,-138,-139,-140,-142,-144,101,-154,-137,129,139,129,-167,207,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,80,-55,-56,101,215,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,95,101,-104,-105,101,227,-87,110,129,129,-169,-34,-152,-65,-66,-67,-68,-69,-49,242,139,-117,-54,129,129,-130,129,-129,101,-126,129,-115,-149,-150,-147,-148,-151,-168,-39,254,129,-127,260,129,-155,30,129,-31,-128,101,-113,275,-166,129,-132,-125,-114,-89,-164,-165,-131,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[34,34,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,34,-153,34,34,-141,-36,-37,34,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,34,-124,34,-88,34,-143,34,34,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,34,34,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,34,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,34,34,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,34,34,-130,34,-129,-126,34,-115,-149,-150,-147,-148,-151,-168,-39,34,-127,34,-155,34,34,-31,-128,-113,-166,34,-132,-125,-114,-89,-164,-165,-131,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[36,36,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,36,-153,36,36,-141,-36,-37,36,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,36,-124,36,-88,36,-143,36,36,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,36,36,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,36,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,36,36,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,36,36,-130,36,-129,-126,36,-115,-149,-150,-147,-148,-151,-168,-39,36,-127,36,-155,36,36,-31,-128,-113,-166,36,-132,-125,-114,-89,-164,-165,-131,]),'PRINTF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[37,37,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,37,-153,37,37,-141,-36,-37,37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,37,-124,37,-88,37,-143,37,37,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,37,37,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,37,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,37,37,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,37,37,-130,37,-129,-126,37,-115,-149,-150,-147,-148,-151,-168,-39,37,-127,37,-155,37,37,-31,-128,-113,-166,37,-132,-125,-114,-89,-164,-165,-131,]),'GETS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,66,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[40,40,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,40,-153,40,40,-141,-36,-37,40,40,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,40,-124,40,-88,40,-143,40,40,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,40,40,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,40,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,40,40,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,40,40,-130,40,-129,-126,40,-115,-149,-150,-147,-148,-151,-168,-39,40,-127,40,-155,40,40,-31,-128,-113,-166,40,-132,-125,-114,-89,-164,-165,-131,]),'LLAVE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,66,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[41,41,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,41,-153,41,41,-141,-36,-37,41,41,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,41,-124,41,-88,41,-143,41,41,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,41,41,-167,41,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,41,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,41,41,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,41,41,-130,41,-129,-126,41,-115,-149,-150,-147,-148,-151,-168,-39,41,-127,41,-155,41,41,-31,-128,-113,-166,41,-132,-125,-114,-89,-164,-165,-131,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[42,42,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,124,-153,124,124,-141,-36,-37,124,-64,165,-59,-60,-61,-62,-63,-46,-49,-157,124,-124,124,-88,124,-143,124,124,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,124,124,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,124,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,124,124,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,124,124,-130,124,-129,-126,124,-115,-149,-150,-147,-148,-151,-168,-39,124,-127,124,-155,42,124,-31,-128,-113,-166,124,-132,-125,-114,-89,-164,-165,-131,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[43,43,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,-153,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,43,-31,-128,-113,-132,-114,-89,-164,-131,]),'CORCHETE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,44,47,50,52,53,66,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,189,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[44,44,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,44,-153,-141,-36,-37,44,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,44,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,44,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,44,-31,-128,-113,-132,-114,-89,-164,-131,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,45,47,48,49,50,52,53,54,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[45,45,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,45,-153,45,45,-141,-36,-37,45,-64,166,-59,-60,-61,-62,-63,-46,-49,-157,45,-124,45,-88,45,-143,45,45,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,45,45,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,45,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,45,45,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,45,45,-130,45,-129,-126,45,-115,-149,-150,-147,-148,-151,-168,-39,45,-127,45,-155,45,45,-31,-128,-113,-166,45,-132,-125,-114,-89,-164,-165,-131,]),'CASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[46,46,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,-153,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,46,-31,-128,-113,-132,-114,-89,-164,-131,]),'UNTIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[48,48,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,-153,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,48,-31,-128,-113,-132,-114,-89,-164,-131,]),'PARENTESIS_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,34,35,36,37,40,45,47,48,49,50,52,53,54,58,59,60,61,62,63,64,66,76,77,78,79,80,81,82,85,86,93,97,98,99,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,159,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,186,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[35,35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,83,35,87,88,-111,35,-153,35,35,-141,-36,-37,35,35,-40,-41,-42,-43,-44,-45,35,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,35,-124,185,186,-88,35,-143,35,35,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,35,35,-167,35,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,211,-116,-55,-56,35,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,35,-87,35,35,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,35,35,-130,35,-129,-126,35,-115,-149,-150,-147,-148,-151,-168,-39,35,-127,35,-155,35,35,-31,-128,-113,-166,35,-132,-125,-114,-89,-164,-165,-131,]),'SIMBOLO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,36,40,42,45,47,48,49,50,52,53,54,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,89,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,183,184,185,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,224,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,259,262,268,270,271,272,273,274,276,278,279,],[32,32,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,82,-51,-52,-111,32,32,-153,32,32,-141,-36,-37,32,144,-97,-98,-99,-100,-101,-102,-103,-64,-53,-59,-60,-61,-62,-63,-46,-49,32,-157,32,-124,32,-88,32,-143,32,32,-133,-134,-135,-136,-138,-139,-140,-142,-144,32,-154,-137,32,32,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,82,-55,-56,32,32,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,32,-104,-105,32,-87,32,32,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,32,32,-130,32,-129,32,-126,32,-115,-149,-150,-147,-148,-151,-168,-39,32,-127,32,-155,32,32,-31,-128,32,-113,-166,32,-132,-125,-114,-89,-164,-165,-131,]),'FLOTANTE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,40,42,44,45,47,48,49,50,52,53,54,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,90,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,183,184,185,186,188,189,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,224,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,259,262,268,270,271,272,273,274,276,278,279,],[52,52,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,52,-51,52,-52,-111,52,108,52,-153,52,52,-141,-36,-37,52,52,-40,-41,-42,-43,-44,-45,52,52,-97,-98,-99,-100,-101,-102,-103,-64,-53,-59,-60,-61,-62,-63,-46,-49,52,-157,52,-124,52,-88,52,-143,52,52,-133,-134,-135,-136,-138,-139,-140,-142,-144,52,-154,-137,52,52,-167,52,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,52,-55,-56,52,52,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,52,52,52,-104,-105,52,52,-87,108,52,52,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,52,52,-130,52,-129,52,-126,52,-115,-149,-150,-147,-148,-151,-168,-39,52,-127,52,-155,52,52,-31,-128,52,-113,-166,52,-132,-125,-114,-89,-164,-165,-131,]),'ENTERO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,40,42,44,45,47,48,49,50,52,53,54,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,90,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,183,184,185,186,188,189,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,224,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,259,262,268,270,271,272,273,274,276,278,279,],[53,53,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,53,-51,53,-52,-111,53,107,53,-153,53,53,-141,-36,-37,53,53,-40,-41,-42,-43,-44,-45,53,53,-97,-98,-99,-100,-101,-102,-103,-64,-53,-59,-60,-61,-62,-63,-46,-49,53,-157,53,-124,53,-88,53,-143,53,53,-133,-134,-135,-136,-138,-139,-140,-142,-144,53,-154,-137,53,53,-167,53,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,53,-55,-56,53,53,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,53,53,53,-104,-105,53,53,-87,107,53,53,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,53,53,-130,53,-129,53,-126,53,-115,-149,-150,-147,-148,-151,-168,-39,53,-127,53,-155,53,53,-31,-128,53,-113,-166,53,-132,-125,-114,-89,-164,-165,-131,]),'WHEN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,125,126,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[54,54,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,54,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,54,-154,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,54,-31,-128,-113,-132,-114,-89,-164,-131,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[55,55,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,-153,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,55,-31,-128,-113,-132,-114,-89,-164,-131,]),'VARIABLECLASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,36,40,45,47,48,49,50,52,53,54,76,77,78,79,80,81,82,85,86,93,97,98,102,104,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,131,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,188,194,196,197,199,200,202,203,204,205,206,207,212,213,214,215,221,222,223,225,228,230,232,233,234,235,237,239,241,247,248,251,252,253,255,256,257,262,268,270,271,272,273,274,276,278,279,],[56,56,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,81,-51,-52,-111,56,-153,56,56,-141,-36,-37,56,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,56,-124,56,-88,56,-143,56,56,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,56,56,-167,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,81,-55,-56,56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,56,56,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,56,56,-130,56,-129,-126,56,-115,-149,-150,-147,-148,-151,-168,-39,56,-127,56,-155,56,56,-31,-128,-113,-166,56,-132,-125,-114,-89,-164,-165,-131,]),'CADENA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,36,40,41,44,47,50,52,53,65,66,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,188,189,197,199,200,202,203,204,205,206,207,211,212,213,221,223,230,232,233,234,235,237,241,252,253,256,257,262,271,273,274,276,279,],[31,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,78,-51,-52,-111,96,106,-153,-141,-36,-37,31,141,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,31,202,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,78,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,96,218,219,-87,106,-169,-34,-152,-65,-66,-67,-68,-69,-49,31,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,31,-31,-128,-113,-132,-114,-89,-164,-131,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,57,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,188,197,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,237,241,252,256,257,262,271,273,274,276,279,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,-153,-141,-36,-37,-3,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-169,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,-151,-39,-155,-31,-128,-113,-132,-114,-89,-164,-131,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,36,40,47,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,126,128,130,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,181,187,188,190,191,192,193,195,197,198,199,200,202,203,204,205,206,207,212,213,221,223,230,232,233,234,235,236,237,238,241,245,246,250,252,253,256,257,262,263,264,265,266,269,271,273,274,276,277,279,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-29,-30,-32,-27,-95,-111,-153,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-154,-137,197,-145,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-120,-121,-39,-116,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,221,230,-87,232,233,234,235,237,-169,-146,-34,-152,-65,-66,-67,-68,-69,-49,-117,-54,-130,-129,-115,-149,-150,-147,-148,221,-151,252,-39,221,257,262,-155,-92,-31,-128,-113,273,274,-90,-91,276,-132,-114,-89,-164,279,-131,]),'MAS':([4,27,28,30,31,39,51,52,53,84,85,86,114,115,129,136,137,138,139,140,141,142,168,199,202,203,207,215,227,],[-47,59,65,-33,-32,-46,132,-36,-37,-47,-46,-49,-49,-47,-49,59,-47,-35,-33,-33,-32,59,-48,-34,-32,59,-33,-49,-49,]),'MENOS':([4,27,30,39,52,53,84,85,86,114,115,129,136,137,140,142,168,203,207,215,227,],[-47,60,-49,-46,-36,-37,-47,-46,-49,-49,-47,-49,60,-47,-49,60,-48,60,-49,-49,-49,]),'DIVISION':([4,27,30,39,52,53,84,85,86,114,115,129,136,137,140,142,168,203,207,215,227,],[-47,61,-49,-46,-36,-37,-47,-46,-49,-49,-47,-49,61,-47,-49,61,-48,61,-49,-49,-49,]),'MULTIPLICACION':([4,27,30,39,52,53,84,85,86,114,115,129,136,137,140,142,168,203,207,215,227,],[-47,62,-49,-46,-36,-37,-47,-46,-49,-49,-47,-49,62,-47,-49,62,-48,62,-49,-49,-49,]),'EXPONENCIACION':([4,27,30,39,52,53,84,85,86,114,115,129,136,137,140,142,168,203,207,215,227,],[-47,63,-49,-46,-36,-37,-47,-46,-49,-49,-47,-49,63,-47,-49,63,-48,63,-49,-49,-49,]),'MODULO':([4,27,30,39,52,53,84,85,86,114,115,129,136,137,140,142,168,203,207,215,227,],[-47,64,-49,-46,-36,-37,-47,-46,-49,-49,-47,-49,64,-47,-49,64,-48,64,-49,-49,-49,]),'DO':([28,29,31,32,36,40,50,52,53,68,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,127,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,163,164,167,168,169,170,171,172,173,174,175,176,177,188,199,202,203,204,205,206,207,213,221,223,232,233,234,235,241,256,257,271,279,],[-29,-30,-32,-27,-95,-111,-141,-36,-37,156,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,196,-137,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,210,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,-87,-34,-65,-66,-67,-68,-69,-49,-54,-130,-129,-149,-150,-147,-148,-39,-31,-128,-132,-131,]),'ELSE':([28,29,31,32,36,40,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,128,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,163,164,167,168,169,170,171,172,173,174,175,176,177,181,188,198,199,202,203,204,205,206,207,213,221,223,232,233,234,235,236,241,256,257,258,271,279,],[-29,-30,-32,-27,-95,-111,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-137,-145,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,222,-87,-146,-34,-65,-66,-67,-68,-69,-49,-54,-130,-129,-149,-150,-147,-148,222,-39,-31,-128,270,-132,-131,]),'ELSEIF':([28,29,31,32,36,40,50,52,53,76,77,78,79,80,81,82,85,86,93,104,112,115,116,117,118,119,120,121,122,123,128,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,163,164,167,168,169,170,171,172,173,174,175,176,177,181,188,198,199,202,203,204,205,206,207,213,221,223,232,233,234,235,236,241,256,257,258,271,279,],[-29,-30,-32,-27,-95,-111,-141,-36,-37,-64,-53,-59,-60,-61,-62,-63,-46,-49,-157,-88,-143,-133,-134,-135,-136,-138,-139,-140,-142,-144,-137,-145,-50,-47,-35,-33,-49,-71,-72,-73,-74,-75,-76,-70,-78,-79,-57,-58,-108,-109,-55,-56,-93,-48,-94,-96,-106,-28,-107,-110,-112,-118,-156,224,-87,-146,-34,-65,-66,-67,-68,-69,-49,-54,-130,-129,-149,-150,-147,-148,224,-39,-31,-128,224,-132,-131,]),'IGUAL':([30,56,114,129,215,],[66,135,66,66,66,]),'PUNTO':([30,40,140,207,],[68,91,208,240,]),'IGUAL_DOBLEP':([30,32,38,39,52,53,100,101,114,129,215,],[69,-27,69,69,-36,-37,69,69,69,69,69,]),'NAVE':([30,32,38,39,52,53,100,101,114,129,215,],[70,-27,70,70,-36,-37,70,70,70,70,70,]),'DIFERENTE':([30,32,38,39,52,53,100,101,114,129,215,],[71,-27,71,71,-36,-37,71,71,71,71,71,]),'MAYOR_QUE':([30,32,38,39,52,53,100,101,114,129,215,],[72,-27,72,72,-36,-37,72,72,72,72,72,]),'MENOR_QUE':([30,32,38,39,52,53,100,101,114,129,134,215,],[73,-27,73,73,-36,-37,73,73,73,73,201,73,]),'MENOR_IGUAL_QUE':([30,32,38,39,52,53,100,101,114,129,215,],[74,-27,74,74,-36,-37,74,74,74,74,74,]),'MAYOR_IGUAL_QUE':([30,32,38,39,52,53,100,101,114,129,215,],[75,-27,75,75,-36,-37,75,75,75,75,75,]),'PARENTESIS_DER':([31,32,52,53,83,84,85,86,87,88,136,137,139,152,153,168,171,172,173,174,186,226,227,229,244,260,261,],[-32,-27,-36,-37,167,168,-46,-49,169,170,-50,-47,-33,-108,-109,-48,-106,-28,-107,-110,228,248,-122,251,256,-122,-123,]),'Y_SIGNO':([32,52,53,98,152,153,171,172,173,174,248,],[-27,-36,-37,183,-108,-109,-106,-28,-107,-110,183,]),'O_SIGNO':([32,52,53,98,152,153,171,172,173,174,248,],[-27,-36,-37,184,-108,-109,-106,-28,-107,-110,184,]),'LLAVE_DER':([41,52,53,92,94,216,217,218,219,220,],[93,-36,-37,177,-162,-163,-158,-159,-161,-160,]),'EXCLAMACION_BAJO':([42,124,165,182,183,184,224,259,],[99,99,99,99,-104,-105,99,99,]),'CORCHETE_DER':([44,103,104,105,106,107,108,109,110,188,231,],[104,188,-88,-81,-82,-83,-84,-85,-86,-87,-80,]),'COMA':([52,53,77,78,79,80,81,82,94,104,105,106,107,108,109,110,188,217,218,219,220,227,254,260,],[-36,-37,162,-59,-60,-61,-62,-63,178,-88,189,-82,-83,-84,-85,-86,-87,-158,-159,-161,-160,249,267,249,]),'ID_CLASE':([55,201,],[134,239,]),'TRUE':([66,],[150,]),'FALSE':([66,],[151,]),'EACH':([68,161,],[157,212,]),'TO_F':([68,208,],[158,241,]),'CONCAT':([68,208,240,],[159,159,159,]),'SORT':([68,],[160,]),'FOR':([68,],[161,]),'CHOMP':([91,],[176,]),'ASIGNA_HASH':([95,96,],[179,180,]),'BARRA':([156,210,242,254,275,],[209,243,253,268,278,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruccion':([0,],[1,]),'cuerpoInstruccion':([0,3,],[2,57,]),'cuerpo':([0,3,253,],[3,3,265,]),'operacionAritmetica':([0,3,35,45,48,49,54,58,66,97,102,111,113,114,131,133,135,166,186,194,196,214,215,222,228,247,251,253,255,270,],[4,4,84,115,115,115,115,137,137,115,115,115,115,115,115,115,137,115,84,115,115,115,115,115,115,115,115,4,115,115,]),'input_concatenacion':([0,3,66,135,253,],[5,5,146,206,5,]),'asignacion':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[6,6,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,6,116,116,]),'impresion':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[7,7,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,7,117,117,]),'impresion_vacia':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[8,8,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,8,118,118,]),'expresiones_booleanas':([0,3,42,45,48,49,54,97,102,111,113,114,124,131,133,165,166,182,185,194,196,214,215,222,224,228,247,251,253,255,259,270,],[9,9,98,111,128,128,128,128,128,128,128,128,98,128,128,98,128,98,226,128,128,128,128,128,98,128,128,128,9,128,98,128,]),'solicitudDatosTeclado':([0,3,45,48,49,54,66,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[10,10,119,119,119,119,148,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,10,119,119,]),'hashes':([0,3,45,48,49,54,66,97,102,111,113,114,131,133,135,166,194,196,214,215,222,228,247,251,253,255,270,],[11,11,120,120,120,120,143,120,120,120,120,120,120,120,204,120,120,120,120,120,120,120,120,120,11,120,120,]),'estructura_ifUnaLinea':([0,3,45,48,49,54,77,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[12,12,122,122,122,122,163,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,12,122,122,]),'estructura_if':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[13,13,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,13,121,121,]),'funciones':([0,3,253,],[14,14,14,]),'funcionesEstructuras':([0,3,253,],[15,15,15,]),'array':([0,3,44,66,135,189,253,],[16,16,109,145,205,109,16,]),'each_array':([0,3,253,],[17,17,17,]),'each_hash':([0,3,253,],[18,18,18,]),'sentencia_while':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[19,19,112,112,112,112,112,112,190,112,112,112,112,112,112,112,112,112,112,112,112,112,19,112,112,]),'sentencia_while_bool':([0,3,45,48,49,54,77,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[20,20,123,123,123,123,164,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,20,123,123,]),'sentencia_case':([0,3,253,],[21,21,21,]),'sentencias_when':([0,3,47,253,],[22,22,126,22,]),'sentencia_until':([0,3,253,],[23,23,23,]),'definicion_clase':([0,3,253,],[24,24,24,]),'entero_a_flotante':([0,3,66,253,],[25,25,149,25,]),'declaracion':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[26,26,113,127,131,133,131,131,191,131,131,131,200,113,131,238,131,131,131,131,131,131,26,269,131,]),'expresionNumerica':([0,3,35,45,48,49,54,58,66,97,102,111,113,114,131,133,135,166,186,194,196,214,215,222,228,247,251,253,255,270,],[27,27,27,27,27,27,27,136,142,27,27,27,27,27,27,27,203,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'concatenacionSimpleCadena':([0,3,66,135,253,],[28,28,28,28,28,]),'concatenacion_funcion':([0,3,66,135,253,],[29,29,29,29,29,]),'valor_print':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'valorSimbolo':([0,3,42,45,48,49,54,89,97,102,111,113,114,124,131,133,165,166,182,185,194,196,214,215,222,224,228,247,251,253,255,259,270,],[38,38,38,38,38,38,38,171,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'valorNumerico':([0,3,33,35,42,45,48,49,54,58,66,67,90,97,102,111,113,114,124,131,133,135,162,165,166,179,180,182,185,186,194,196,214,215,222,224,228,247,251,253,255,259,270,],[39,39,79,85,100,39,39,39,39,85,85,153,173,39,39,39,39,39,100,39,39,85,79,100,39,217,220,100,100,85,39,39,39,39,39,100,39,39,39,39,39,100,39,]),'sentencia_when':([0,3,47,125,253,],[47,47,47,195,47,]),'encabezadoClase':([0,3,253,],[49,49,49,]),'asignacion_clase':([0,3,45,48,49,54,97,102,111,113,114,131,133,166,194,196,214,215,222,228,247,251,253,255,270,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'valorCadena':([0,3,65,66,132,135,211,253,],[51,51,138,51,199,51,244,51,]),'operadores':([27,136,142,203,],[58,58,58,58,]),'operadoresComparacion':([30,38,39,100,101,114,129,215,],[67,89,90,90,67,67,67,67,]),'valores':([33,162,],[76,213,]),'valor':([33,162,],[77,77,]),'elemento_hash':([41,178,],[92,216,]),'claveValor':([41,178,],[94,94,]),'condicionIf':([42,124,165,182,224,259,],[97,194,214,225,247,272,]),'elementos_array':([44,189,],[103,231,]),'elemento_array':([44,189,],[105,105,]),'declaraciones':([49,97,102,113,114,131,194,214,215,222,228,247,251,270,],[130,181,187,192,193,198,236,245,193,246,250,258,263,277,]),'booleanos':([66,],[147,]),'funcionesArray':([68,],[154,]),'funcionesNumeros':([68,],[155,]),'funcionesFormatoImpresion':([91,],[175,]),'funcionesComparacion':([98,248,],[182,259,]),'estructura_secundaria_if':([181,236,258,],[223,223,271,]),'argumentos':([186,249,],[229,261,]),'each_args_hash':([243,],[255,]),'cuerpo_each':([253,],[264,]),'vacio':([253,],[266,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instruccion","S'",1,None,None,None),
  ('instruccion -> cuerpoInstruccion','instruccion',1,'p_instruccion','proyectolpsintactico.py',15),
  ('cuerpoInstruccion -> cuerpo','cuerpoInstruccion',1,'p_cuerpoInstruccion','proyectolpsintactico.py',18),
  ('cuerpoInstruccion -> cuerpo cuerpoInstruccion','cuerpoInstruccion',2,'p_cuerpoInstruccion','proyectolpsintactico.py',19),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',21),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',22),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',23),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',24),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',25),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',26),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',27),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',28),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',29),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',30),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',31),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',32),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',33),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',34),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',35),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',36),
  ('cuerpo -> sentencia_while_bool','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',37),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',38),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',39),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',40),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',41),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',42),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','proyectolpsintactico.py',43),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','proyectolpsintactico.py',48),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','proyectolpsintactico.py',49),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','proyectolpsintactico.py',76),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','proyectolpsintactico.py',77),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','proyectolpsintactico.py',81),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','proyectolpsintactico.py',93),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','proyectolpsintactico.py',94),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','proyectolpsintactico.py',127),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','proyectolpsintactico.py',128),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','proyectolpsintactico.py',146),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','proyectolpsintactico.py',147),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','proyectolpsintactico.py',158),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','proyectolpsintactico.py',162),
  ('operadores -> MAS','operadores',1,'p_operadores','proyectolpsintactico.py',178),
  ('operadores -> MENOS','operadores',1,'p_operadores','proyectolpsintactico.py',179),
  ('operadores -> DIVISION','operadores',1,'p_operadores','proyectolpsintactico.py',180),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','proyectolpsintactico.py',181),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','proyectolpsintactico.py',182),
  ('operadores -> MODULO','operadores',1,'p_operadores','proyectolpsintactico.py',183),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','proyectolpsintactico.py',187),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','proyectolpsintactico.py',188),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','proyectolpsintactico.py',189),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','proyectolpsintactico.py',190),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','proyectolpsintactico.py',203),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','proyectolpsintactico.py',224),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','proyectolpsintactico.py',225),
  ('valores -> valor','valores',1,'p_valores','proyectolpsintactico.py',228),
  ('valores -> valor COMA valores','valores',3,'p_valores','proyectolpsintactico.py',229),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','proyectolpsintactico.py',230),
  ('valores -> valor sentencia_while_bool','valores',2,'p_valores','proyectolpsintactico.py',231),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','proyectolpsintactico.py',235),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','proyectolpsintactico.py',236),
  ('valor -> CADENA','valor',1,'p_valor','proyectolpsintactico.py',243),
  ('valor -> valorNumerico','valor',1,'p_valor','proyectolpsintactico.py',244),
  ('valor -> VARIABLE','valor',1,'p_valor','proyectolpsintactico.py',245),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','proyectolpsintactico.py',246),
  ('valor -> SIMBOLO','valor',1,'p_valor','proyectolpsintactico.py',247),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','proyectolpsintactico.py',265),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','proyectolpsintactico.py',268),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','proyectolpsintactico.py',269),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','proyectolpsintactico.py',270),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','proyectolpsintactico.py',271),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','proyectolpsintactico.py',272),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','proyectolpsintactico.py',273),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','proyectolpsintactico.py',277),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','proyectolpsintactico.py',278),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','proyectolpsintactico.py',279),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','proyectolpsintactico.py',280),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','proyectolpsintactico.py',281),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','proyectolpsintactico.py',282),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','proyectolpsintactico.py',283),
  ('asignacion -> VARIABLE IGUAL solicitudDatosTeclado','asignacion',3,'p_asignacion','proyectolpsintactico.py',284),
  ('asignacion -> VARIABLE IGUAL entero_a_flotante','asignacion',3,'p_asignacion','proyectolpsintactico.py',285),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','proyectolpsintactico.py',292),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','proyectolpsintactico.py',293),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','proyectolpsintactico.py',296),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','proyectolpsintactico.py',297),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','proyectolpsintactico.py',298),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','proyectolpsintactico.py',299),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','proyectolpsintactico.py',300),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','proyectolpsintactico.py',303),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','proyectolpsintactico.py',304),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','proyectolpsintactico.py',308),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','proyectolpsintactico.py',312),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','proyectolpsintactico.py',313),
  ('vacio -> <empty>','vacio',0,'p_vacio','proyectolpsintactico.py',316),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','proyectolpsintactico.py',320),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','proyectolpsintactico.py',321),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','proyectolpsintactico.py',322),
  ('impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','proyectolpsintactico.py',323),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',327),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',328),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',329),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',330),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',331),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',332),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','proyectolpsintactico.py',333),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','proyectolpsintactico.py',336),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','proyectolpsintactico.py',337),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','proyectolpsintactico.py',341),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','proyectolpsintactico.py',342),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','proyectolpsintactico.py',343),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','proyectolpsintactico.py',344),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','proyectolpsintactico.py',345),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','proyectolpsintactico.py',407),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','proyectolpsintactico.py',408),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END','funciones',6,'p_funciones','proyectolpsintactico.py',411),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END','funciones',7,'p_funciones','proyectolpsintactico.py',412),
  ('funciones -> DEF VARIABLE declaraciones END','funciones',4,'p_funciones','proyectolpsintactico.py',413),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','proyectolpsintactico.py',416),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','proyectolpsintactico.py',417),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','proyectolpsintactico.py',420),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','proyectolpsintactico.py',424),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','proyectolpsintactico.py',427),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','proyectolpsintactico.py',428),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','proyectolpsintactico.py',447),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','proyectolpsintactico.py',448),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','proyectolpsintactico.py',452),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','proyectolpsintactico.py',453),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','proyectolpsintactico.py',454),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','proyectolpsintactico.py',455),
  ('estructura_if -> IF condicionIf declaraciones ELSE declaraciones END','estructura_if',6,'p_estructura_if','proyectolpsintactico.py',459),
  ('estructura_if -> IF condicionIf declaraciones estructura_secundaria_if','estructura_if',4,'p_estructura_if','proyectolpsintactico.py',460),
  ('estructura_ifUnaLinea -> IF condicionIf declaraciones END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','proyectolpsintactico.py',464),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END','estructura_secundaria_if',6,'p_estructura_secundaria_if','proyectolpsintactico.py',469),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','proyectolpsintactico.py',470),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','proyectolpsintactico.py',474),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','proyectolpsintactico.py',475),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','proyectolpsintactico.py',476),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','proyectolpsintactico.py',477),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','proyectolpsintactico.py',478),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','proyectolpsintactico.py',479),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','proyectolpsintactico.py',480),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','proyectolpsintactico.py',481),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','proyectolpsintactico.py',482),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','proyectolpsintactico.py',483),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','proyectolpsintactico.py',484),
  ('declaracion -> sentencia_while_bool','declaracion',1,'p_declaracion','proyectolpsintactico.py',485),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','proyectolpsintactico.py',488),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','proyectolpsintactico.py',489),
  ('sentencia_while_bool -> WHILE declaracion declaraciones END','sentencia_while_bool',4,'p_sentencia_while_bool','proyectolpsintactico.py',492),
  ('sentencia_while_bool -> WHILE VARIABLE declaraciones END','sentencia_while_bool',4,'p_sentencia_while_bool','proyectolpsintactico.py',493),
  ('sentencia_while -> WHILE expresiones_booleanas sentencia_while END','sentencia_while',4,'p_sentencia_while','proyectolpsintactico.py',500),
  ('sentencia_while -> WHILE expresiones_booleanas declaracion END','sentencia_while',4,'p_sentencia_while','proyectolpsintactico.py',501),
  ('sentencia_case -> CASE VARIABLE sentencia_when END','sentencia_case',4,'p_sentencia_case','proyectolpsintactico.py',509),
  ('sentencia_when -> WHEN declaracion declaracion','sentencia_when',3,'p_sentencia_when','proyectolpsintactico.py',512),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','proyectolpsintactico.py',515),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','proyectolpsintactico.py',516),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','proyectolpsintactico.py',520),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','proyectolpsintactico.py',524),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','proyectolpsintactico.py',525),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','proyectolpsintactico.py',528),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','proyectolpsintactico.py',529),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','proyectolpsintactico.py',530),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','proyectolpsintactico.py',531),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','proyectolpsintactico.py',534),
  ('elemento_hash -> claveValor COMA elemento_hash','elemento_hash',3,'p_elemento_hash','proyectolpsintactico.py',535),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','proyectolpsintactico.py',538),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','proyectolpsintactico.py',541),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','proyectolpsintactico.py',542),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','proyectolpsintactico.py',545),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','proyectolpsintactico.py',546),
  ('definicion_clase -> encabezadoClase declaraciones END','definicion_clase',3,'p_definicion_clase','proyectolpsintactico.py',549),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','proyectolpsintactico.py',552),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','proyectolpsintactico.py',553),
  ('cuerpoVariables -> asignacion_clase cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','proyectolpsintactico.py',554),
  ('cuerpoVariables -> asignacion cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','proyectolpsintactico.py',555),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','proyectolpsintactico.py',558),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','proyectolpsintactico.py',559),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','proyectolpsintactico.py',560),
  ('cuerpoClaseE -> cuerpoClase','cuerpoClaseE',1,'p_cuerpoClaseE','proyectolpsintactico.py',564),
  ('cuerpoClaseE -> cuerpoClase cuerpoClaseE','cuerpoClaseE',2,'p_cuerpoClaseE','proyectolpsintactico.py',565),
]
