Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AND
    ARRAY
    BEGIN
    BIGGEREQUAL
    BREAK
    CASE
    CLASS
    DECREMENT
    DEFINED
    DIVIDE
    DO
    ELSE
    ELSIF
    ENSURE
    EQUAL
    FALSE
    FLOAT
    FOR
    HASH
    IN
    INCREMENT
    MINUS
    MODULE
    MULTI_LINE_COMMENT
    NEXT
    NIL
    NOT
    NOTEQUAL
    OR
    PLUS
    POWER
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SEMICOLON
    SINGLE_LINE_COMMENT
    SMALLER
    SMALLEREQUAL
    SUPER
    TRUE
    UNLESS
    UNTIL
    WHEN
    WHILE
    YIELD

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement statement_list
Rule 4     statement -> function_def
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> puts_statement
Rule 8     statement -> expression
Rule 9     variable -> VARIABLE_LOCAL
Rule 10    variable -> VARIABLE_GLOBAL
Rule 11    variable -> VARIABLE_INSTANCIA
Rule 12    variable -> VARIABLE_CLASE
Rule 13    function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
Rule 14    param_list -> VARIABLE_LOCAL COMMA VARIABLE_LOCAL
Rule 15    param_list -> VARIABLE_LOCAL
Rule 16    param_list -> empty
Rule 17    assignment -> variable ASSIGNATION expression
Rule 18    if_statement -> IF expression statement_list END
Rule 19    puts_statement -> PUTS arg_list
Rule 20    expression -> INTEGER
Rule 21    expression -> STRING
Rule 22    expression -> variable
Rule 23    expression -> array
Rule 24    expression -> array_access
Rule 25    expression -> function_call
Rule 26    expression -> binary_operation
Rule 27    expression -> GETS
Rule 28    expression -> hash
Rule 29    array -> LBRACKET array_elements RBRACKET
Rule 30    array_elements -> INTEGER
Rule 31    array_elements -> INTEGER COMMA array_elements
Rule 32    array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
Rule 33    hash -> LBRACE hash_elements RBRACE
Rule 34    hash_elements -> hash_element
Rule 35    hash_elements -> hash_element COMMA hash_elements
Rule 36    hash_elements -> empty
Rule 37    hash_element -> VARIABLE_LOCAL COLON STRING
Rule 38    function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN
Rule 39    arg_list -> expression
Rule 40    arg_list -> expression COMMA arg_list
Rule 41    arg_list -> empty
Rule 42    binary_operation -> expression TIMES expression
Rule 43    binary_operation -> expression BIGGER expression
Rule 44    empty -> <empty>

Terminals, with rules where they appear

ALIAS                : 
AND                  : 
ARRAY                : 
ASSIGNATION          : 17
BEGIN                : 
BIGGER               : 43
BIGGEREQUAL          : 
BREAK                : 
CASE                 : 
CLASS                : 
COLON                : 37
COMMA                : 14 31 35 40
DECREMENT            : 
DEF                  : 13
DEFINED              : 
DIVIDE               : 
DO                   : 
ELSE                 : 
ELSIF                : 
END                  : 13 18
ENSURE               : 
EQUAL                : 
FALSE                : 
FLOAT                : 
FOR                  : 
GETS                 : 27
HASH                 : 
IF                   : 18
IN                   : 
INCREMENT            : 
INTEGER              : 20 30 31 32
LBRACE               : 33
LBRACKET             : 29 32
LPAREN               : 13 38
MINUS                : 
MODULE               : 
MULTI_LINE_COMMENT   : 
NEXT                 : 
NIL                  : 
NOT                  : 
NOTEQUAL             : 
OR                   : 
PLUS                 : 
POWER                : 
PUTS                 : 19
RBRACE               : 33
RBRACKET             : 29 32
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 13 38
SELF                 : 
SEMICOLON            : 
SINGLE_LINE_COMMENT  : 
SMALLER              : 
SMALLEREQUAL         : 
STRING               : 21 37
SUPER                : 
TIMES                : 42
TRUE                 : 
UNLESS               : 
UNTIL                : 
VARIABLE_CLASE       : 12
VARIABLE_GLOBAL      : 10
VARIABLE_INSTANCIA   : 11
VARIABLE_LOCAL       : 9 13 14 14 15 32 37 38
WHEN                 : 
WHILE                : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arg_list             : 19 38 40
array                : 23
array_access         : 24
array_elements       : 29 31
assignment           : 5
binary_operation     : 26
empty                : 16 36 41
expression           : 8 13 17 18 39 40 42 42 43 43
function_call        : 25
function_def         : 4
hash                 : 28
hash_element         : 34 35
hash_elements        : 33 35
if_statement         : 6
param_list           : 13
program              : 0
puts_statement       : 7
statement            : 2 3
statement_list       : 1 3 18
variable             : 17 22

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . puts_statement
    (8) statement -> . expression
    (13) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (17) assignment -> . variable ASSIGNATION expression
    (18) if_statement -> . IF expression statement_list END
    (19) puts_statement -> . PUTS arg_list
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    DEF             shift and go to state 9
    IF              shift and go to state 12
    PUTS            shift and go to state 13
    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    puts_statement                 shift and go to state 7
    expression                     shift and go to state 8
    variable                       shift and go to state 11
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .

    $end            reduce using rule 1 (program -> statement_list .)


state 3

    (2) statement_list -> statement .
    (3) statement_list -> statement . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . puts_statement
    (8) statement -> . expression
    (13) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (17) assignment -> . variable ASSIGNATION expression
    (18) if_statement -> . IF expression statement_list END
    (19) puts_statement -> . PUTS arg_list
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    $end            reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)
    DEF             shift and go to state 9
    IF              shift and go to state 12
    PUTS            shift and go to state 13
    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    statement                      shift and go to state 3
    statement_list                 shift and go to state 27
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    puts_statement                 shift and go to state 7
    expression                     shift and go to state 8
    variable                       shift and go to state 11
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 4

    (4) statement -> function_def .

    DEF             reduce using rule 4 (statement -> function_def .)
    IF              reduce using rule 4 (statement -> function_def .)
    PUTS            reduce using rule 4 (statement -> function_def .)
    INTEGER         reduce using rule 4 (statement -> function_def .)
    STRING          reduce using rule 4 (statement -> function_def .)
    GETS            reduce using rule 4 (statement -> function_def .)
    VARIABLE_LOCAL  reduce using rule 4 (statement -> function_def .)
    VARIABLE_GLOBAL reduce using rule 4 (statement -> function_def .)
    VARIABLE_INSTANCIA reduce using rule 4 (statement -> function_def .)
    VARIABLE_CLASE  reduce using rule 4 (statement -> function_def .)
    LBRACKET        reduce using rule 4 (statement -> function_def .)
    LBRACE          reduce using rule 4 (statement -> function_def .)
    $end            reduce using rule 4 (statement -> function_def .)
    END             reduce using rule 4 (statement -> function_def .)


state 5

    (5) statement -> assignment .

    DEF             reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    PUTS            reduce using rule 5 (statement -> assignment .)
    INTEGER         reduce using rule 5 (statement -> assignment .)
    STRING          reduce using rule 5 (statement -> assignment .)
    GETS            reduce using rule 5 (statement -> assignment .)
    VARIABLE_LOCAL  reduce using rule 5 (statement -> assignment .)
    VARIABLE_GLOBAL reduce using rule 5 (statement -> assignment .)
    VARIABLE_INSTANCIA reduce using rule 5 (statement -> assignment .)
    VARIABLE_CLASE  reduce using rule 5 (statement -> assignment .)
    LBRACKET        reduce using rule 5 (statement -> assignment .)
    LBRACE          reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    END             reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> if_statement .

    DEF             reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    PUTS            reduce using rule 6 (statement -> if_statement .)
    INTEGER         reduce using rule 6 (statement -> if_statement .)
    STRING          reduce using rule 6 (statement -> if_statement .)
    GETS            reduce using rule 6 (statement -> if_statement .)
    VARIABLE_LOCAL  reduce using rule 6 (statement -> if_statement .)
    VARIABLE_GLOBAL reduce using rule 6 (statement -> if_statement .)
    VARIABLE_INSTANCIA reduce using rule 6 (statement -> if_statement .)
    VARIABLE_CLASE  reduce using rule 6 (statement -> if_statement .)
    LBRACKET        reduce using rule 6 (statement -> if_statement .)
    LBRACE          reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    END             reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> puts_statement .

    DEF             reduce using rule 7 (statement -> puts_statement .)
    IF              reduce using rule 7 (statement -> puts_statement .)
    PUTS            reduce using rule 7 (statement -> puts_statement .)
    INTEGER         reduce using rule 7 (statement -> puts_statement .)
    STRING          reduce using rule 7 (statement -> puts_statement .)
    GETS            reduce using rule 7 (statement -> puts_statement .)
    VARIABLE_LOCAL  reduce using rule 7 (statement -> puts_statement .)
    VARIABLE_GLOBAL reduce using rule 7 (statement -> puts_statement .)
    VARIABLE_INSTANCIA reduce using rule 7 (statement -> puts_statement .)
    VARIABLE_CLASE  reduce using rule 7 (statement -> puts_statement .)
    LBRACKET        reduce using rule 7 (statement -> puts_statement .)
    LBRACE          reduce using rule 7 (statement -> puts_statement .)
    $end            reduce using rule 7 (statement -> puts_statement .)
    END             reduce using rule 7 (statement -> puts_statement .)


state 8

    (8) statement -> expression .
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression

    DEF             reduce using rule 8 (statement -> expression .)
    IF              reduce using rule 8 (statement -> expression .)
    PUTS            reduce using rule 8 (statement -> expression .)
    INTEGER         reduce using rule 8 (statement -> expression .)
    STRING          reduce using rule 8 (statement -> expression .)
    GETS            reduce using rule 8 (statement -> expression .)
    VARIABLE_LOCAL  reduce using rule 8 (statement -> expression .)
    VARIABLE_GLOBAL reduce using rule 8 (statement -> expression .)
    VARIABLE_INSTANCIA reduce using rule 8 (statement -> expression .)
    VARIABLE_CLASE  reduce using rule 8 (statement -> expression .)
    LBRACKET        reduce using rule 8 (statement -> expression .)
    LBRACE          reduce using rule 8 (statement -> expression .)
    $end            reduce using rule 8 (statement -> expression .)
    END             reduce using rule 8 (statement -> expression .)
    TIMES           shift and go to state 28
    BIGGER          shift and go to state 29


state 9

    (13) function_def -> DEF . VARIABLE_LOCAL LPAREN param_list RPAREN expression END

    VARIABLE_LOCAL  shift and go to state 30


state 10

    (9) variable -> VARIABLE_LOCAL .
    (32) array_access -> VARIABLE_LOCAL . LBRACKET INTEGER RBRACKET
    (38) function_call -> VARIABLE_LOCAL . LPAREN arg_list RPAREN

  ! shift/reduce conflict for LBRACKET resolved as shift
    ASSIGNATION     reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    TIMES           reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    BIGGER          reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    DEF             reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    IF              reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    PUTS            reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    INTEGER         reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    STRING          reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    GETS            reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    VARIABLE_LOCAL  reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    VARIABLE_GLOBAL reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    VARIABLE_INSTANCIA reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    VARIABLE_CLASE  reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    LBRACE          reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    $end            reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    END             reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    COMMA           reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    RPAREN          reduce using rule 9 (variable -> VARIABLE_LOCAL .)
    LBRACKET        shift and go to state 31
    LPAREN          shift and go to state 32

  ! LBRACKET        [ reduce using rule 9 (variable -> VARIABLE_LOCAL .) ]


state 11

    (17) assignment -> variable . ASSIGNATION expression
    (22) expression -> variable .

    ASSIGNATION     shift and go to state 33
    TIMES           reduce using rule 22 (expression -> variable .)
    BIGGER          reduce using rule 22 (expression -> variable .)
    DEF             reduce using rule 22 (expression -> variable .)
    IF              reduce using rule 22 (expression -> variable .)
    PUTS            reduce using rule 22 (expression -> variable .)
    INTEGER         reduce using rule 22 (expression -> variable .)
    STRING          reduce using rule 22 (expression -> variable .)
    GETS            reduce using rule 22 (expression -> variable .)
    VARIABLE_LOCAL  reduce using rule 22 (expression -> variable .)
    VARIABLE_GLOBAL reduce using rule 22 (expression -> variable .)
    VARIABLE_INSTANCIA reduce using rule 22 (expression -> variable .)
    VARIABLE_CLASE  reduce using rule 22 (expression -> variable .)
    LBRACKET        reduce using rule 22 (expression -> variable .)
    LBRACE          reduce using rule 22 (expression -> variable .)
    $end            reduce using rule 22 (expression -> variable .)
    END             reduce using rule 22 (expression -> variable .)


state 12

    (18) if_statement -> IF . expression statement_list END
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    expression                     shift and go to state 34
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 13

    (19) puts_statement -> PUTS . arg_list
    (39) arg_list -> . expression
    (40) arg_list -> . expression COMMA arg_list
    (41) arg_list -> . empty
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (44) empty -> .
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for GETS resolved as shift
  ! shift/reduce conflict for VARIABLE_LOCAL resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    DEF             reduce using rule 44 (empty -> .)
    IF              reduce using rule 44 (empty -> .)
    PUTS            reduce using rule 44 (empty -> .)
    $end            reduce using rule 44 (empty -> .)
    END             reduce using rule 44 (empty -> .)
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

  ! INTEGER         [ reduce using rule 44 (empty -> .) ]
  ! STRING          [ reduce using rule 44 (empty -> .) ]
  ! GETS            [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_LOCAL  [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 44 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 44 (empty -> .) ]
  ! LBRACE          [ reduce using rule 44 (empty -> .) ]

    arg_list                       shift and go to state 36
    expression                     shift and go to state 37
    empty                          shift and go to state 38
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 14

    (20) expression -> INTEGER .

    TIMES           reduce using rule 20 (expression -> INTEGER .)
    BIGGER          reduce using rule 20 (expression -> INTEGER .)
    DEF             reduce using rule 20 (expression -> INTEGER .)
    IF              reduce using rule 20 (expression -> INTEGER .)
    PUTS            reduce using rule 20 (expression -> INTEGER .)
    INTEGER         reduce using rule 20 (expression -> INTEGER .)
    STRING          reduce using rule 20 (expression -> INTEGER .)
    GETS            reduce using rule 20 (expression -> INTEGER .)
    VARIABLE_LOCAL  reduce using rule 20 (expression -> INTEGER .)
    VARIABLE_GLOBAL reduce using rule 20 (expression -> INTEGER .)
    VARIABLE_INSTANCIA reduce using rule 20 (expression -> INTEGER .)
    VARIABLE_CLASE  reduce using rule 20 (expression -> INTEGER .)
    LBRACKET        reduce using rule 20 (expression -> INTEGER .)
    LBRACE          reduce using rule 20 (expression -> INTEGER .)
    $end            reduce using rule 20 (expression -> INTEGER .)
    END             reduce using rule 20 (expression -> INTEGER .)
    COMMA           reduce using rule 20 (expression -> INTEGER .)
    RPAREN          reduce using rule 20 (expression -> INTEGER .)


state 15

    (21) expression -> STRING .

    TIMES           reduce using rule 21 (expression -> STRING .)
    BIGGER          reduce using rule 21 (expression -> STRING .)
    DEF             reduce using rule 21 (expression -> STRING .)
    IF              reduce using rule 21 (expression -> STRING .)
    PUTS            reduce using rule 21 (expression -> STRING .)
    INTEGER         reduce using rule 21 (expression -> STRING .)
    STRING          reduce using rule 21 (expression -> STRING .)
    GETS            reduce using rule 21 (expression -> STRING .)
    VARIABLE_LOCAL  reduce using rule 21 (expression -> STRING .)
    VARIABLE_GLOBAL reduce using rule 21 (expression -> STRING .)
    VARIABLE_INSTANCIA reduce using rule 21 (expression -> STRING .)
    VARIABLE_CLASE  reduce using rule 21 (expression -> STRING .)
    LBRACKET        reduce using rule 21 (expression -> STRING .)
    LBRACE          reduce using rule 21 (expression -> STRING .)
    $end            reduce using rule 21 (expression -> STRING .)
    END             reduce using rule 21 (expression -> STRING .)
    COMMA           reduce using rule 21 (expression -> STRING .)
    RPAREN          reduce using rule 21 (expression -> STRING .)


state 16

    (23) expression -> array .

    TIMES           reduce using rule 23 (expression -> array .)
    BIGGER          reduce using rule 23 (expression -> array .)
    DEF             reduce using rule 23 (expression -> array .)
    IF              reduce using rule 23 (expression -> array .)
    PUTS            reduce using rule 23 (expression -> array .)
    INTEGER         reduce using rule 23 (expression -> array .)
    STRING          reduce using rule 23 (expression -> array .)
    GETS            reduce using rule 23 (expression -> array .)
    VARIABLE_LOCAL  reduce using rule 23 (expression -> array .)
    VARIABLE_GLOBAL reduce using rule 23 (expression -> array .)
    VARIABLE_INSTANCIA reduce using rule 23 (expression -> array .)
    VARIABLE_CLASE  reduce using rule 23 (expression -> array .)
    LBRACKET        reduce using rule 23 (expression -> array .)
    LBRACE          reduce using rule 23 (expression -> array .)
    $end            reduce using rule 23 (expression -> array .)
    END             reduce using rule 23 (expression -> array .)
    COMMA           reduce using rule 23 (expression -> array .)
    RPAREN          reduce using rule 23 (expression -> array .)


state 17

    (24) expression -> array_access .

    TIMES           reduce using rule 24 (expression -> array_access .)
    BIGGER          reduce using rule 24 (expression -> array_access .)
    DEF             reduce using rule 24 (expression -> array_access .)
    IF              reduce using rule 24 (expression -> array_access .)
    PUTS            reduce using rule 24 (expression -> array_access .)
    INTEGER         reduce using rule 24 (expression -> array_access .)
    STRING          reduce using rule 24 (expression -> array_access .)
    GETS            reduce using rule 24 (expression -> array_access .)
    VARIABLE_LOCAL  reduce using rule 24 (expression -> array_access .)
    VARIABLE_GLOBAL reduce using rule 24 (expression -> array_access .)
    VARIABLE_INSTANCIA reduce using rule 24 (expression -> array_access .)
    VARIABLE_CLASE  reduce using rule 24 (expression -> array_access .)
    LBRACKET        reduce using rule 24 (expression -> array_access .)
    LBRACE          reduce using rule 24 (expression -> array_access .)
    $end            reduce using rule 24 (expression -> array_access .)
    END             reduce using rule 24 (expression -> array_access .)
    COMMA           reduce using rule 24 (expression -> array_access .)
    RPAREN          reduce using rule 24 (expression -> array_access .)


state 18

    (25) expression -> function_call .

    TIMES           reduce using rule 25 (expression -> function_call .)
    BIGGER          reduce using rule 25 (expression -> function_call .)
    DEF             reduce using rule 25 (expression -> function_call .)
    IF              reduce using rule 25 (expression -> function_call .)
    PUTS            reduce using rule 25 (expression -> function_call .)
    INTEGER         reduce using rule 25 (expression -> function_call .)
    STRING          reduce using rule 25 (expression -> function_call .)
    GETS            reduce using rule 25 (expression -> function_call .)
    VARIABLE_LOCAL  reduce using rule 25 (expression -> function_call .)
    VARIABLE_GLOBAL reduce using rule 25 (expression -> function_call .)
    VARIABLE_INSTANCIA reduce using rule 25 (expression -> function_call .)
    VARIABLE_CLASE  reduce using rule 25 (expression -> function_call .)
    LBRACKET        reduce using rule 25 (expression -> function_call .)
    LBRACE          reduce using rule 25 (expression -> function_call .)
    $end            reduce using rule 25 (expression -> function_call .)
    END             reduce using rule 25 (expression -> function_call .)
    COMMA           reduce using rule 25 (expression -> function_call .)
    RPAREN          reduce using rule 25 (expression -> function_call .)


state 19

    (26) expression -> binary_operation .

    TIMES           reduce using rule 26 (expression -> binary_operation .)
    BIGGER          reduce using rule 26 (expression -> binary_operation .)
    DEF             reduce using rule 26 (expression -> binary_operation .)
    IF              reduce using rule 26 (expression -> binary_operation .)
    PUTS            reduce using rule 26 (expression -> binary_operation .)
    INTEGER         reduce using rule 26 (expression -> binary_operation .)
    STRING          reduce using rule 26 (expression -> binary_operation .)
    GETS            reduce using rule 26 (expression -> binary_operation .)
    VARIABLE_LOCAL  reduce using rule 26 (expression -> binary_operation .)
    VARIABLE_GLOBAL reduce using rule 26 (expression -> binary_operation .)
    VARIABLE_INSTANCIA reduce using rule 26 (expression -> binary_operation .)
    VARIABLE_CLASE  reduce using rule 26 (expression -> binary_operation .)
    LBRACKET        reduce using rule 26 (expression -> binary_operation .)
    LBRACE          reduce using rule 26 (expression -> binary_operation .)
    $end            reduce using rule 26 (expression -> binary_operation .)
    END             reduce using rule 26 (expression -> binary_operation .)
    COMMA           reduce using rule 26 (expression -> binary_operation .)
    RPAREN          reduce using rule 26 (expression -> binary_operation .)


state 20

    (27) expression -> GETS .

    TIMES           reduce using rule 27 (expression -> GETS .)
    BIGGER          reduce using rule 27 (expression -> GETS .)
    DEF             reduce using rule 27 (expression -> GETS .)
    IF              reduce using rule 27 (expression -> GETS .)
    PUTS            reduce using rule 27 (expression -> GETS .)
    INTEGER         reduce using rule 27 (expression -> GETS .)
    STRING          reduce using rule 27 (expression -> GETS .)
    GETS            reduce using rule 27 (expression -> GETS .)
    VARIABLE_LOCAL  reduce using rule 27 (expression -> GETS .)
    VARIABLE_GLOBAL reduce using rule 27 (expression -> GETS .)
    VARIABLE_INSTANCIA reduce using rule 27 (expression -> GETS .)
    VARIABLE_CLASE  reduce using rule 27 (expression -> GETS .)
    LBRACKET        reduce using rule 27 (expression -> GETS .)
    LBRACE          reduce using rule 27 (expression -> GETS .)
    $end            reduce using rule 27 (expression -> GETS .)
    END             reduce using rule 27 (expression -> GETS .)
    COMMA           reduce using rule 27 (expression -> GETS .)
    RPAREN          reduce using rule 27 (expression -> GETS .)


state 21

    (28) expression -> hash .

    TIMES           reduce using rule 28 (expression -> hash .)
    BIGGER          reduce using rule 28 (expression -> hash .)
    DEF             reduce using rule 28 (expression -> hash .)
    IF              reduce using rule 28 (expression -> hash .)
    PUTS            reduce using rule 28 (expression -> hash .)
    INTEGER         reduce using rule 28 (expression -> hash .)
    STRING          reduce using rule 28 (expression -> hash .)
    GETS            reduce using rule 28 (expression -> hash .)
    VARIABLE_LOCAL  reduce using rule 28 (expression -> hash .)
    VARIABLE_GLOBAL reduce using rule 28 (expression -> hash .)
    VARIABLE_INSTANCIA reduce using rule 28 (expression -> hash .)
    VARIABLE_CLASE  reduce using rule 28 (expression -> hash .)
    LBRACKET        reduce using rule 28 (expression -> hash .)
    LBRACE          reduce using rule 28 (expression -> hash .)
    $end            reduce using rule 28 (expression -> hash .)
    END             reduce using rule 28 (expression -> hash .)
    COMMA           reduce using rule 28 (expression -> hash .)
    RPAREN          reduce using rule 28 (expression -> hash .)


state 22

    (10) variable -> VARIABLE_GLOBAL .

    ASSIGNATION     reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    TIMES           reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    BIGGER          reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    DEF             reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    IF              reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    PUTS            reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    INTEGER         reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    STRING          reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    GETS            reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_LOCAL  reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_GLOBAL reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_INSTANCIA reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_CLASE  reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    LBRACKET        reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    LBRACE          reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    $end            reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    END             reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    COMMA           reduce using rule 10 (variable -> VARIABLE_GLOBAL .)
    RPAREN          reduce using rule 10 (variable -> VARIABLE_GLOBAL .)


state 23

    (11) variable -> VARIABLE_INSTANCIA .

    ASSIGNATION     reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    TIMES           reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    BIGGER          reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    DEF             reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    IF              reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    PUTS            reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    INTEGER         reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    STRING          reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    GETS            reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_LOCAL  reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_GLOBAL reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_INSTANCIA reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_CLASE  reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    LBRACKET        reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    LBRACE          reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    $end            reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    END             reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    COMMA           reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)
    RPAREN          reduce using rule 11 (variable -> VARIABLE_INSTANCIA .)


state 24

    (12) variable -> VARIABLE_CLASE .

    ASSIGNATION     reduce using rule 12 (variable -> VARIABLE_CLASE .)
    TIMES           reduce using rule 12 (variable -> VARIABLE_CLASE .)
    BIGGER          reduce using rule 12 (variable -> VARIABLE_CLASE .)
    DEF             reduce using rule 12 (variable -> VARIABLE_CLASE .)
    IF              reduce using rule 12 (variable -> VARIABLE_CLASE .)
    PUTS            reduce using rule 12 (variable -> VARIABLE_CLASE .)
    INTEGER         reduce using rule 12 (variable -> VARIABLE_CLASE .)
    STRING          reduce using rule 12 (variable -> VARIABLE_CLASE .)
    GETS            reduce using rule 12 (variable -> VARIABLE_CLASE .)
    VARIABLE_LOCAL  reduce using rule 12 (variable -> VARIABLE_CLASE .)
    VARIABLE_GLOBAL reduce using rule 12 (variable -> VARIABLE_CLASE .)
    VARIABLE_INSTANCIA reduce using rule 12 (variable -> VARIABLE_CLASE .)
    VARIABLE_CLASE  reduce using rule 12 (variable -> VARIABLE_CLASE .)
    LBRACKET        reduce using rule 12 (variable -> VARIABLE_CLASE .)
    LBRACE          reduce using rule 12 (variable -> VARIABLE_CLASE .)
    $end            reduce using rule 12 (variable -> VARIABLE_CLASE .)
    END             reduce using rule 12 (variable -> VARIABLE_CLASE .)
    COMMA           reduce using rule 12 (variable -> VARIABLE_CLASE .)
    RPAREN          reduce using rule 12 (variable -> VARIABLE_CLASE .)


state 25

    (29) array -> LBRACKET . array_elements RBRACKET
    (30) array_elements -> . INTEGER
    (31) array_elements -> . INTEGER COMMA array_elements

    INTEGER         shift and go to state 40

    array_elements                 shift and go to state 39

state 26

    (33) hash -> LBRACE . hash_elements RBRACE
    (34) hash_elements -> . hash_element
    (35) hash_elements -> . hash_element COMMA hash_elements
    (36) hash_elements -> . empty
    (37) hash_element -> . VARIABLE_LOCAL COLON STRING
    (44) empty -> .

    VARIABLE_LOCAL  shift and go to state 44
    RBRACE          reduce using rule 44 (empty -> .)

    hash_elements                  shift and go to state 41
    hash_element                   shift and go to state 42
    empty                          shift and go to state 43

state 27

    (3) statement_list -> statement statement_list .

    $end            reduce using rule 3 (statement_list -> statement statement_list .)
    END             reduce using rule 3 (statement_list -> statement statement_list .)


state 28

    (42) binary_operation -> expression TIMES . expression
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    expression                     shift and go to state 45
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 29

    (43) binary_operation -> expression BIGGER . expression
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    expression                     shift and go to state 46
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 30

    (13) function_def -> DEF VARIABLE_LOCAL . LPAREN param_list RPAREN expression END

    LPAREN          shift and go to state 47


state 31

    (32) array_access -> VARIABLE_LOCAL LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 48


state 32

    (38) function_call -> VARIABLE_LOCAL LPAREN . arg_list RPAREN
    (39) arg_list -> . expression
    (40) arg_list -> . expression COMMA arg_list
    (41) arg_list -> . empty
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (44) empty -> .
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    RPAREN          reduce using rule 44 (empty -> .)
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    arg_list                       shift and go to state 49
    expression                     shift and go to state 37
    empty                          shift and go to state 38
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 33

    (17) assignment -> variable ASSIGNATION . expression
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    variable                       shift and go to state 35
    expression                     shift and go to state 50
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 34

    (18) if_statement -> IF expression . statement_list END
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . puts_statement
    (8) statement -> . expression
    (13) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (17) assignment -> . variable ASSIGNATION expression
    (18) if_statement -> . IF expression statement_list END
    (19) puts_statement -> . PUTS arg_list
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    TIMES           shift and go to state 28
    BIGGER          shift and go to state 29
    DEF             shift and go to state 9
    IF              shift and go to state 12
    PUTS            shift and go to state 13
    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    expression                     shift and go to state 8
    statement_list                 shift and go to state 51
    statement                      shift and go to state 3
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    puts_statement                 shift and go to state 7
    variable                       shift and go to state 11
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 35

    (22) expression -> variable .

    TIMES           reduce using rule 22 (expression -> variable .)
    BIGGER          reduce using rule 22 (expression -> variable .)
    DEF             reduce using rule 22 (expression -> variable .)
    IF              reduce using rule 22 (expression -> variable .)
    PUTS            reduce using rule 22 (expression -> variable .)
    INTEGER         reduce using rule 22 (expression -> variable .)
    STRING          reduce using rule 22 (expression -> variable .)
    GETS            reduce using rule 22 (expression -> variable .)
    VARIABLE_LOCAL  reduce using rule 22 (expression -> variable .)
    VARIABLE_GLOBAL reduce using rule 22 (expression -> variable .)
    VARIABLE_INSTANCIA reduce using rule 22 (expression -> variable .)
    VARIABLE_CLASE  reduce using rule 22 (expression -> variable .)
    LBRACKET        reduce using rule 22 (expression -> variable .)
    LBRACE          reduce using rule 22 (expression -> variable .)
    COMMA           reduce using rule 22 (expression -> variable .)
    $end            reduce using rule 22 (expression -> variable .)
    END             reduce using rule 22 (expression -> variable .)
    RPAREN          reduce using rule 22 (expression -> variable .)


state 36

    (19) puts_statement -> PUTS arg_list .

    DEF             reduce using rule 19 (puts_statement -> PUTS arg_list .)
    IF              reduce using rule 19 (puts_statement -> PUTS arg_list .)
    PUTS            reduce using rule 19 (puts_statement -> PUTS arg_list .)
    INTEGER         reduce using rule 19 (puts_statement -> PUTS arg_list .)
    STRING          reduce using rule 19 (puts_statement -> PUTS arg_list .)
    GETS            reduce using rule 19 (puts_statement -> PUTS arg_list .)
    VARIABLE_LOCAL  reduce using rule 19 (puts_statement -> PUTS arg_list .)
    VARIABLE_GLOBAL reduce using rule 19 (puts_statement -> PUTS arg_list .)
    VARIABLE_INSTANCIA reduce using rule 19 (puts_statement -> PUTS arg_list .)
    VARIABLE_CLASE  reduce using rule 19 (puts_statement -> PUTS arg_list .)
    LBRACKET        reduce using rule 19 (puts_statement -> PUTS arg_list .)
    LBRACE          reduce using rule 19 (puts_statement -> PUTS arg_list .)
    $end            reduce using rule 19 (puts_statement -> PUTS arg_list .)
    END             reduce using rule 19 (puts_statement -> PUTS arg_list .)


state 37

    (39) arg_list -> expression .
    (40) arg_list -> expression . COMMA arg_list
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression

    DEF             reduce using rule 39 (arg_list -> expression .)
    IF              reduce using rule 39 (arg_list -> expression .)
    PUTS            reduce using rule 39 (arg_list -> expression .)
    INTEGER         reduce using rule 39 (arg_list -> expression .)
    STRING          reduce using rule 39 (arg_list -> expression .)
    GETS            reduce using rule 39 (arg_list -> expression .)
    VARIABLE_LOCAL  reduce using rule 39 (arg_list -> expression .)
    VARIABLE_GLOBAL reduce using rule 39 (arg_list -> expression .)
    VARIABLE_INSTANCIA reduce using rule 39 (arg_list -> expression .)
    VARIABLE_CLASE  reduce using rule 39 (arg_list -> expression .)
    LBRACKET        reduce using rule 39 (arg_list -> expression .)
    LBRACE          reduce using rule 39 (arg_list -> expression .)
    $end            reduce using rule 39 (arg_list -> expression .)
    END             reduce using rule 39 (arg_list -> expression .)
    RPAREN          reduce using rule 39 (arg_list -> expression .)
    COMMA           shift and go to state 52
    TIMES           shift and go to state 28
    BIGGER          shift and go to state 29


state 38

    (41) arg_list -> empty .

    DEF             reduce using rule 41 (arg_list -> empty .)
    IF              reduce using rule 41 (arg_list -> empty .)
    PUTS            reduce using rule 41 (arg_list -> empty .)
    INTEGER         reduce using rule 41 (arg_list -> empty .)
    STRING          reduce using rule 41 (arg_list -> empty .)
    GETS            reduce using rule 41 (arg_list -> empty .)
    VARIABLE_LOCAL  reduce using rule 41 (arg_list -> empty .)
    VARIABLE_GLOBAL reduce using rule 41 (arg_list -> empty .)
    VARIABLE_INSTANCIA reduce using rule 41 (arg_list -> empty .)
    VARIABLE_CLASE  reduce using rule 41 (arg_list -> empty .)
    LBRACKET        reduce using rule 41 (arg_list -> empty .)
    LBRACE          reduce using rule 41 (arg_list -> empty .)
    $end            reduce using rule 41 (arg_list -> empty .)
    END             reduce using rule 41 (arg_list -> empty .)
    RPAREN          reduce using rule 41 (arg_list -> empty .)


state 39

    (29) array -> LBRACKET array_elements . RBRACKET

    RBRACKET        shift and go to state 53


state 40

    (30) array_elements -> INTEGER .
    (31) array_elements -> INTEGER . COMMA array_elements

    RBRACKET        reduce using rule 30 (array_elements -> INTEGER .)
    COMMA           shift and go to state 54


state 41

    (33) hash -> LBRACE hash_elements . RBRACE

    RBRACE          shift and go to state 55


state 42

    (34) hash_elements -> hash_element .
    (35) hash_elements -> hash_element . COMMA hash_elements

    RBRACE          reduce using rule 34 (hash_elements -> hash_element .)
    COMMA           shift and go to state 56


state 43

    (36) hash_elements -> empty .

    RBRACE          reduce using rule 36 (hash_elements -> empty .)


state 44

    (37) hash_element -> VARIABLE_LOCAL . COLON STRING

    COLON           shift and go to state 57


state 45

    (42) binary_operation -> expression TIMES expression .
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression

    TIMES           reduce using rule 42 (binary_operation -> expression TIMES expression .)
    BIGGER          reduce using rule 42 (binary_operation -> expression TIMES expression .)
    DEF             reduce using rule 42 (binary_operation -> expression TIMES expression .)
    IF              reduce using rule 42 (binary_operation -> expression TIMES expression .)
    PUTS            reduce using rule 42 (binary_operation -> expression TIMES expression .)
    INTEGER         reduce using rule 42 (binary_operation -> expression TIMES expression .)
    STRING          reduce using rule 42 (binary_operation -> expression TIMES expression .)
    GETS            reduce using rule 42 (binary_operation -> expression TIMES expression .)
    VARIABLE_LOCAL  reduce using rule 42 (binary_operation -> expression TIMES expression .)
    VARIABLE_GLOBAL reduce using rule 42 (binary_operation -> expression TIMES expression .)
    VARIABLE_INSTANCIA reduce using rule 42 (binary_operation -> expression TIMES expression .)
    VARIABLE_CLASE  reduce using rule 42 (binary_operation -> expression TIMES expression .)
    LBRACKET        reduce using rule 42 (binary_operation -> expression TIMES expression .)
    LBRACE          reduce using rule 42 (binary_operation -> expression TIMES expression .)
    $end            reduce using rule 42 (binary_operation -> expression TIMES expression .)
    END             reduce using rule 42 (binary_operation -> expression TIMES expression .)
    COMMA           reduce using rule 42 (binary_operation -> expression TIMES expression .)
    RPAREN          reduce using rule 42 (binary_operation -> expression TIMES expression .)

  ! TIMES           [ shift and go to state 28 ]
  ! BIGGER          [ shift and go to state 29 ]


state 46

    (43) binary_operation -> expression BIGGER expression .
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for BIGGER resolved as shift
    DEF             reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    IF              reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    PUTS            reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    INTEGER         reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    STRING          reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    GETS            reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    VARIABLE_LOCAL  reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    VARIABLE_GLOBAL reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    VARIABLE_INSTANCIA reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    VARIABLE_CLASE  reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    LBRACKET        reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    LBRACE          reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    $end            reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    END             reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    COMMA           reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    RPAREN          reduce using rule 43 (binary_operation -> expression BIGGER expression .)
    TIMES           shift and go to state 28
    BIGGER          shift and go to state 29

  ! TIMES           [ reduce using rule 43 (binary_operation -> expression BIGGER expression .) ]
  ! BIGGER          [ reduce using rule 43 (binary_operation -> expression BIGGER expression .) ]


state 47

    (13) function_def -> DEF VARIABLE_LOCAL LPAREN . param_list RPAREN expression END
    (14) param_list -> . VARIABLE_LOCAL COMMA VARIABLE_LOCAL
    (15) param_list -> . VARIABLE_LOCAL
    (16) param_list -> . empty
    (44) empty -> .

    VARIABLE_LOCAL  shift and go to state 58
    RPAREN          reduce using rule 44 (empty -> .)

    param_list                     shift and go to state 59
    empty                          shift and go to state 60

state 48

    (32) array_access -> VARIABLE_LOCAL LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 61


state 49

    (38) function_call -> VARIABLE_LOCAL LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 62


state 50

    (17) assignment -> variable ASSIGNATION expression .
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression

    DEF             reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    IF              reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    PUTS            reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    INTEGER         reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    STRING          reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    GETS            reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_LOCAL  reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_GLOBAL reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_INSTANCIA reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_CLASE  reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    LBRACKET        reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    LBRACE          reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    $end            reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    END             reduce using rule 17 (assignment -> variable ASSIGNATION expression .)
    TIMES           shift and go to state 28
    BIGGER          shift and go to state 29


state 51

    (18) if_statement -> IF expression statement_list . END

    END             shift and go to state 63


state 52

    (40) arg_list -> expression COMMA . arg_list
    (39) arg_list -> . expression
    (40) arg_list -> . expression COMMA arg_list
    (41) arg_list -> . empty
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (44) empty -> .
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for GETS resolved as shift
  ! shift/reduce conflict for VARIABLE_LOCAL resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    DEF             reduce using rule 44 (empty -> .)
    IF              reduce using rule 44 (empty -> .)
    PUTS            reduce using rule 44 (empty -> .)
    $end            reduce using rule 44 (empty -> .)
    END             reduce using rule 44 (empty -> .)
    RPAREN          reduce using rule 44 (empty -> .)
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

  ! INTEGER         [ reduce using rule 44 (empty -> .) ]
  ! STRING          [ reduce using rule 44 (empty -> .) ]
  ! GETS            [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_LOCAL  [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 44 (empty -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 44 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 44 (empty -> .) ]
  ! LBRACE          [ reduce using rule 44 (empty -> .) ]

    expression                     shift and go to state 37
    arg_list                       shift and go to state 64
    empty                          shift and go to state 38
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 53

    (29) array -> LBRACKET array_elements RBRACKET .

    TIMES           reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    BIGGER          reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    DEF             reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    IF              reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    PUTS            reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    INTEGER         reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    STRING          reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    GETS            reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_LOCAL  reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_GLOBAL reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_INSTANCIA reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_CLASE  reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    LBRACKET        reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    LBRACE          reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    $end            reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    END             reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    COMMA           reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)
    RPAREN          reduce using rule 29 (array -> LBRACKET array_elements RBRACKET .)


state 54

    (31) array_elements -> INTEGER COMMA . array_elements
    (30) array_elements -> . INTEGER
    (31) array_elements -> . INTEGER COMMA array_elements

    INTEGER         shift and go to state 40

    array_elements                 shift and go to state 65

state 55

    (33) hash -> LBRACE hash_elements RBRACE .

    TIMES           reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    BIGGER          reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    DEF             reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    IF              reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    PUTS            reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    INTEGER         reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    STRING          reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    GETS            reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_LOCAL  reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_GLOBAL reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_INSTANCIA reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_CLASE  reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    LBRACKET        reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    LBRACE          reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    $end            reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    END             reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    COMMA           reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)
    RPAREN          reduce using rule 33 (hash -> LBRACE hash_elements RBRACE .)


state 56

    (35) hash_elements -> hash_element COMMA . hash_elements
    (34) hash_elements -> . hash_element
    (35) hash_elements -> . hash_element COMMA hash_elements
    (36) hash_elements -> . empty
    (37) hash_element -> . VARIABLE_LOCAL COLON STRING
    (44) empty -> .

    VARIABLE_LOCAL  shift and go to state 44
    RBRACE          reduce using rule 44 (empty -> .)

    hash_element                   shift and go to state 42
    hash_elements                  shift and go to state 66
    empty                          shift and go to state 43

state 57

    (37) hash_element -> VARIABLE_LOCAL COLON . STRING

    STRING          shift and go to state 67


state 58

    (14) param_list -> VARIABLE_LOCAL . COMMA VARIABLE_LOCAL
    (15) param_list -> VARIABLE_LOCAL .

    COMMA           shift and go to state 68
    RPAREN          reduce using rule 15 (param_list -> VARIABLE_LOCAL .)


state 59

    (13) function_def -> DEF VARIABLE_LOCAL LPAREN param_list . RPAREN expression END

    RPAREN          shift and go to state 69


state 60

    (16) param_list -> empty .

    RPAREN          reduce using rule 16 (param_list -> empty .)


state 61

    (32) array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .

    TIMES           reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    BIGGER          reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    DEF             reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    INTEGER         reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    STRING          reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    GETS            reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_LOCAL  reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_GLOBAL reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_INSTANCIA reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_CLASE  reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    LBRACKET        reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    LBRACE          reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 32 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)


state 62

    (38) function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .

    TIMES           reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    BIGGER          reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    DEF             reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    IF              reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    PUTS            reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    INTEGER         reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    STRING          reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    GETS            reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_LOCAL  reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_GLOBAL reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_INSTANCIA reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_CLASE  reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    LBRACKET        reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    LBRACE          reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    $end            reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    END             reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 38 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)


state 63

    (18) if_statement -> IF expression statement_list END .

    DEF             reduce using rule 18 (if_statement -> IF expression statement_list END .)
    IF              reduce using rule 18 (if_statement -> IF expression statement_list END .)
    PUTS            reduce using rule 18 (if_statement -> IF expression statement_list END .)
    INTEGER         reduce using rule 18 (if_statement -> IF expression statement_list END .)
    STRING          reduce using rule 18 (if_statement -> IF expression statement_list END .)
    GETS            reduce using rule 18 (if_statement -> IF expression statement_list END .)
    VARIABLE_LOCAL  reduce using rule 18 (if_statement -> IF expression statement_list END .)
    VARIABLE_GLOBAL reduce using rule 18 (if_statement -> IF expression statement_list END .)
    VARIABLE_INSTANCIA reduce using rule 18 (if_statement -> IF expression statement_list END .)
    VARIABLE_CLASE  reduce using rule 18 (if_statement -> IF expression statement_list END .)
    LBRACKET        reduce using rule 18 (if_statement -> IF expression statement_list END .)
    LBRACE          reduce using rule 18 (if_statement -> IF expression statement_list END .)
    $end            reduce using rule 18 (if_statement -> IF expression statement_list END .)
    END             reduce using rule 18 (if_statement -> IF expression statement_list END .)


state 64

    (40) arg_list -> expression COMMA arg_list .

    DEF             reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    IF              reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    PUTS            reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    INTEGER         reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    STRING          reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    GETS            reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    VARIABLE_LOCAL  reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    VARIABLE_GLOBAL reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    VARIABLE_INSTANCIA reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    VARIABLE_CLASE  reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    LBRACKET        reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    LBRACE          reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    $end            reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    END             reduce using rule 40 (arg_list -> expression COMMA arg_list .)
    RPAREN          reduce using rule 40 (arg_list -> expression COMMA arg_list .)


state 65

    (31) array_elements -> INTEGER COMMA array_elements .

    RBRACKET        reduce using rule 31 (array_elements -> INTEGER COMMA array_elements .)


state 66

    (35) hash_elements -> hash_element COMMA hash_elements .

    RBRACE          reduce using rule 35 (hash_elements -> hash_element COMMA hash_elements .)


state 67

    (37) hash_element -> VARIABLE_LOCAL COLON STRING .

    COMMA           reduce using rule 37 (hash_element -> VARIABLE_LOCAL COLON STRING .)
    RBRACE          reduce using rule 37 (hash_element -> VARIABLE_LOCAL COLON STRING .)


state 68

    (14) param_list -> VARIABLE_LOCAL COMMA . VARIABLE_LOCAL

    VARIABLE_LOCAL  shift and go to state 70


state 69

    (13) function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN . expression END
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . variable
    (23) expression -> . array
    (24) expression -> . array_access
    (25) expression -> . function_call
    (26) expression -> . binary_operation
    (27) expression -> . GETS
    (28) expression -> . hash
    (9) variable -> . VARIABLE_LOCAL
    (10) variable -> . VARIABLE_GLOBAL
    (11) variable -> . VARIABLE_INSTANCIA
    (12) variable -> . VARIABLE_CLASE
    (29) array -> . LBRACKET array_elements RBRACKET
    (32) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (38) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (42) binary_operation -> . expression TIMES expression
    (43) binary_operation -> . expression BIGGER expression
    (33) hash -> . LBRACE hash_elements RBRACE

    INTEGER         shift and go to state 14
    STRING          shift and go to state 15
    GETS            shift and go to state 20
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 22
    VARIABLE_INSTANCIA shift and go to state 23
    VARIABLE_CLASE  shift and go to state 24
    LBRACKET        shift and go to state 25
    LBRACE          shift and go to state 26

    expression                     shift and go to state 71
    variable                       shift and go to state 35
    array                          shift and go to state 16
    array_access                   shift and go to state 17
    function_call                  shift and go to state 18
    binary_operation               shift and go to state 19
    hash                           shift and go to state 21

state 70

    (14) param_list -> VARIABLE_LOCAL COMMA VARIABLE_LOCAL .

    RPAREN          reduce using rule 14 (param_list -> VARIABLE_LOCAL COMMA VARIABLE_LOCAL .)


state 71

    (13) function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression . END
    (42) binary_operation -> expression . TIMES expression
    (43) binary_operation -> expression . BIGGER expression

    END             shift and go to state 72
    TIMES           shift and go to state 28
    BIGGER          shift and go to state 29


state 72

    (13) function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .

    DEF             reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    IF              reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    PUTS            reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    INTEGER         reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    STRING          reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    GETS            reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_LOCAL  reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_GLOBAL reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_INSTANCIA reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_CLASE  reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    LBRACKET        reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    LBRACE          reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    $end            reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    END             reduce using rule 13 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 10 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 13 resolved as shift
WARNING: shift/reduce conflict for STRING in state 13 resolved as shift
WARNING: shift/reduce conflict for GETS in state 13 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_LOCAL in state 13 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 13 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 13 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 13 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 13 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 13 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 46 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 52 resolved as shift
WARNING: shift/reduce conflict for STRING in state 52 resolved as shift
WARNING: shift/reduce conflict for GETS in state 52 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_LOCAL in state 52 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 52 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 52 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 52 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 52 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 52 resolved as shift
