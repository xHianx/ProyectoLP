Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ARRAY
    BEGIN
    BIGGEREQUAL
    BREAK
    CASE
    CLASS
    DECREMENT
    DEFINED
    DIVIDE
    ELSE
    ELSIF
    ENSURE
    EQUAL
    FALSE
    FLOAT
    FOR
    HASH
    IN
    INCREMENT
    MINUS
    MODULE
    MULTI_LINE_COMMENT
    NEXT
    NIL
    NOTEQUAL
    PLUS
    POWER
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SEMICOLON
    SINGLE_LINE_COMMENT
    SMALLER
    SMALLEREQUAL
    SUPER
    TRUE
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement statement_list
Rule 4     statement -> function_def
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> puts_statement
Rule 9     statement -> gets_statement
Rule 10    statement -> expression
Rule 11    variable -> VARIABLE_LOCAL
Rule 12    variable -> VARIABLE_GLOBAL
Rule 13    variable -> VARIABLE_INSTANCIA
Rule 14    variable -> VARIABLE_CLASE
Rule 15    function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
Rule 16    param_list -> VARIABLE_LOCAL COMMA VARIABLE_LOCAL
Rule 17    param_list -> VARIABLE_LOCAL
Rule 18    param_list -> empty
Rule 19    assignment -> variable ASSIGNATION expression
Rule 20    while_statement -> WHILE expression DO statement_list END
Rule 21    if_statement -> IF expression statement_list END
Rule 22    puts_statement -> PUTS arg_list
Rule 23    gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS
Rule 24    expression -> expression AND expression
Rule 25    expression -> expression OR expression
Rule 26    expression -> NOT expression
Rule 27    expression -> INTEGER
Rule 28    expression -> STRING
Rule 29    expression -> variable
Rule 30    expression -> array
Rule 31    expression -> array_access
Rule 32    expression -> function_call
Rule 33    expression -> binary_operation
Rule 34    expression -> GETS
Rule 35    expression -> hash
Rule 36    array -> LBRACKET array_elements RBRACKET
Rule 37    array_elements -> INTEGER
Rule 38    array_elements -> INTEGER COMMA array_elements
Rule 39    array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
Rule 40    hash -> LBRACE hash_elements RBRACE
Rule 41    hash_elements -> hash_element
Rule 42    hash_elements -> hash_element COMMA hash_elements
Rule 43    hash_elements -> empty
Rule 44    hash_element -> VARIABLE_LOCAL COLON STRING
Rule 45    function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN
Rule 46    arg_list -> expression
Rule 47    arg_list -> expression COMMA arg_list
Rule 48    arg_list -> empty
Rule 49    binary_operation -> expression TIMES expression
Rule 50    binary_operation -> expression BIGGER expression
Rule 51    empty -> <empty>

Terminals, with rules where they appear

ALIAS                : 
AND                  : 24
ARRAY                : 
ASSIGNATION          : 19 23
BEGIN                : 
BIGGER               : 50
BIGGEREQUAL          : 
BREAK                : 
CASE                 : 
CLASS                : 
COLON                : 44
COMMA                : 16 38 42 47
DECREMENT            : 
DEF                  : 15
DEFINED              : 
DIVIDE               : 
DO                   : 20
ELSE                 : 
ELSIF                : 
END                  : 15 20 21
ENSURE               : 
EQUAL                : 
FALSE                : 
FLOAT                : 
FOR                  : 
GETS                 : 23 34
HASH                 : 
IF                   : 21
IN                   : 
INCREMENT            : 
INTEGER              : 27 37 38 39
LBRACE               : 40
LBRACKET             : 36 39
LPAREN               : 15 45
MINUS                : 
MODULE               : 
MULTI_LINE_COMMENT   : 
NEXT                 : 
NIL                  : 
NOT                  : 26
NOTEQUAL             : 
OR                   : 25
PLUS                 : 
POWER                : 
PUTS                 : 22
RBRACE               : 40
RBRACKET             : 36 39
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 15 45
SELF                 : 
SEMICOLON            : 
SINGLE_LINE_COMMENT  : 
SMALLER              : 
SMALLEREQUAL         : 
STRING               : 28 44
SUPER                : 
TIMES                : 49
TRUE                 : 
UNLESS               : 
UNTIL                : 
VARIABLE_CLASE       : 14
VARIABLE_GLOBAL      : 12
VARIABLE_INSTANCIA   : 13
VARIABLE_LOCAL       : 11 15 16 16 17 23 39 44 45
WHEN                 : 
WHILE                : 20
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arg_list             : 22 45 47
array                : 30
array_access         : 31
array_elements       : 36 38
assignment           : 5
binary_operation     : 33
empty                : 18 43 48
expression           : 10 15 19 20 21 24 24 25 25 26 46 47 49 49 50 50
function_call        : 32
function_def         : 4
gets_statement       : 9
hash                 : 35
hash_element         : 41 42
hash_elements        : 40 42
if_statement         : 6
param_list           : 15
program              : 0
puts_statement       : 8
statement            : 2 3
statement_list       : 1 3 20 21
variable             : 19 29
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . puts_statement
    (9) statement -> . gets_statement
    (10) statement -> . expression
    (15) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (19) assignment -> . variable ASSIGNATION expression
    (21) if_statement -> . IF expression statement_list END
    (20) while_statement -> . WHILE expression DO statement_list END
    (22) puts_statement -> . PUTS arg_list
    (23) gets_statement -> . VARIABLE_LOCAL ASSIGNATION GETS
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    DEF             shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    PUTS            shift and go to state 16
    VARIABLE_LOCAL  shift and go to state 12
    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    puts_statement                 shift and go to state 8
    gets_statement                 shift and go to state 9
    expression                     shift and go to state 10
    variable                       shift and go to state 13
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .

    $end            reduce using rule 1 (program -> statement_list .)


state 3

    (2) statement_list -> statement .
    (3) statement_list -> statement . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . puts_statement
    (9) statement -> . gets_statement
    (10) statement -> . expression
    (15) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (19) assignment -> . variable ASSIGNATION expression
    (21) if_statement -> . IF expression statement_list END
    (20) while_statement -> . WHILE expression DO statement_list END
    (22) puts_statement -> . PUTS arg_list
    (23) gets_statement -> . VARIABLE_LOCAL ASSIGNATION GETS
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    $end            reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)
    DEF             shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    PUTS            shift and go to state 16
    VARIABLE_LOCAL  shift and go to state 12
    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    statement                      shift and go to state 3
    statement_list                 shift and go to state 31
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    puts_statement                 shift and go to state 8
    gets_statement                 shift and go to state 9
    expression                     shift and go to state 10
    variable                       shift and go to state 13
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 4

    (4) statement -> function_def .

    DEF             reduce using rule 4 (statement -> function_def .)
    IF              reduce using rule 4 (statement -> function_def .)
    WHILE           reduce using rule 4 (statement -> function_def .)
    PUTS            reduce using rule 4 (statement -> function_def .)
    VARIABLE_LOCAL  reduce using rule 4 (statement -> function_def .)
    NOT             reduce using rule 4 (statement -> function_def .)
    INTEGER         reduce using rule 4 (statement -> function_def .)
    STRING          reduce using rule 4 (statement -> function_def .)
    GETS            reduce using rule 4 (statement -> function_def .)
    VARIABLE_GLOBAL reduce using rule 4 (statement -> function_def .)
    VARIABLE_INSTANCIA reduce using rule 4 (statement -> function_def .)
    VARIABLE_CLASE  reduce using rule 4 (statement -> function_def .)
    LBRACKET        reduce using rule 4 (statement -> function_def .)
    LBRACE          reduce using rule 4 (statement -> function_def .)
    $end            reduce using rule 4 (statement -> function_def .)
    END             reduce using rule 4 (statement -> function_def .)


state 5

    (5) statement -> assignment .

    DEF             reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    WHILE           reduce using rule 5 (statement -> assignment .)
    PUTS            reduce using rule 5 (statement -> assignment .)
    VARIABLE_LOCAL  reduce using rule 5 (statement -> assignment .)
    NOT             reduce using rule 5 (statement -> assignment .)
    INTEGER         reduce using rule 5 (statement -> assignment .)
    STRING          reduce using rule 5 (statement -> assignment .)
    GETS            reduce using rule 5 (statement -> assignment .)
    VARIABLE_GLOBAL reduce using rule 5 (statement -> assignment .)
    VARIABLE_INSTANCIA reduce using rule 5 (statement -> assignment .)
    VARIABLE_CLASE  reduce using rule 5 (statement -> assignment .)
    LBRACKET        reduce using rule 5 (statement -> assignment .)
    LBRACE          reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    END             reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> if_statement .

    DEF             reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    PUTS            reduce using rule 6 (statement -> if_statement .)
    VARIABLE_LOCAL  reduce using rule 6 (statement -> if_statement .)
    NOT             reduce using rule 6 (statement -> if_statement .)
    INTEGER         reduce using rule 6 (statement -> if_statement .)
    STRING          reduce using rule 6 (statement -> if_statement .)
    GETS            reduce using rule 6 (statement -> if_statement .)
    VARIABLE_GLOBAL reduce using rule 6 (statement -> if_statement .)
    VARIABLE_INSTANCIA reduce using rule 6 (statement -> if_statement .)
    VARIABLE_CLASE  reduce using rule 6 (statement -> if_statement .)
    LBRACKET        reduce using rule 6 (statement -> if_statement .)
    LBRACE          reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    END             reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    DEF             reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    PUTS            reduce using rule 7 (statement -> while_statement .)
    VARIABLE_LOCAL  reduce using rule 7 (statement -> while_statement .)
    NOT             reduce using rule 7 (statement -> while_statement .)
    INTEGER         reduce using rule 7 (statement -> while_statement .)
    STRING          reduce using rule 7 (statement -> while_statement .)
    GETS            reduce using rule 7 (statement -> while_statement .)
    VARIABLE_GLOBAL reduce using rule 7 (statement -> while_statement .)
    VARIABLE_INSTANCIA reduce using rule 7 (statement -> while_statement .)
    VARIABLE_CLASE  reduce using rule 7 (statement -> while_statement .)
    LBRACKET        reduce using rule 7 (statement -> while_statement .)
    LBRACE          reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    END             reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> puts_statement .

    DEF             reduce using rule 8 (statement -> puts_statement .)
    IF              reduce using rule 8 (statement -> puts_statement .)
    WHILE           reduce using rule 8 (statement -> puts_statement .)
    PUTS            reduce using rule 8 (statement -> puts_statement .)
    VARIABLE_LOCAL  reduce using rule 8 (statement -> puts_statement .)
    NOT             reduce using rule 8 (statement -> puts_statement .)
    INTEGER         reduce using rule 8 (statement -> puts_statement .)
    STRING          reduce using rule 8 (statement -> puts_statement .)
    GETS            reduce using rule 8 (statement -> puts_statement .)
    VARIABLE_GLOBAL reduce using rule 8 (statement -> puts_statement .)
    VARIABLE_INSTANCIA reduce using rule 8 (statement -> puts_statement .)
    VARIABLE_CLASE  reduce using rule 8 (statement -> puts_statement .)
    LBRACKET        reduce using rule 8 (statement -> puts_statement .)
    LBRACE          reduce using rule 8 (statement -> puts_statement .)
    $end            reduce using rule 8 (statement -> puts_statement .)
    END             reduce using rule 8 (statement -> puts_statement .)


state 9

    (9) statement -> gets_statement .

    DEF             reduce using rule 9 (statement -> gets_statement .)
    IF              reduce using rule 9 (statement -> gets_statement .)
    WHILE           reduce using rule 9 (statement -> gets_statement .)
    PUTS            reduce using rule 9 (statement -> gets_statement .)
    VARIABLE_LOCAL  reduce using rule 9 (statement -> gets_statement .)
    NOT             reduce using rule 9 (statement -> gets_statement .)
    INTEGER         reduce using rule 9 (statement -> gets_statement .)
    STRING          reduce using rule 9 (statement -> gets_statement .)
    GETS            reduce using rule 9 (statement -> gets_statement .)
    VARIABLE_GLOBAL reduce using rule 9 (statement -> gets_statement .)
    VARIABLE_INSTANCIA reduce using rule 9 (statement -> gets_statement .)
    VARIABLE_CLASE  reduce using rule 9 (statement -> gets_statement .)
    LBRACKET        reduce using rule 9 (statement -> gets_statement .)
    LBRACE          reduce using rule 9 (statement -> gets_statement .)
    $end            reduce using rule 9 (statement -> gets_statement .)
    END             reduce using rule 9 (statement -> gets_statement .)


state 10

    (10) statement -> expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    DEF             reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    PUTS            reduce using rule 10 (statement -> expression .)
    VARIABLE_LOCAL  reduce using rule 10 (statement -> expression .)
    NOT             reduce using rule 10 (statement -> expression .)
    INTEGER         reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    GETS            reduce using rule 10 (statement -> expression .)
    VARIABLE_GLOBAL reduce using rule 10 (statement -> expression .)
    VARIABLE_INSTANCIA reduce using rule 10 (statement -> expression .)
    VARIABLE_CLASE  reduce using rule 10 (statement -> expression .)
    LBRACKET        reduce using rule 10 (statement -> expression .)
    LBRACE          reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35


state 11

    (15) function_def -> DEF . VARIABLE_LOCAL LPAREN param_list RPAREN expression END

    VARIABLE_LOCAL  shift and go to state 36


state 12

    (23) gets_statement -> VARIABLE_LOCAL . ASSIGNATION GETS
    (11) variable -> VARIABLE_LOCAL .
    (39) array_access -> VARIABLE_LOCAL . LBRACKET INTEGER RBRACKET
    (45) function_call -> VARIABLE_LOCAL . LPAREN arg_list RPAREN

  ! shift/reduce conflict for ASSIGNATION resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    ASSIGNATION     shift and go to state 37
    AND             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    OR              reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    TIMES           reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    BIGGER          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    DEF             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    IF              reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    WHILE           reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    PUTS            reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_LOCAL  reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    NOT             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    INTEGER         reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    STRING          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    GETS            reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_GLOBAL reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_INSTANCIA reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_CLASE  reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    LBRACE          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    $end            reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    END             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    LBRACKET        shift and go to state 38
    LPAREN          shift and go to state 39

  ! ASSIGNATION     [ reduce using rule 11 (variable -> VARIABLE_LOCAL .) ]
  ! LBRACKET        [ reduce using rule 11 (variable -> VARIABLE_LOCAL .) ]


state 13

    (19) assignment -> variable . ASSIGNATION expression
    (29) expression -> variable .

    ASSIGNATION     shift and go to state 40
    AND             reduce using rule 29 (expression -> variable .)
    OR              reduce using rule 29 (expression -> variable .)
    TIMES           reduce using rule 29 (expression -> variable .)
    BIGGER          reduce using rule 29 (expression -> variable .)
    DEF             reduce using rule 29 (expression -> variable .)
    IF              reduce using rule 29 (expression -> variable .)
    WHILE           reduce using rule 29 (expression -> variable .)
    PUTS            reduce using rule 29 (expression -> variable .)
    VARIABLE_LOCAL  reduce using rule 29 (expression -> variable .)
    NOT             reduce using rule 29 (expression -> variable .)
    INTEGER         reduce using rule 29 (expression -> variable .)
    STRING          reduce using rule 29 (expression -> variable .)
    GETS            reduce using rule 29 (expression -> variable .)
    VARIABLE_GLOBAL reduce using rule 29 (expression -> variable .)
    VARIABLE_INSTANCIA reduce using rule 29 (expression -> variable .)
    VARIABLE_CLASE  reduce using rule 29 (expression -> variable .)
    LBRACKET        reduce using rule 29 (expression -> variable .)
    LBRACE          reduce using rule 29 (expression -> variable .)
    $end            reduce using rule 29 (expression -> variable .)
    END             reduce using rule 29 (expression -> variable .)


state 14

    (21) if_statement -> IF . expression statement_list END
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 41
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 15

    (20) while_statement -> WHILE . expression DO statement_list END
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 44
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 16

    (22) puts_statement -> PUTS . arg_list
    (46) arg_list -> . expression
    (47) arg_list -> . expression COMMA arg_list
    (48) arg_list -> . empty
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (51) empty -> .
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for GETS resolved as shift
  ! shift/reduce conflict for VARIABLE_LOCAL resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    DEF             reduce using rule 51 (empty -> .)
    IF              reduce using rule 51 (empty -> .)
    WHILE           reduce using rule 51 (empty -> .)
    PUTS            reduce using rule 51 (empty -> .)
    $end            reduce using rule 51 (empty -> .)
    END             reduce using rule 51 (empty -> .)
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

  ! VARIABLE_LOCAL  [ reduce using rule 51 (empty -> .) ]
  ! NOT             [ reduce using rule 51 (empty -> .) ]
  ! INTEGER         [ reduce using rule 51 (empty -> .) ]
  ! STRING          [ reduce using rule 51 (empty -> .) ]
  ! GETS            [ reduce using rule 51 (empty -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 51 (empty -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 51 (empty -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 51 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 51 (empty -> .) ]
  ! LBRACE          [ reduce using rule 51 (empty -> .) ]

    arg_list                       shift and go to state 45
    expression                     shift and go to state 46
    empty                          shift and go to state 47
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 17

    (34) expression -> GETS .

    AND             reduce using rule 34 (expression -> GETS .)
    OR              reduce using rule 34 (expression -> GETS .)
    TIMES           reduce using rule 34 (expression -> GETS .)
    BIGGER          reduce using rule 34 (expression -> GETS .)
    DEF             reduce using rule 34 (expression -> GETS .)
    IF              reduce using rule 34 (expression -> GETS .)
    WHILE           reduce using rule 34 (expression -> GETS .)
    PUTS            reduce using rule 34 (expression -> GETS .)
    VARIABLE_LOCAL  reduce using rule 34 (expression -> GETS .)
    NOT             reduce using rule 34 (expression -> GETS .)
    INTEGER         reduce using rule 34 (expression -> GETS .)
    STRING          reduce using rule 34 (expression -> GETS .)
    GETS            reduce using rule 34 (expression -> GETS .)
    VARIABLE_GLOBAL reduce using rule 34 (expression -> GETS .)
    VARIABLE_INSTANCIA reduce using rule 34 (expression -> GETS .)
    VARIABLE_CLASE  reduce using rule 34 (expression -> GETS .)
    LBRACKET        reduce using rule 34 (expression -> GETS .)
    LBRACE          reduce using rule 34 (expression -> GETS .)
    $end            reduce using rule 34 (expression -> GETS .)
    END             reduce using rule 34 (expression -> GETS .)
    DO              reduce using rule 34 (expression -> GETS .)
    COMMA           reduce using rule 34 (expression -> GETS .)
    RPAREN          reduce using rule 34 (expression -> GETS .)


state 18

    (26) expression -> NOT . expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 48
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 19

    (27) expression -> INTEGER .

    AND             reduce using rule 27 (expression -> INTEGER .)
    OR              reduce using rule 27 (expression -> INTEGER .)
    TIMES           reduce using rule 27 (expression -> INTEGER .)
    BIGGER          reduce using rule 27 (expression -> INTEGER .)
    DEF             reduce using rule 27 (expression -> INTEGER .)
    IF              reduce using rule 27 (expression -> INTEGER .)
    WHILE           reduce using rule 27 (expression -> INTEGER .)
    PUTS            reduce using rule 27 (expression -> INTEGER .)
    VARIABLE_LOCAL  reduce using rule 27 (expression -> INTEGER .)
    NOT             reduce using rule 27 (expression -> INTEGER .)
    INTEGER         reduce using rule 27 (expression -> INTEGER .)
    STRING          reduce using rule 27 (expression -> INTEGER .)
    GETS            reduce using rule 27 (expression -> INTEGER .)
    VARIABLE_GLOBAL reduce using rule 27 (expression -> INTEGER .)
    VARIABLE_INSTANCIA reduce using rule 27 (expression -> INTEGER .)
    VARIABLE_CLASE  reduce using rule 27 (expression -> INTEGER .)
    LBRACKET        reduce using rule 27 (expression -> INTEGER .)
    LBRACE          reduce using rule 27 (expression -> INTEGER .)
    $end            reduce using rule 27 (expression -> INTEGER .)
    END             reduce using rule 27 (expression -> INTEGER .)
    DO              reduce using rule 27 (expression -> INTEGER .)
    COMMA           reduce using rule 27 (expression -> INTEGER .)
    RPAREN          reduce using rule 27 (expression -> INTEGER .)


state 20

    (28) expression -> STRING .

    AND             reduce using rule 28 (expression -> STRING .)
    OR              reduce using rule 28 (expression -> STRING .)
    TIMES           reduce using rule 28 (expression -> STRING .)
    BIGGER          reduce using rule 28 (expression -> STRING .)
    DEF             reduce using rule 28 (expression -> STRING .)
    IF              reduce using rule 28 (expression -> STRING .)
    WHILE           reduce using rule 28 (expression -> STRING .)
    PUTS            reduce using rule 28 (expression -> STRING .)
    VARIABLE_LOCAL  reduce using rule 28 (expression -> STRING .)
    NOT             reduce using rule 28 (expression -> STRING .)
    INTEGER         reduce using rule 28 (expression -> STRING .)
    STRING          reduce using rule 28 (expression -> STRING .)
    GETS            reduce using rule 28 (expression -> STRING .)
    VARIABLE_GLOBAL reduce using rule 28 (expression -> STRING .)
    VARIABLE_INSTANCIA reduce using rule 28 (expression -> STRING .)
    VARIABLE_CLASE  reduce using rule 28 (expression -> STRING .)
    LBRACKET        reduce using rule 28 (expression -> STRING .)
    LBRACE          reduce using rule 28 (expression -> STRING .)
    $end            reduce using rule 28 (expression -> STRING .)
    END             reduce using rule 28 (expression -> STRING .)
    DO              reduce using rule 28 (expression -> STRING .)
    COMMA           reduce using rule 28 (expression -> STRING .)
    RPAREN          reduce using rule 28 (expression -> STRING .)


state 21

    (30) expression -> array .

    AND             reduce using rule 30 (expression -> array .)
    OR              reduce using rule 30 (expression -> array .)
    TIMES           reduce using rule 30 (expression -> array .)
    BIGGER          reduce using rule 30 (expression -> array .)
    DEF             reduce using rule 30 (expression -> array .)
    IF              reduce using rule 30 (expression -> array .)
    WHILE           reduce using rule 30 (expression -> array .)
    PUTS            reduce using rule 30 (expression -> array .)
    VARIABLE_LOCAL  reduce using rule 30 (expression -> array .)
    NOT             reduce using rule 30 (expression -> array .)
    INTEGER         reduce using rule 30 (expression -> array .)
    STRING          reduce using rule 30 (expression -> array .)
    GETS            reduce using rule 30 (expression -> array .)
    VARIABLE_GLOBAL reduce using rule 30 (expression -> array .)
    VARIABLE_INSTANCIA reduce using rule 30 (expression -> array .)
    VARIABLE_CLASE  reduce using rule 30 (expression -> array .)
    LBRACKET        reduce using rule 30 (expression -> array .)
    LBRACE          reduce using rule 30 (expression -> array .)
    $end            reduce using rule 30 (expression -> array .)
    END             reduce using rule 30 (expression -> array .)
    DO              reduce using rule 30 (expression -> array .)
    COMMA           reduce using rule 30 (expression -> array .)
    RPAREN          reduce using rule 30 (expression -> array .)


state 22

    (31) expression -> array_access .

    AND             reduce using rule 31 (expression -> array_access .)
    OR              reduce using rule 31 (expression -> array_access .)
    TIMES           reduce using rule 31 (expression -> array_access .)
    BIGGER          reduce using rule 31 (expression -> array_access .)
    DEF             reduce using rule 31 (expression -> array_access .)
    IF              reduce using rule 31 (expression -> array_access .)
    WHILE           reduce using rule 31 (expression -> array_access .)
    PUTS            reduce using rule 31 (expression -> array_access .)
    VARIABLE_LOCAL  reduce using rule 31 (expression -> array_access .)
    NOT             reduce using rule 31 (expression -> array_access .)
    INTEGER         reduce using rule 31 (expression -> array_access .)
    STRING          reduce using rule 31 (expression -> array_access .)
    GETS            reduce using rule 31 (expression -> array_access .)
    VARIABLE_GLOBAL reduce using rule 31 (expression -> array_access .)
    VARIABLE_INSTANCIA reduce using rule 31 (expression -> array_access .)
    VARIABLE_CLASE  reduce using rule 31 (expression -> array_access .)
    LBRACKET        reduce using rule 31 (expression -> array_access .)
    LBRACE          reduce using rule 31 (expression -> array_access .)
    $end            reduce using rule 31 (expression -> array_access .)
    END             reduce using rule 31 (expression -> array_access .)
    DO              reduce using rule 31 (expression -> array_access .)
    COMMA           reduce using rule 31 (expression -> array_access .)
    RPAREN          reduce using rule 31 (expression -> array_access .)


state 23

    (32) expression -> function_call .

    AND             reduce using rule 32 (expression -> function_call .)
    OR              reduce using rule 32 (expression -> function_call .)
    TIMES           reduce using rule 32 (expression -> function_call .)
    BIGGER          reduce using rule 32 (expression -> function_call .)
    DEF             reduce using rule 32 (expression -> function_call .)
    IF              reduce using rule 32 (expression -> function_call .)
    WHILE           reduce using rule 32 (expression -> function_call .)
    PUTS            reduce using rule 32 (expression -> function_call .)
    VARIABLE_LOCAL  reduce using rule 32 (expression -> function_call .)
    NOT             reduce using rule 32 (expression -> function_call .)
    INTEGER         reduce using rule 32 (expression -> function_call .)
    STRING          reduce using rule 32 (expression -> function_call .)
    GETS            reduce using rule 32 (expression -> function_call .)
    VARIABLE_GLOBAL reduce using rule 32 (expression -> function_call .)
    VARIABLE_INSTANCIA reduce using rule 32 (expression -> function_call .)
    VARIABLE_CLASE  reduce using rule 32 (expression -> function_call .)
    LBRACKET        reduce using rule 32 (expression -> function_call .)
    LBRACE          reduce using rule 32 (expression -> function_call .)
    $end            reduce using rule 32 (expression -> function_call .)
    END             reduce using rule 32 (expression -> function_call .)
    DO              reduce using rule 32 (expression -> function_call .)
    COMMA           reduce using rule 32 (expression -> function_call .)
    RPAREN          reduce using rule 32 (expression -> function_call .)


state 24

    (33) expression -> binary_operation .

    AND             reduce using rule 33 (expression -> binary_operation .)
    OR              reduce using rule 33 (expression -> binary_operation .)
    TIMES           reduce using rule 33 (expression -> binary_operation .)
    BIGGER          reduce using rule 33 (expression -> binary_operation .)
    DEF             reduce using rule 33 (expression -> binary_operation .)
    IF              reduce using rule 33 (expression -> binary_operation .)
    WHILE           reduce using rule 33 (expression -> binary_operation .)
    PUTS            reduce using rule 33 (expression -> binary_operation .)
    VARIABLE_LOCAL  reduce using rule 33 (expression -> binary_operation .)
    NOT             reduce using rule 33 (expression -> binary_operation .)
    INTEGER         reduce using rule 33 (expression -> binary_operation .)
    STRING          reduce using rule 33 (expression -> binary_operation .)
    GETS            reduce using rule 33 (expression -> binary_operation .)
    VARIABLE_GLOBAL reduce using rule 33 (expression -> binary_operation .)
    VARIABLE_INSTANCIA reduce using rule 33 (expression -> binary_operation .)
    VARIABLE_CLASE  reduce using rule 33 (expression -> binary_operation .)
    LBRACKET        reduce using rule 33 (expression -> binary_operation .)
    LBRACE          reduce using rule 33 (expression -> binary_operation .)
    $end            reduce using rule 33 (expression -> binary_operation .)
    END             reduce using rule 33 (expression -> binary_operation .)
    DO              reduce using rule 33 (expression -> binary_operation .)
    COMMA           reduce using rule 33 (expression -> binary_operation .)
    RPAREN          reduce using rule 33 (expression -> binary_operation .)


state 25

    (35) expression -> hash .

    AND             reduce using rule 35 (expression -> hash .)
    OR              reduce using rule 35 (expression -> hash .)
    TIMES           reduce using rule 35 (expression -> hash .)
    BIGGER          reduce using rule 35 (expression -> hash .)
    DEF             reduce using rule 35 (expression -> hash .)
    IF              reduce using rule 35 (expression -> hash .)
    WHILE           reduce using rule 35 (expression -> hash .)
    PUTS            reduce using rule 35 (expression -> hash .)
    VARIABLE_LOCAL  reduce using rule 35 (expression -> hash .)
    NOT             reduce using rule 35 (expression -> hash .)
    INTEGER         reduce using rule 35 (expression -> hash .)
    STRING          reduce using rule 35 (expression -> hash .)
    GETS            reduce using rule 35 (expression -> hash .)
    VARIABLE_GLOBAL reduce using rule 35 (expression -> hash .)
    VARIABLE_INSTANCIA reduce using rule 35 (expression -> hash .)
    VARIABLE_CLASE  reduce using rule 35 (expression -> hash .)
    LBRACKET        reduce using rule 35 (expression -> hash .)
    LBRACE          reduce using rule 35 (expression -> hash .)
    $end            reduce using rule 35 (expression -> hash .)
    END             reduce using rule 35 (expression -> hash .)
    DO              reduce using rule 35 (expression -> hash .)
    COMMA           reduce using rule 35 (expression -> hash .)
    RPAREN          reduce using rule 35 (expression -> hash .)


state 26

    (12) variable -> VARIABLE_GLOBAL .

    ASSIGNATION     reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    AND             reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    OR              reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    TIMES           reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    BIGGER          reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    DEF             reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    IF              reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    WHILE           reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    PUTS            reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_LOCAL  reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    NOT             reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    INTEGER         reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    STRING          reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    GETS            reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_GLOBAL reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_INSTANCIA reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_CLASE  reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    LBRACKET        reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    LBRACE          reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    $end            reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    END             reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    DO              reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    COMMA           reduce using rule 12 (variable -> VARIABLE_GLOBAL .)
    RPAREN          reduce using rule 12 (variable -> VARIABLE_GLOBAL .)


state 27

    (13) variable -> VARIABLE_INSTANCIA .

    ASSIGNATION     reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    AND             reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    OR              reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    TIMES           reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    BIGGER          reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    DEF             reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    IF              reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    WHILE           reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    PUTS            reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_LOCAL  reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    NOT             reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    INTEGER         reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    STRING          reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    GETS            reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_GLOBAL reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_INSTANCIA reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_CLASE  reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    LBRACKET        reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    LBRACE          reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    $end            reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    END             reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    DO              reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    COMMA           reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)
    RPAREN          reduce using rule 13 (variable -> VARIABLE_INSTANCIA .)


state 28

    (14) variable -> VARIABLE_CLASE .

    ASSIGNATION     reduce using rule 14 (variable -> VARIABLE_CLASE .)
    AND             reduce using rule 14 (variable -> VARIABLE_CLASE .)
    OR              reduce using rule 14 (variable -> VARIABLE_CLASE .)
    TIMES           reduce using rule 14 (variable -> VARIABLE_CLASE .)
    BIGGER          reduce using rule 14 (variable -> VARIABLE_CLASE .)
    DEF             reduce using rule 14 (variable -> VARIABLE_CLASE .)
    IF              reduce using rule 14 (variable -> VARIABLE_CLASE .)
    WHILE           reduce using rule 14 (variable -> VARIABLE_CLASE .)
    PUTS            reduce using rule 14 (variable -> VARIABLE_CLASE .)
    VARIABLE_LOCAL  reduce using rule 14 (variable -> VARIABLE_CLASE .)
    NOT             reduce using rule 14 (variable -> VARIABLE_CLASE .)
    INTEGER         reduce using rule 14 (variable -> VARIABLE_CLASE .)
    STRING          reduce using rule 14 (variable -> VARIABLE_CLASE .)
    GETS            reduce using rule 14 (variable -> VARIABLE_CLASE .)
    VARIABLE_GLOBAL reduce using rule 14 (variable -> VARIABLE_CLASE .)
    VARIABLE_INSTANCIA reduce using rule 14 (variable -> VARIABLE_CLASE .)
    VARIABLE_CLASE  reduce using rule 14 (variable -> VARIABLE_CLASE .)
    LBRACKET        reduce using rule 14 (variable -> VARIABLE_CLASE .)
    LBRACE          reduce using rule 14 (variable -> VARIABLE_CLASE .)
    $end            reduce using rule 14 (variable -> VARIABLE_CLASE .)
    END             reduce using rule 14 (variable -> VARIABLE_CLASE .)
    DO              reduce using rule 14 (variable -> VARIABLE_CLASE .)
    COMMA           reduce using rule 14 (variable -> VARIABLE_CLASE .)
    RPAREN          reduce using rule 14 (variable -> VARIABLE_CLASE .)


state 29

    (36) array -> LBRACKET . array_elements RBRACKET
    (37) array_elements -> . INTEGER
    (38) array_elements -> . INTEGER COMMA array_elements

    INTEGER         shift and go to state 50

    array_elements                 shift and go to state 49

state 30

    (40) hash -> LBRACE . hash_elements RBRACE
    (41) hash_elements -> . hash_element
    (42) hash_elements -> . hash_element COMMA hash_elements
    (43) hash_elements -> . empty
    (44) hash_element -> . VARIABLE_LOCAL COLON STRING
    (51) empty -> .

    VARIABLE_LOCAL  shift and go to state 54
    RBRACE          reduce using rule 51 (empty -> .)

    hash_elements                  shift and go to state 51
    hash_element                   shift and go to state 52
    empty                          shift and go to state 53

state 31

    (3) statement_list -> statement statement_list .

    $end            reduce using rule 3 (statement_list -> statement statement_list .)
    END             reduce using rule 3 (statement_list -> statement statement_list .)


state 32

    (24) expression -> expression AND . expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 55
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 33

    (25) expression -> expression OR . expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 56
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 34

    (49) binary_operation -> expression TIMES . expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 57
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 35

    (50) binary_operation -> expression BIGGER . expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 58
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 36

    (15) function_def -> DEF VARIABLE_LOCAL . LPAREN param_list RPAREN expression END

    LPAREN          shift and go to state 59


state 37

    (23) gets_statement -> VARIABLE_LOCAL ASSIGNATION . GETS

    GETS            shift and go to state 60


state 38

    (39) array_access -> VARIABLE_LOCAL LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 61


state 39

    (45) function_call -> VARIABLE_LOCAL LPAREN . arg_list RPAREN
    (46) arg_list -> . expression
    (47) arg_list -> . expression COMMA arg_list
    (48) arg_list -> . empty
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (51) empty -> .
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    RPAREN          reduce using rule 51 (empty -> .)
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    arg_list                       shift and go to state 62
    expression                     shift and go to state 46
    empty                          shift and go to state 47
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 40

    (19) assignment -> variable ASSIGNATION . expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    variable                       shift and go to state 42
    expression                     shift and go to state 63
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 41

    (21) if_statement -> IF expression . statement_list END
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . puts_statement
    (9) statement -> . gets_statement
    (10) statement -> . expression
    (15) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (19) assignment -> . variable ASSIGNATION expression
    (21) if_statement -> . IF expression statement_list END
    (20) while_statement -> . WHILE expression DO statement_list END
    (22) puts_statement -> . PUTS arg_list
    (23) gets_statement -> . VARIABLE_LOCAL ASSIGNATION GETS
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35
    DEF             shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    PUTS            shift and go to state 16
    VARIABLE_LOCAL  shift and go to state 12
    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 10
    statement_list                 shift and go to state 64
    statement                      shift and go to state 3
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    puts_statement                 shift and go to state 8
    gets_statement                 shift and go to state 9
    variable                       shift and go to state 13
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 42

    (29) expression -> variable .

    AND             reduce using rule 29 (expression -> variable .)
    OR              reduce using rule 29 (expression -> variable .)
    TIMES           reduce using rule 29 (expression -> variable .)
    BIGGER          reduce using rule 29 (expression -> variable .)
    DEF             reduce using rule 29 (expression -> variable .)
    IF              reduce using rule 29 (expression -> variable .)
    WHILE           reduce using rule 29 (expression -> variable .)
    PUTS            reduce using rule 29 (expression -> variable .)
    VARIABLE_LOCAL  reduce using rule 29 (expression -> variable .)
    NOT             reduce using rule 29 (expression -> variable .)
    INTEGER         reduce using rule 29 (expression -> variable .)
    STRING          reduce using rule 29 (expression -> variable .)
    GETS            reduce using rule 29 (expression -> variable .)
    VARIABLE_GLOBAL reduce using rule 29 (expression -> variable .)
    VARIABLE_INSTANCIA reduce using rule 29 (expression -> variable .)
    VARIABLE_CLASE  reduce using rule 29 (expression -> variable .)
    LBRACKET        reduce using rule 29 (expression -> variable .)
    LBRACE          reduce using rule 29 (expression -> variable .)
    DO              reduce using rule 29 (expression -> variable .)
    COMMA           reduce using rule 29 (expression -> variable .)
    $end            reduce using rule 29 (expression -> variable .)
    END             reduce using rule 29 (expression -> variable .)
    RPAREN          reduce using rule 29 (expression -> variable .)


state 43

    (11) variable -> VARIABLE_LOCAL .
    (39) array_access -> VARIABLE_LOCAL . LBRACKET INTEGER RBRACKET
    (45) function_call -> VARIABLE_LOCAL . LPAREN arg_list RPAREN

  ! shift/reduce conflict for LBRACKET resolved as shift
    AND             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    OR              reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    TIMES           reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    BIGGER          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    DEF             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    IF              reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    WHILE           reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    PUTS            reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_LOCAL  reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    NOT             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    INTEGER         reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    STRING          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    GETS            reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_GLOBAL reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_INSTANCIA reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    VARIABLE_CLASE  reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    LBRACE          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    DO              reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    COMMA           reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    $end            reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    END             reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    RPAREN          reduce using rule 11 (variable -> VARIABLE_LOCAL .)
    LBRACKET        shift and go to state 38
    LPAREN          shift and go to state 39

  ! LBRACKET        [ reduce using rule 11 (variable -> VARIABLE_LOCAL .) ]


state 44

    (20) while_statement -> WHILE expression . DO statement_list END
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    DO              shift and go to state 65
    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35


state 45

    (22) puts_statement -> PUTS arg_list .

    DEF             reduce using rule 22 (puts_statement -> PUTS arg_list .)
    IF              reduce using rule 22 (puts_statement -> PUTS arg_list .)
    WHILE           reduce using rule 22 (puts_statement -> PUTS arg_list .)
    PUTS            reduce using rule 22 (puts_statement -> PUTS arg_list .)
    VARIABLE_LOCAL  reduce using rule 22 (puts_statement -> PUTS arg_list .)
    NOT             reduce using rule 22 (puts_statement -> PUTS arg_list .)
    INTEGER         reduce using rule 22 (puts_statement -> PUTS arg_list .)
    STRING          reduce using rule 22 (puts_statement -> PUTS arg_list .)
    GETS            reduce using rule 22 (puts_statement -> PUTS arg_list .)
    VARIABLE_GLOBAL reduce using rule 22 (puts_statement -> PUTS arg_list .)
    VARIABLE_INSTANCIA reduce using rule 22 (puts_statement -> PUTS arg_list .)
    VARIABLE_CLASE  reduce using rule 22 (puts_statement -> PUTS arg_list .)
    LBRACKET        reduce using rule 22 (puts_statement -> PUTS arg_list .)
    LBRACE          reduce using rule 22 (puts_statement -> PUTS arg_list .)
    $end            reduce using rule 22 (puts_statement -> PUTS arg_list .)
    END             reduce using rule 22 (puts_statement -> PUTS arg_list .)


state 46

    (46) arg_list -> expression .
    (47) arg_list -> expression . COMMA arg_list
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    DEF             reduce using rule 46 (arg_list -> expression .)
    IF              reduce using rule 46 (arg_list -> expression .)
    WHILE           reduce using rule 46 (arg_list -> expression .)
    PUTS            reduce using rule 46 (arg_list -> expression .)
    VARIABLE_LOCAL  reduce using rule 46 (arg_list -> expression .)
    NOT             reduce using rule 46 (arg_list -> expression .)
    INTEGER         reduce using rule 46 (arg_list -> expression .)
    STRING          reduce using rule 46 (arg_list -> expression .)
    GETS            reduce using rule 46 (arg_list -> expression .)
    VARIABLE_GLOBAL reduce using rule 46 (arg_list -> expression .)
    VARIABLE_INSTANCIA reduce using rule 46 (arg_list -> expression .)
    VARIABLE_CLASE  reduce using rule 46 (arg_list -> expression .)
    LBRACKET        reduce using rule 46 (arg_list -> expression .)
    LBRACE          reduce using rule 46 (arg_list -> expression .)
    $end            reduce using rule 46 (arg_list -> expression .)
    END             reduce using rule 46 (arg_list -> expression .)
    RPAREN          reduce using rule 46 (arg_list -> expression .)
    COMMA           shift and go to state 66
    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35


state 47

    (48) arg_list -> empty .

    DEF             reduce using rule 48 (arg_list -> empty .)
    IF              reduce using rule 48 (arg_list -> empty .)
    WHILE           reduce using rule 48 (arg_list -> empty .)
    PUTS            reduce using rule 48 (arg_list -> empty .)
    VARIABLE_LOCAL  reduce using rule 48 (arg_list -> empty .)
    NOT             reduce using rule 48 (arg_list -> empty .)
    INTEGER         reduce using rule 48 (arg_list -> empty .)
    STRING          reduce using rule 48 (arg_list -> empty .)
    GETS            reduce using rule 48 (arg_list -> empty .)
    VARIABLE_GLOBAL reduce using rule 48 (arg_list -> empty .)
    VARIABLE_INSTANCIA reduce using rule 48 (arg_list -> empty .)
    VARIABLE_CLASE  reduce using rule 48 (arg_list -> empty .)
    LBRACKET        reduce using rule 48 (arg_list -> empty .)
    LBRACE          reduce using rule 48 (arg_list -> empty .)
    $end            reduce using rule 48 (arg_list -> empty .)
    END             reduce using rule 48 (arg_list -> empty .)
    RPAREN          reduce using rule 48 (arg_list -> empty .)


state 48

    (26) expression -> NOT expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    AND             reduce using rule 26 (expression -> NOT expression .)
    OR              reduce using rule 26 (expression -> NOT expression .)
    TIMES           reduce using rule 26 (expression -> NOT expression .)
    BIGGER          reduce using rule 26 (expression -> NOT expression .)
    DEF             reduce using rule 26 (expression -> NOT expression .)
    IF              reduce using rule 26 (expression -> NOT expression .)
    WHILE           reduce using rule 26 (expression -> NOT expression .)
    PUTS            reduce using rule 26 (expression -> NOT expression .)
    VARIABLE_LOCAL  reduce using rule 26 (expression -> NOT expression .)
    NOT             reduce using rule 26 (expression -> NOT expression .)
    INTEGER         reduce using rule 26 (expression -> NOT expression .)
    STRING          reduce using rule 26 (expression -> NOT expression .)
    GETS            reduce using rule 26 (expression -> NOT expression .)
    VARIABLE_GLOBAL reduce using rule 26 (expression -> NOT expression .)
    VARIABLE_INSTANCIA reduce using rule 26 (expression -> NOT expression .)
    VARIABLE_CLASE  reduce using rule 26 (expression -> NOT expression .)
    LBRACKET        reduce using rule 26 (expression -> NOT expression .)
    LBRACE          reduce using rule 26 (expression -> NOT expression .)
    $end            reduce using rule 26 (expression -> NOT expression .)
    END             reduce using rule 26 (expression -> NOT expression .)
    DO              reduce using rule 26 (expression -> NOT expression .)
    COMMA           reduce using rule 26 (expression -> NOT expression .)
    RPAREN          reduce using rule 26 (expression -> NOT expression .)

  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! BIGGER          [ shift and go to state 35 ]


state 49

    (36) array -> LBRACKET array_elements . RBRACKET

    RBRACKET        shift and go to state 67


state 50

    (37) array_elements -> INTEGER .
    (38) array_elements -> INTEGER . COMMA array_elements

    RBRACKET        reduce using rule 37 (array_elements -> INTEGER .)
    COMMA           shift and go to state 68


state 51

    (40) hash -> LBRACE hash_elements . RBRACE

    RBRACE          shift and go to state 69


state 52

    (41) hash_elements -> hash_element .
    (42) hash_elements -> hash_element . COMMA hash_elements

    RBRACE          reduce using rule 41 (hash_elements -> hash_element .)
    COMMA           shift and go to state 70


state 53

    (43) hash_elements -> empty .

    RBRACE          reduce using rule 43 (hash_elements -> empty .)


state 54

    (44) hash_element -> VARIABLE_LOCAL . COLON STRING

    COLON           shift and go to state 71


state 55

    (24) expression -> expression AND expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    AND             reduce using rule 24 (expression -> expression AND expression .)
    OR              reduce using rule 24 (expression -> expression AND expression .)
    TIMES           reduce using rule 24 (expression -> expression AND expression .)
    BIGGER          reduce using rule 24 (expression -> expression AND expression .)
    DEF             reduce using rule 24 (expression -> expression AND expression .)
    IF              reduce using rule 24 (expression -> expression AND expression .)
    WHILE           reduce using rule 24 (expression -> expression AND expression .)
    PUTS            reduce using rule 24 (expression -> expression AND expression .)
    VARIABLE_LOCAL  reduce using rule 24 (expression -> expression AND expression .)
    NOT             reduce using rule 24 (expression -> expression AND expression .)
    INTEGER         reduce using rule 24 (expression -> expression AND expression .)
    STRING          reduce using rule 24 (expression -> expression AND expression .)
    GETS            reduce using rule 24 (expression -> expression AND expression .)
    VARIABLE_GLOBAL reduce using rule 24 (expression -> expression AND expression .)
    VARIABLE_INSTANCIA reduce using rule 24 (expression -> expression AND expression .)
    VARIABLE_CLASE  reduce using rule 24 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 24 (expression -> expression AND expression .)
    LBRACE          reduce using rule 24 (expression -> expression AND expression .)
    $end            reduce using rule 24 (expression -> expression AND expression .)
    END             reduce using rule 24 (expression -> expression AND expression .)
    DO              reduce using rule 24 (expression -> expression AND expression .)
    COMMA           reduce using rule 24 (expression -> expression AND expression .)
    RPAREN          reduce using rule 24 (expression -> expression AND expression .)

  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! BIGGER          [ shift and go to state 35 ]


state 56

    (25) expression -> expression OR expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    AND             reduce using rule 25 (expression -> expression OR expression .)
    OR              reduce using rule 25 (expression -> expression OR expression .)
    TIMES           reduce using rule 25 (expression -> expression OR expression .)
    BIGGER          reduce using rule 25 (expression -> expression OR expression .)
    DEF             reduce using rule 25 (expression -> expression OR expression .)
    IF              reduce using rule 25 (expression -> expression OR expression .)
    WHILE           reduce using rule 25 (expression -> expression OR expression .)
    PUTS            reduce using rule 25 (expression -> expression OR expression .)
    VARIABLE_LOCAL  reduce using rule 25 (expression -> expression OR expression .)
    NOT             reduce using rule 25 (expression -> expression OR expression .)
    INTEGER         reduce using rule 25 (expression -> expression OR expression .)
    STRING          reduce using rule 25 (expression -> expression OR expression .)
    GETS            reduce using rule 25 (expression -> expression OR expression .)
    VARIABLE_GLOBAL reduce using rule 25 (expression -> expression OR expression .)
    VARIABLE_INSTANCIA reduce using rule 25 (expression -> expression OR expression .)
    VARIABLE_CLASE  reduce using rule 25 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 25 (expression -> expression OR expression .)
    LBRACE          reduce using rule 25 (expression -> expression OR expression .)
    $end            reduce using rule 25 (expression -> expression OR expression .)
    END             reduce using rule 25 (expression -> expression OR expression .)
    DO              reduce using rule 25 (expression -> expression OR expression .)
    COMMA           reduce using rule 25 (expression -> expression OR expression .)
    RPAREN          reduce using rule 25 (expression -> expression OR expression .)

  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! BIGGER          [ shift and go to state 35 ]


state 57

    (49) binary_operation -> expression TIMES expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    TIMES           reduce using rule 49 (binary_operation -> expression TIMES expression .)
    BIGGER          reduce using rule 49 (binary_operation -> expression TIMES expression .)
    DEF             reduce using rule 49 (binary_operation -> expression TIMES expression .)
    IF              reduce using rule 49 (binary_operation -> expression TIMES expression .)
    WHILE           reduce using rule 49 (binary_operation -> expression TIMES expression .)
    PUTS            reduce using rule 49 (binary_operation -> expression TIMES expression .)
    VARIABLE_LOCAL  reduce using rule 49 (binary_operation -> expression TIMES expression .)
    NOT             reduce using rule 49 (binary_operation -> expression TIMES expression .)
    INTEGER         reduce using rule 49 (binary_operation -> expression TIMES expression .)
    STRING          reduce using rule 49 (binary_operation -> expression TIMES expression .)
    GETS            reduce using rule 49 (binary_operation -> expression TIMES expression .)
    VARIABLE_GLOBAL reduce using rule 49 (binary_operation -> expression TIMES expression .)
    VARIABLE_INSTANCIA reduce using rule 49 (binary_operation -> expression TIMES expression .)
    VARIABLE_CLASE  reduce using rule 49 (binary_operation -> expression TIMES expression .)
    LBRACKET        reduce using rule 49 (binary_operation -> expression TIMES expression .)
    LBRACE          reduce using rule 49 (binary_operation -> expression TIMES expression .)
    $end            reduce using rule 49 (binary_operation -> expression TIMES expression .)
    END             reduce using rule 49 (binary_operation -> expression TIMES expression .)
    DO              reduce using rule 49 (binary_operation -> expression TIMES expression .)
    COMMA           reduce using rule 49 (binary_operation -> expression TIMES expression .)
    RPAREN          reduce using rule 49 (binary_operation -> expression TIMES expression .)
    AND             shift and go to state 32
    OR              shift and go to state 33

  ! AND             [ reduce using rule 49 (binary_operation -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 49 (binary_operation -> expression TIMES expression .) ]
  ! TIMES           [ shift and go to state 34 ]
  ! BIGGER          [ shift and go to state 35 ]


state 58

    (50) binary_operation -> expression BIGGER expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for BIGGER resolved as shift
    DEF             reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    IF              reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    WHILE           reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    PUTS            reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    VARIABLE_LOCAL  reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    NOT             reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    INTEGER         reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    STRING          reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    GETS            reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    VARIABLE_GLOBAL reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    VARIABLE_INSTANCIA reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    VARIABLE_CLASE  reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    LBRACKET        reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    LBRACE          reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    $end            reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    END             reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    DO              reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    COMMA           reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    RPAREN          reduce using rule 50 (binary_operation -> expression BIGGER expression .)
    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35

  ! AND             [ reduce using rule 50 (binary_operation -> expression BIGGER expression .) ]
  ! OR              [ reduce using rule 50 (binary_operation -> expression BIGGER expression .) ]
  ! TIMES           [ reduce using rule 50 (binary_operation -> expression BIGGER expression .) ]
  ! BIGGER          [ reduce using rule 50 (binary_operation -> expression BIGGER expression .) ]


state 59

    (15) function_def -> DEF VARIABLE_LOCAL LPAREN . param_list RPAREN expression END
    (16) param_list -> . VARIABLE_LOCAL COMMA VARIABLE_LOCAL
    (17) param_list -> . VARIABLE_LOCAL
    (18) param_list -> . empty
    (51) empty -> .

    VARIABLE_LOCAL  shift and go to state 72
    RPAREN          reduce using rule 51 (empty -> .)

    param_list                     shift and go to state 73
    empty                          shift and go to state 74

state 60

    (23) gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .

    DEF             reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    IF              reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    WHILE           reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    PUTS            reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    VARIABLE_LOCAL  reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    NOT             reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    INTEGER         reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    STRING          reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    GETS            reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    VARIABLE_GLOBAL reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    VARIABLE_INSTANCIA reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    VARIABLE_CLASE  reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    LBRACKET        reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    LBRACE          reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    $end            reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)
    END             reduce using rule 23 (gets_statement -> VARIABLE_LOCAL ASSIGNATION GETS .)


state 61

    (39) array_access -> VARIABLE_LOCAL LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 75


state 62

    (45) function_call -> VARIABLE_LOCAL LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 76


state 63

    (19) assignment -> variable ASSIGNATION expression .
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    DEF             reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    IF              reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    WHILE           reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    PUTS            reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_LOCAL  reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    NOT             reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    INTEGER         reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    STRING          reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    GETS            reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_GLOBAL reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_INSTANCIA reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    VARIABLE_CLASE  reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    LBRACKET        reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    LBRACE          reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    $end            reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    END             reduce using rule 19 (assignment -> variable ASSIGNATION expression .)
    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35


state 64

    (21) if_statement -> IF expression statement_list . END

    END             shift and go to state 77


state 65

    (20) while_statement -> WHILE expression DO . statement_list END
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . function_def
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . puts_statement
    (9) statement -> . gets_statement
    (10) statement -> . expression
    (15) function_def -> . DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END
    (19) assignment -> . variable ASSIGNATION expression
    (21) if_statement -> . IF expression statement_list END
    (20) while_statement -> . WHILE expression DO statement_list END
    (22) puts_statement -> . PUTS arg_list
    (23) gets_statement -> . VARIABLE_LOCAL ASSIGNATION GETS
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    DEF             shift and go to state 11
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    PUTS            shift and go to state 16
    VARIABLE_LOCAL  shift and go to state 12
    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 10
    statement_list                 shift and go to state 78
    statement                      shift and go to state 3
    function_def                   shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    puts_statement                 shift and go to state 8
    gets_statement                 shift and go to state 9
    variable                       shift and go to state 13
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 66

    (47) arg_list -> expression COMMA . arg_list
    (46) arg_list -> . expression
    (47) arg_list -> . expression COMMA arg_list
    (48) arg_list -> . empty
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (51) empty -> .
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for GETS resolved as shift
  ! shift/reduce conflict for VARIABLE_LOCAL resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    DEF             reduce using rule 51 (empty -> .)
    IF              reduce using rule 51 (empty -> .)
    WHILE           reduce using rule 51 (empty -> .)
    PUTS            reduce using rule 51 (empty -> .)
    $end            reduce using rule 51 (empty -> .)
    END             reduce using rule 51 (empty -> .)
    RPAREN          reduce using rule 51 (empty -> .)
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

  ! VARIABLE_LOCAL  [ reduce using rule 51 (empty -> .) ]
  ! NOT             [ reduce using rule 51 (empty -> .) ]
  ! INTEGER         [ reduce using rule 51 (empty -> .) ]
  ! STRING          [ reduce using rule 51 (empty -> .) ]
  ! GETS            [ reduce using rule 51 (empty -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 51 (empty -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 51 (empty -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 51 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 51 (empty -> .) ]
  ! LBRACE          [ reduce using rule 51 (empty -> .) ]

    expression                     shift and go to state 46
    arg_list                       shift and go to state 79
    empty                          shift and go to state 47
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 67

    (36) array -> LBRACKET array_elements RBRACKET .

    AND             reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    OR              reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    TIMES           reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    BIGGER          reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    DEF             reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    IF              reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    WHILE           reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    PUTS            reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_LOCAL  reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    NOT             reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    INTEGER         reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    STRING          reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    GETS            reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_GLOBAL reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_INSTANCIA reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    VARIABLE_CLASE  reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    LBRACKET        reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    LBRACE          reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    $end            reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    END             reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    DO              reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    COMMA           reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)
    RPAREN          reduce using rule 36 (array -> LBRACKET array_elements RBRACKET .)


state 68

    (38) array_elements -> INTEGER COMMA . array_elements
    (37) array_elements -> . INTEGER
    (38) array_elements -> . INTEGER COMMA array_elements

    INTEGER         shift and go to state 50

    array_elements                 shift and go to state 80

state 69

    (40) hash -> LBRACE hash_elements RBRACE .

    AND             reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    OR              reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    TIMES           reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    BIGGER          reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    DEF             reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    IF              reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    WHILE           reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    PUTS            reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_LOCAL  reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    NOT             reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    INTEGER         reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    STRING          reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    GETS            reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_GLOBAL reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_INSTANCIA reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    VARIABLE_CLASE  reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    LBRACKET        reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    LBRACE          reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    $end            reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    END             reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    DO              reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    COMMA           reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)
    RPAREN          reduce using rule 40 (hash -> LBRACE hash_elements RBRACE .)


state 70

    (42) hash_elements -> hash_element COMMA . hash_elements
    (41) hash_elements -> . hash_element
    (42) hash_elements -> . hash_element COMMA hash_elements
    (43) hash_elements -> . empty
    (44) hash_element -> . VARIABLE_LOCAL COLON STRING
    (51) empty -> .

    VARIABLE_LOCAL  shift and go to state 54
    RBRACE          reduce using rule 51 (empty -> .)

    hash_element                   shift and go to state 52
    hash_elements                  shift and go to state 81
    empty                          shift and go to state 53

state 71

    (44) hash_element -> VARIABLE_LOCAL COLON . STRING

    STRING          shift and go to state 82


state 72

    (16) param_list -> VARIABLE_LOCAL . COMMA VARIABLE_LOCAL
    (17) param_list -> VARIABLE_LOCAL .

    COMMA           shift and go to state 83
    RPAREN          reduce using rule 17 (param_list -> VARIABLE_LOCAL .)


state 73

    (15) function_def -> DEF VARIABLE_LOCAL LPAREN param_list . RPAREN expression END

    RPAREN          shift and go to state 84


state 74

    (18) param_list -> empty .

    RPAREN          reduce using rule 18 (param_list -> empty .)


state 75

    (39) array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .

    AND             reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    OR              reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    TIMES           reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    BIGGER          reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    DEF             reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    WHILE           reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_LOCAL  reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    NOT             reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    INTEGER         reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    STRING          reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    GETS            reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_GLOBAL reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_INSTANCIA reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    VARIABLE_CLASE  reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    LBRACKET        reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    LBRACE          reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    DO              reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 39 (array_access -> VARIABLE_LOCAL LBRACKET INTEGER RBRACKET .)


state 76

    (45) function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .

    AND             reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    OR              reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    BIGGER          reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    DEF             reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    IF              reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    WHILE           reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    PUTS            reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_LOCAL  reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    NOT             reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    INTEGER         reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    STRING          reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    GETS            reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_GLOBAL reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_INSTANCIA reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    VARIABLE_CLASE  reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    LBRACKET        reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    LBRACE          reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    $end            reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    END             reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    DO              reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 45 (function_call -> VARIABLE_LOCAL LPAREN arg_list RPAREN .)


state 77

    (21) if_statement -> IF expression statement_list END .

    DEF             reduce using rule 21 (if_statement -> IF expression statement_list END .)
    IF              reduce using rule 21 (if_statement -> IF expression statement_list END .)
    WHILE           reduce using rule 21 (if_statement -> IF expression statement_list END .)
    PUTS            reduce using rule 21 (if_statement -> IF expression statement_list END .)
    VARIABLE_LOCAL  reduce using rule 21 (if_statement -> IF expression statement_list END .)
    NOT             reduce using rule 21 (if_statement -> IF expression statement_list END .)
    INTEGER         reduce using rule 21 (if_statement -> IF expression statement_list END .)
    STRING          reduce using rule 21 (if_statement -> IF expression statement_list END .)
    GETS            reduce using rule 21 (if_statement -> IF expression statement_list END .)
    VARIABLE_GLOBAL reduce using rule 21 (if_statement -> IF expression statement_list END .)
    VARIABLE_INSTANCIA reduce using rule 21 (if_statement -> IF expression statement_list END .)
    VARIABLE_CLASE  reduce using rule 21 (if_statement -> IF expression statement_list END .)
    LBRACKET        reduce using rule 21 (if_statement -> IF expression statement_list END .)
    LBRACE          reduce using rule 21 (if_statement -> IF expression statement_list END .)
    $end            reduce using rule 21 (if_statement -> IF expression statement_list END .)
    END             reduce using rule 21 (if_statement -> IF expression statement_list END .)


state 78

    (20) while_statement -> WHILE expression DO statement_list . END

    END             shift and go to state 85


state 79

    (47) arg_list -> expression COMMA arg_list .

    DEF             reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    IF              reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    WHILE           reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    PUTS            reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    VARIABLE_LOCAL  reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    NOT             reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    INTEGER         reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    STRING          reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    GETS            reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    VARIABLE_GLOBAL reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    VARIABLE_INSTANCIA reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    VARIABLE_CLASE  reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    LBRACKET        reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    LBRACE          reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    $end            reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    END             reduce using rule 47 (arg_list -> expression COMMA arg_list .)
    RPAREN          reduce using rule 47 (arg_list -> expression COMMA arg_list .)


state 80

    (38) array_elements -> INTEGER COMMA array_elements .

    RBRACKET        reduce using rule 38 (array_elements -> INTEGER COMMA array_elements .)


state 81

    (42) hash_elements -> hash_element COMMA hash_elements .

    RBRACE          reduce using rule 42 (hash_elements -> hash_element COMMA hash_elements .)


state 82

    (44) hash_element -> VARIABLE_LOCAL COLON STRING .

    COMMA           reduce using rule 44 (hash_element -> VARIABLE_LOCAL COLON STRING .)
    RBRACE          reduce using rule 44 (hash_element -> VARIABLE_LOCAL COLON STRING .)


state 83

    (16) param_list -> VARIABLE_LOCAL COMMA . VARIABLE_LOCAL

    VARIABLE_LOCAL  shift and go to state 86


state 84

    (15) function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN . expression END
    (24) expression -> . expression AND expression
    (25) expression -> . expression OR expression
    (26) expression -> . NOT expression
    (27) expression -> . INTEGER
    (28) expression -> . STRING
    (29) expression -> . variable
    (30) expression -> . array
    (31) expression -> . array_access
    (32) expression -> . function_call
    (33) expression -> . binary_operation
    (34) expression -> . GETS
    (35) expression -> . hash
    (11) variable -> . VARIABLE_LOCAL
    (12) variable -> . VARIABLE_GLOBAL
    (13) variable -> . VARIABLE_INSTANCIA
    (14) variable -> . VARIABLE_CLASE
    (36) array -> . LBRACKET array_elements RBRACKET
    (39) array_access -> . VARIABLE_LOCAL LBRACKET INTEGER RBRACKET
    (45) function_call -> . VARIABLE_LOCAL LPAREN arg_list RPAREN
    (49) binary_operation -> . expression TIMES expression
    (50) binary_operation -> . expression BIGGER expression
    (40) hash -> . LBRACE hash_elements RBRACE

    NOT             shift and go to state 18
    INTEGER         shift and go to state 19
    STRING          shift and go to state 20
    GETS            shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 43
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_INSTANCIA shift and go to state 27
    VARIABLE_CLASE  shift and go to state 28
    LBRACKET        shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 87
    variable                       shift and go to state 42
    array                          shift and go to state 21
    array_access                   shift and go to state 22
    function_call                  shift and go to state 23
    binary_operation               shift and go to state 24
    hash                           shift and go to state 25

state 85

    (20) while_statement -> WHILE expression DO statement_list END .

    DEF             reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    IF              reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    WHILE           reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    PUTS            reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    VARIABLE_LOCAL  reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    NOT             reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    INTEGER         reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    STRING          reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    GETS            reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    VARIABLE_GLOBAL reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    VARIABLE_INSTANCIA reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    VARIABLE_CLASE  reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    LBRACKET        reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    LBRACE          reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    $end            reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)
    END             reduce using rule 20 (while_statement -> WHILE expression DO statement_list END .)


state 86

    (16) param_list -> VARIABLE_LOCAL COMMA VARIABLE_LOCAL .

    RPAREN          reduce using rule 16 (param_list -> VARIABLE_LOCAL COMMA VARIABLE_LOCAL .)


state 87

    (15) function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression . END
    (24) expression -> expression . AND expression
    (25) expression -> expression . OR expression
    (49) binary_operation -> expression . TIMES expression
    (50) binary_operation -> expression . BIGGER expression

    END             shift and go to state 88
    AND             shift and go to state 32
    OR              shift and go to state 33
    TIMES           shift and go to state 34
    BIGGER          shift and go to state 35


state 88

    (15) function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .

    DEF             reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    IF              reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    WHILE           reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    PUTS            reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_LOCAL  reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    NOT             reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    INTEGER         reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    STRING          reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    GETS            reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_GLOBAL reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_INSTANCIA reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    VARIABLE_CLASE  reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    LBRACKET        reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    LBRACE          reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    $end            reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)
    END             reduce using rule 15 (function_def -> DEF VARIABLE_LOCAL LPAREN param_list RPAREN expression END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGNATION in state 12 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 12 resolved as shift
WARNING: shift/reduce conflict for NOT in state 16 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for GETS in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_LOCAL in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 16 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 16 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for BIGGER in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for GETS in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_LOCAL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 66 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 66 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 66 resolved as shift
