Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    COMENTARIO
    COMENTARIO_MULTI
    COMILLA_D
    COMILLA_S
    DOBLE_IGUAL
    EXCLAMACION_ALTO
    IN
    INITIALIZE
    MODULE
    NOT
    OR
    PORCENTAJE
    PREGUNTA
    RETURN
    SELF
    TRES_PUNTOS
    TRIPLE_IGUAL

Grammar

Rule 0     S' -> instruccion
Rule 1     instruccion -> cuerpoInstruccion
Rule 2     cuerpoInstruccion -> cuerpo
Rule 3     cuerpoInstruccion -> cuerpo cuerpoInstruccion
Rule 4     cuerpo -> operacionAritmetica
Rule 5     cuerpo -> input_concatenacion
Rule 6     cuerpo -> asignacion
Rule 7     cuerpo -> impresion
Rule 8     cuerpo -> impresion_vacia
Rule 9     cuerpo -> expresiones_booleanas
Rule 10    cuerpo -> solicitudDatosTeclado
Rule 11    cuerpo -> hashes
Rule 12    cuerpo -> estructura_ifUnaLinea
Rule 13    cuerpo -> estructura_if
Rule 14    cuerpo -> funciones
Rule 15    cuerpo -> funcionesEstructuras
Rule 16    cuerpo -> array
Rule 17    cuerpo -> each_array
Rule 18    cuerpo -> each_hash
Rule 19    cuerpo -> sentencia_while
Rule 20    cuerpo -> sentencia_while_bool
Rule 21    cuerpo -> sentencia_case
Rule 22    cuerpo -> sentencias_when
Rule 23    cuerpo -> sentencia_until
Rule 24    cuerpo -> definicion_clase
Rule 25    cuerpo -> entero_a_flotante
Rule 26    cuerpo -> declaracion
Rule 27    valorSimbolo -> SIMBOLO
Rule 28    valorSimbolo -> VARIABLE
Rule 29    input_concatenacion -> concatenacionSimpleCadena
Rule 30    input_concatenacion -> concatenacion_funcion
Rule 31    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 32    valorCadena -> CADENA
Rule 33    valorCadena -> VARIABLE
Rule 34    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 35    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 36    valorNumerico -> FLOTANTE
Rule 37    valorNumerico -> ENTERO
Rule 38    soloEnteros -> ENTERO
Rule 39    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 40    operadores -> MAS
Rule 41    operadores -> MENOS
Rule 42    operadores -> DIVISION
Rule 43    operadores -> MULTIPLICACION
Rule 44    operadores -> EXPONENCIACION
Rule 45    operadores -> MODULO
Rule 46    expresionNumerica -> valorNumerico
Rule 47    expresionNumerica -> operacionAritmetica
Rule 48    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 49    expresionNumerica -> VARIABLE
Rule 50    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 51    valor_print -> PRINT
Rule 52    valor_print -> PUTS
Rule 53    valores -> valor
Rule 54    valores -> valor COMA valores
Rule 55    valores -> valor estructura_ifUnaLinea
Rule 56    valores -> valor sentencia_while_bool
Rule 57    booleanos -> TRUE
Rule 58    booleanos -> FALSE
Rule 59    valor -> CADENA
Rule 60    valor -> valorNumerico
Rule 61    valor -> VARIABLE
Rule 62    valor -> VARIABLECLASE
Rule 63    valor -> SIMBOLO
Rule 64    impresion -> valor_print valores
Rule 65    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 66    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 67    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 68    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 69    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 70    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 71    asignacion -> VARIABLE IGUAL CADENA
Rule 72    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 73    asignacion -> VARIABLE IGUAL hashes
Rule 74    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 75    asignacion -> VARIABLE IGUAL array
Rule 76    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 77    asignacion -> VARIABLE IGUAL booleanos
Rule 78    asignacion -> VARIABLE IGUAL solicitudDatosTeclado
Rule 79    asignacion -> VARIABLE IGUAL entero_a_flotante
Rule 80    elementos_array -> elemento_array COMA elementos_array
Rule 81    elementos_array -> elemento_array
Rule 82    elemento_array -> CADENA
Rule 83    elemento_array -> ENTERO
Rule 84    elemento_array -> FLOTANTE
Rule 85    elemento_array -> array
Rule 86    elemento_array -> VARIABLE
Rule 87    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 88    array -> CORCHETE_IZ CORCHETE_DER
Rule 89    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 90    cuerpo_each -> cuerpo
Rule 91    cuerpo_each -> vacio
Rule 92    vacio -> <empty>
Rule 93    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 94    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 95    impresion_vacia -> PUTS
Rule 96    impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER
Rule 97    operadoresComparacion -> IGUAL_DOBLEP
Rule 98    operadoresComparacion -> NAVE
Rule 99    operadoresComparacion -> DIFERENTE
Rule 100   operadoresComparacion -> MAYOR_QUE
Rule 101   operadoresComparacion -> MENOR_QUE
Rule 102   operadoresComparacion -> MENOR_IGUAL_QUE
Rule 103   operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 104   funcionesComparacion -> Y_SIGNO
Rule 105   funcionesComparacion -> O_SIGNO
Rule 106   expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 107   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 108   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 109   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 110   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 111   solicitudDatosTeclado -> GETS
Rule 112   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 113   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
Rule 114   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
Rule 115   funciones -> DEF VARIABLE declaraciones END
Rule 116   funcionesArray -> SORT
Rule 117   funcionesArray -> FOR EACH
Rule 118   funcionesFormatoImpresion -> CHOMP
Rule 119   funcionesNumeros -> TO_F
Rule 120   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 121   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 122   argumentos -> VARIABLE
Rule 123   argumentos -> VARIABLE COMA argumentos
Rule 124   condicionIf -> expresiones_booleanas
Rule 125   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
Rule 126   condicionIf -> expresiones_booleanas funcionesComparacion condicionIf
Rule 127   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
Rule 128   estructura_if -> IF condicionIf declaraciones ELSE declaraciones END
Rule 129   estructura_if -> IF condicionIf declaraciones estructura_secundaria_if
Rule 130   estructura_ifUnaLinea -> IF condicionIf declaraciones END
Rule 131   estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END
Rule 132   estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if
Rule 133   declaracion -> operacionAritmetica
Rule 134   declaracion -> asignacion
Rule 135   declaracion -> impresion
Rule 136   declaracion -> impresion_vacia
Rule 137   declaracion -> expresiones_booleanas
Rule 138   declaracion -> solicitudDatosTeclado
Rule 139   declaracion -> hashes
Rule 140   declaracion -> estructura_if
Rule 141   declaracion -> asignacion_clase
Rule 142   declaracion -> estructura_ifUnaLinea
Rule 143   declaracion -> sentencia_while
Rule 144   declaracion -> sentencia_while_bool
Rule 145   declaraciones -> declaracion
Rule 146   declaraciones -> declaracion declaraciones
Rule 147   sentencia_while_bool -> WHILE declaracion declaraciones END
Rule 148   sentencia_while_bool -> WHILE VARIABLE declaraciones END
Rule 149   sentencia_while -> WHILE expresiones_booleanas sentencia_while END
Rule 150   sentencia_while -> WHILE expresiones_booleanas declaracion END
Rule 151   sentencia_case -> CASE VARIABLE sentencia_when END
Rule 152   sentencia_when -> WHEN declaracion declaracion
Rule 153   sentencias_when -> sentencia_when
Rule 154   sentencias_when -> sentencia_when sentencias_when
Rule 155   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 156   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 157   hashes -> LLAVE_IZ LLAVE_DER
Rule 158   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 159   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 160   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 161   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 162   elemento_hash -> claveValor
Rule 163   elemento_hash -> claveValor COMA elemento_hash
Rule 164   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 165   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 166   each_args_hash -> VARIABLE BARRA
Rule 167   encabezadoClase -> CLASS ID_CLASE
Rule 168   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 169   definicion_clase -> encabezadoClase declaraciones END
Rule 170   cuerpoVariables -> asignacion_clase
Rule 171   cuerpoVariables -> asignacion
Rule 172   cuerpoVariables -> asignacion_clase cuerpoVariables
Rule 173   cuerpoVariables -> asignacion cuerpoVariables
Rule 174   cuerpoClase -> cuerpoVariables
Rule 175   cuerpoClase -> declaracion
Rule 176   cuerpoClase -> funciones
Rule 177   cuerpoClaseE -> cuerpoClase
Rule 178   cuerpoClaseE -> cuerpoClase cuerpoClaseE

Terminals, with rules where they appear

AND                  : 
ASIGNA_HASH          : 158 159 160 161
BARRA                : 89 89 164 165 166
BEGIN                : 
CADENA               : 32 59 65 71 82 159 160 161 161
CASE                 : 151
CHOMP                : 118
CLASS                : 167 168
COMA                 : 54 80 123 163 165
COMENTARIO           : 
COMENTARIO_MULTI     : 
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 31
CORCHETE_DER         : 87 88
CORCHETE_IZ          : 87 88
DEF                  : 113 114 115
DIFERENTE            : 99
DIVISION             : 42
DO                   : 89 155 164
DOBLE_IGUAL          : 
EACH                 : 117 164
ELSE                 : 128 131
ELSEIF               : 131 132
END                  : 89 113 114 115 128 130 131 147 148 149 150 151 155 164 169
ENTERO               : 37 38 83
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 125 127
EXPONENCIACION       : 44
FALSE                : 58
FLOTANTE             : 36 84
FOR                  : 117
GETS                 : 111 112
ID_CLASE             : 167 168 168
IF                   : 128 129 130
IGUAL                : 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
IGUAL_DOBLEP         : 97
IN                   : 
INITIALIZE           : 
LLAVE_DER            : 156 157
LLAVE_IZ             : 156 157
MAS                  : 34 35 40
MAYOR_IGUAL_QUE      : 103
MAYOR_QUE            : 100
MENOR_IGUAL_QUE      : 102
MENOR_QUE            : 101 168
MENOS                : 41
MODULE               : 
MODULO               : 45
MULTIPLICACION       : 43
NAVE                 : 98
NOT                  : 
OR                   : 
O_SIGNO              : 105
PARENTESIS_DER       : 31 48 93 94 96 113 114 125 127
PARENTESIS_IZ        : 31 48 93 94 96 113 114 125 127
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 51 93
PRINTF               : 96
PUNTO                : 31 39 89 112 120 121 164
PUTS                 : 52 94 95
RETURN               : 
SELF                 : 
SIMBOLO              : 27 63 74
SORT                 : 116
TO_F                 : 39 119
TRES_PUNTOS          : 
TRIPLE_IGUAL         : 
TRUE                 : 57
UNTIL                : 155
VARIABLE             : 28 31 33 39 49 61 70 71 72 73 74 75 76 77 78 79 86 89 89 108 108 109 110 113 114 115 120 121 122 123 148 151 158 159 164 165 165 166
VARIABLECLASE        : 62 65 66 67 68 69
WHEN                 : 152
WHILE                : 147 148 149 150
Y_SIGNO              : 104
error                : 

Nonterminals, with rules where they appear

argumentos           : 114 123
array                : 16 68 75 85
asignacion           : 6 134 171 173
asignacion_clase     : 141 170 172
booleanos            : 70 77
claveValor           : 162 163
concatenacionSimpleCadena : 29 35
concatenacion_funcion : 30
condicionIf          : 125 126 128 129 130 131 132
cuerpo               : 2 3 90
cuerpoClase          : 177 178
cuerpoClaseE         : 178
cuerpoInstruccion    : 1 3
cuerpoVariables      : 172 173 174
cuerpo_each          : 89
declaracion          : 26 145 146 147 150 152 152 155 155 164 175
declaraciones        : 113 114 115 128 128 129 130 131 131 132 146 147 148 169
definicion_clase     : 24
each_args_hash       : 164
each_array           : 17
each_hash            : 18
elemento_array       : 80 81
elemento_hash        : 156 163
elementos_array      : 80 87
encabezadoClase      : 169
entero_a_flotante    : 25 79
estructura_if        : 13 140
estructura_ifUnaLinea : 12 55 142
estructura_secundaria_if : 129 132
expresionNumerica    : 50 50 66 72
expresiones_booleanas : 9 124 125 126 127 137 149 150
funciones            : 14 176
funcionesArray       : 120
funcionesComparacion : 125 126
funcionesEstructuras : 15
funcionesFormatoImpresion : 112
funcionesNumeros     : 121
hashes               : 11 67 73 139
impresion            : 7 135
impresion_vacia      : 8 136
input_concatenacion  : 5 69 76
instruccion          : 0
operacionAritmetica  : 4 47 48 133
operadores           : 50
operadoresComparacion : 106 107 108 109 110
sentencia_case       : 21
sentencia_until      : 23
sentencia_when       : 151 153 154
sentencia_while      : 19 143 149
sentencia_while_bool : 20 56 144
sentencias_when      : 22 154
solicitudDatosTeclado : 10 78 138
soloEnteros          : 
vacio                : 91
valor                : 53 54 55 56
valorCadena          : 31 34 34 35
valorNumerico        : 46 60 107 107 109 110 158 160
valorSimbolo         : 106 106
valor_print          : 64
valores              : 54 64

Parsing method: LALR

state 0

    (0) S' -> . instruccion
    (1) instruccion -> . cuerpoInstruccion
    (2) cuerpoInstruccion -> . cuerpo
    (3) cuerpoInstruccion -> . cuerpo cuerpoInstruccion
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
    (20) cuerpo -> . sentencia_while_bool
    (21) cuerpo -> . sentencia_case
    (22) cuerpo -> . sentencias_when
    (23) cuerpo -> . sentencia_until
    (24) cuerpo -> . definicion_clase
    (25) cuerpo -> . entero_a_flotante
    (26) cuerpo -> . declaracion
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) input_concatenacion -> . concatenacionSimpleCadena
    (30) input_concatenacion -> . concatenacion_funcion
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (115) funciones -> . DEF VARIABLE declaraciones END
    (120) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (121) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER
    (89) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (164) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (151) sentencia_case -> . CASE VARIABLE sentencia_when END
    (153) sentencias_when -> . sentencia_when
    (154) sentencias_when -> . sentencia_when sentencias_when
    (155) sentencia_until -> . UNTIL declaracion DO declaracion END
    (169) definicion_clase -> . encabezadoClase declaraciones END
    (39) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (34) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (35) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (31) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (152) sentencia_when -> . WHEN declaracion declaracion
    (167) encabezadoClase -> . CLASS ID_CLASE
    (168) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 30
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 42
    DEF             shift and go to state 43
    CORCHETE_IZ     shift and go to state 44
    WHILE           shift and go to state 45
    CASE            shift and go to state 46
    UNTIL           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53
    WHEN            shift and go to state 54
    CLASS           shift and go to state 55
    VARIABLECLASE   shift and go to state 56
    CADENA          shift and go to state 31

    instruccion                    shift and go to state 1
    cuerpoInstruccion              shift and go to state 2
    cuerpo                         shift and go to state 3
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
    sentencia_while_bool           shift and go to state 20
    sentencia_case                 shift and go to state 21
    sentencias_when                shift and go to state 22
    sentencia_until                shift and go to state 23
    definicion_clase               shift and go to state 24
    entero_a_flotante              shift and go to state 25
    declaracion                    shift and go to state 26
    expresionNumerica              shift and go to state 27
    concatenacionSimpleCadena      shift and go to state 28
    concatenacion_funcion          shift and go to state 29
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39
    sentencia_when                 shift and go to state 47
    encabezadoClase                shift and go to state 49
    asignacion_clase               shift and go to state 50
    valorCadena                    shift and go to state 51

state 1

    (0) S' -> instruccion .



state 2

    (1) instruccion -> cuerpoInstruccion .

    $end            reduce using rule 1 (instruccion -> cuerpoInstruccion .)


state 3

    (2) cuerpoInstruccion -> cuerpo .
    (3) cuerpoInstruccion -> cuerpo . cuerpoInstruccion
    (2) cuerpoInstruccion -> . cuerpo
    (3) cuerpoInstruccion -> . cuerpo cuerpoInstruccion
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
    (20) cuerpo -> . sentencia_while_bool
    (21) cuerpo -> . sentencia_case
    (22) cuerpo -> . sentencias_when
    (23) cuerpo -> . sentencia_until
    (24) cuerpo -> . definicion_clase
    (25) cuerpo -> . entero_a_flotante
    (26) cuerpo -> . declaracion
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) input_concatenacion -> . concatenacionSimpleCadena
    (30) input_concatenacion -> . concatenacion_funcion
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (115) funciones -> . DEF VARIABLE declaraciones END
    (120) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (121) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER
    (89) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (164) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (151) sentencia_case -> . CASE VARIABLE sentencia_when END
    (153) sentencias_when -> . sentencia_when
    (154) sentencias_when -> . sentencia_when sentencias_when
    (155) sentencia_until -> . UNTIL declaracion DO declaracion END
    (169) definicion_clase -> . encabezadoClase declaraciones END
    (39) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (34) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (35) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (31) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (152) sentencia_when -> . WHEN declaracion declaracion
    (167) encabezadoClase -> . CLASS ID_CLASE
    (168) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    $end            reduce using rule 2 (cuerpoInstruccion -> cuerpo .)
    VARIABLE        shift and go to state 30
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 42
    DEF             shift and go to state 43
    CORCHETE_IZ     shift and go to state 44
    WHILE           shift and go to state 45
    CASE            shift and go to state 46
    UNTIL           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53
    WHEN            shift and go to state 54
    CLASS           shift and go to state 55
    VARIABLECLASE   shift and go to state 56
    CADENA          shift and go to state 31

    cuerpo                         shift and go to state 3
    cuerpoInstruccion              shift and go to state 57
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
    sentencia_while_bool           shift and go to state 20
    sentencia_case                 shift and go to state 21
    sentencias_when                shift and go to state 22
    sentencia_until                shift and go to state 23
    definicion_clase               shift and go to state 24
    entero_a_flotante              shift and go to state 25
    declaracion                    shift and go to state 26
    expresionNumerica              shift and go to state 27
    concatenacionSimpleCadena      shift and go to state 28
    concatenacion_funcion          shift and go to state 29
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39
    sentencia_when                 shift and go to state 47
    encabezadoClase                shift and go to state 49
    asignacion_clase               shift and go to state 50
    valorCadena                    shift and go to state 51

state 4

    (4) cuerpo -> operacionAritmetica .
    (133) declaracion -> operacionAritmetica .
    (47) expresionNumerica -> operacionAritmetica .

  ! reduce/reduce conflict for VARIABLE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PRINT resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PUTS resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PRINTF resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for GETS resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for IF resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for DEF resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for WHILE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CASE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for UNTIL resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for ENTERO resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for WHEN resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CLASS resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CADENA resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for $end resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for END resolved using rule 4 (cuerpo -> operacionAritmetica .)
    VARIABLE        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PRINT           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PUTS            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PRINTF          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    GETS            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    IF              reduce using rule 4 (cuerpo -> operacionAritmetica .)
    DEF             reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 4 (cuerpo -> operacionAritmetica .)
    WHILE           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CASE            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    UNTIL           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 4 (cuerpo -> operacionAritmetica .)
    SIMBOLO         reduce using rule 4 (cuerpo -> operacionAritmetica .)
    FLOTANTE        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    ENTERO          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    WHEN            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CLASS           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CADENA          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    $end            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 4 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)

  ! VARIABLE        [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! PRINT           [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! PUTS            [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! PRINTF          [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! GETS            [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! LLAVE_IZ        [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! IF              [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! DEF             [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! CORCHETE_IZ     [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! WHILE           [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! CASE            [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! UNTIL           [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! PARENTESIS_IZ   [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! SIMBOLO         [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! FLOTANTE        [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! ENTERO          [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! WHEN            [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! CLASS           [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! VARIABLECLASE   [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! CADENA          [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! $end            [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]
  ! END             [ reduce using rule 133 (declaracion -> operacionAritmetica .) ]


state 5

    (5) cuerpo -> input_concatenacion .

    VARIABLE        reduce using rule 5 (cuerpo -> input_concatenacion .)
    PRINT           reduce using rule 5 (cuerpo -> input_concatenacion .)
    PUTS            reduce using rule 5 (cuerpo -> input_concatenacion .)
    PRINTF          reduce using rule 5 (cuerpo -> input_concatenacion .)
    GETS            reduce using rule 5 (cuerpo -> input_concatenacion .)
    LLAVE_IZ        reduce using rule 5 (cuerpo -> input_concatenacion .)
    IF              reduce using rule 5 (cuerpo -> input_concatenacion .)
    DEF             reduce using rule 5 (cuerpo -> input_concatenacion .)
    CORCHETE_IZ     reduce using rule 5 (cuerpo -> input_concatenacion .)
    WHILE           reduce using rule 5 (cuerpo -> input_concatenacion .)
    CASE            reduce using rule 5 (cuerpo -> input_concatenacion .)
    UNTIL           reduce using rule 5 (cuerpo -> input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 5 (cuerpo -> input_concatenacion .)
    SIMBOLO         reduce using rule 5 (cuerpo -> input_concatenacion .)
    FLOTANTE        reduce using rule 5 (cuerpo -> input_concatenacion .)
    ENTERO          reduce using rule 5 (cuerpo -> input_concatenacion .)
    WHEN            reduce using rule 5 (cuerpo -> input_concatenacion .)
    CLASS           reduce using rule 5 (cuerpo -> input_concatenacion .)
    VARIABLECLASE   reduce using rule 5 (cuerpo -> input_concatenacion .)
    CADENA          reduce using rule 5 (cuerpo -> input_concatenacion .)
    $end            reduce using rule 5 (cuerpo -> input_concatenacion .)
    END             reduce using rule 5 (cuerpo -> input_concatenacion .)


state 6

    (6) cuerpo -> asignacion .
    (134) declaracion -> asignacion .

  ! reduce/reduce conflict for VARIABLE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PRINT resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for GETS resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for DEF resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CASE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for UNTIL resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for WHEN resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CLASS resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CADENA resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for $end resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for END resolved using rule 6 (cuerpo -> asignacion .)
    VARIABLE        reduce using rule 6 (cuerpo -> asignacion .)
    PRINT           reduce using rule 6 (cuerpo -> asignacion .)
    PUTS            reduce using rule 6 (cuerpo -> asignacion .)
    PRINTF          reduce using rule 6 (cuerpo -> asignacion .)
    GETS            reduce using rule 6 (cuerpo -> asignacion .)
    LLAVE_IZ        reduce using rule 6 (cuerpo -> asignacion .)
    IF              reduce using rule 6 (cuerpo -> asignacion .)
    DEF             reduce using rule 6 (cuerpo -> asignacion .)
    CORCHETE_IZ     reduce using rule 6 (cuerpo -> asignacion .)
    WHILE           reduce using rule 6 (cuerpo -> asignacion .)
    CASE            reduce using rule 6 (cuerpo -> asignacion .)
    UNTIL           reduce using rule 6 (cuerpo -> asignacion .)
    PARENTESIS_IZ   reduce using rule 6 (cuerpo -> asignacion .)
    SIMBOLO         reduce using rule 6 (cuerpo -> asignacion .)
    FLOTANTE        reduce using rule 6 (cuerpo -> asignacion .)
    ENTERO          reduce using rule 6 (cuerpo -> asignacion .)
    WHEN            reduce using rule 6 (cuerpo -> asignacion .)
    CLASS           reduce using rule 6 (cuerpo -> asignacion .)
    VARIABLECLASE   reduce using rule 6 (cuerpo -> asignacion .)
    CADENA          reduce using rule 6 (cuerpo -> asignacion .)
    $end            reduce using rule 6 (cuerpo -> asignacion .)
    END             reduce using rule 6 (cuerpo -> asignacion .)

  ! VARIABLE        [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! PRINT           [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! PUTS            [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! PRINTF          [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! GETS            [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! LLAVE_IZ        [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! IF              [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! DEF             [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! CORCHETE_IZ     [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! WHILE           [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! CASE            [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! UNTIL           [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! SIMBOLO         [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! FLOTANTE        [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! ENTERO          [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! WHEN            [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! CLASS           [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! CADENA          [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! $end            [ reduce using rule 134 (declaracion -> asignacion .) ]
  ! END             [ reduce using rule 134 (declaracion -> asignacion .) ]


state 7

    (7) cuerpo -> impresion .
    (135) declaracion -> impresion .

  ! reduce/reduce conflict for VARIABLE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PUTS resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for GETS resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for IF resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for DEF resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CASE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for UNTIL resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for WHEN resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CLASS resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CADENA resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for $end resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for END resolved using rule 7 (cuerpo -> impresion .)
    VARIABLE        reduce using rule 7 (cuerpo -> impresion .)
    PRINT           reduce using rule 7 (cuerpo -> impresion .)
    PUTS            reduce using rule 7 (cuerpo -> impresion .)
    PRINTF          reduce using rule 7 (cuerpo -> impresion .)
    GETS            reduce using rule 7 (cuerpo -> impresion .)
    LLAVE_IZ        reduce using rule 7 (cuerpo -> impresion .)
    IF              reduce using rule 7 (cuerpo -> impresion .)
    DEF             reduce using rule 7 (cuerpo -> impresion .)
    CORCHETE_IZ     reduce using rule 7 (cuerpo -> impresion .)
    WHILE           reduce using rule 7 (cuerpo -> impresion .)
    CASE            reduce using rule 7 (cuerpo -> impresion .)
    UNTIL           reduce using rule 7 (cuerpo -> impresion .)
    PARENTESIS_IZ   reduce using rule 7 (cuerpo -> impresion .)
    SIMBOLO         reduce using rule 7 (cuerpo -> impresion .)
    FLOTANTE        reduce using rule 7 (cuerpo -> impresion .)
    ENTERO          reduce using rule 7 (cuerpo -> impresion .)
    WHEN            reduce using rule 7 (cuerpo -> impresion .)
    CLASS           reduce using rule 7 (cuerpo -> impresion .)
    VARIABLECLASE   reduce using rule 7 (cuerpo -> impresion .)
    CADENA          reduce using rule 7 (cuerpo -> impresion .)
    $end            reduce using rule 7 (cuerpo -> impresion .)
    END             reduce using rule 7 (cuerpo -> impresion .)

  ! VARIABLE        [ reduce using rule 135 (declaracion -> impresion .) ]
  ! PRINT           [ reduce using rule 135 (declaracion -> impresion .) ]
  ! PUTS            [ reduce using rule 135 (declaracion -> impresion .) ]
  ! PRINTF          [ reduce using rule 135 (declaracion -> impresion .) ]
  ! GETS            [ reduce using rule 135 (declaracion -> impresion .) ]
  ! LLAVE_IZ        [ reduce using rule 135 (declaracion -> impresion .) ]
  ! IF              [ reduce using rule 135 (declaracion -> impresion .) ]
  ! DEF             [ reduce using rule 135 (declaracion -> impresion .) ]
  ! CORCHETE_IZ     [ reduce using rule 135 (declaracion -> impresion .) ]
  ! WHILE           [ reduce using rule 135 (declaracion -> impresion .) ]
  ! CASE            [ reduce using rule 135 (declaracion -> impresion .) ]
  ! UNTIL           [ reduce using rule 135 (declaracion -> impresion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 135 (declaracion -> impresion .) ]
  ! SIMBOLO         [ reduce using rule 135 (declaracion -> impresion .) ]
  ! FLOTANTE        [ reduce using rule 135 (declaracion -> impresion .) ]
  ! ENTERO          [ reduce using rule 135 (declaracion -> impresion .) ]
  ! WHEN            [ reduce using rule 135 (declaracion -> impresion .) ]
  ! CLASS           [ reduce using rule 135 (declaracion -> impresion .) ]
  ! VARIABLECLASE   [ reduce using rule 135 (declaracion -> impresion .) ]
  ! CADENA          [ reduce using rule 135 (declaracion -> impresion .) ]
  ! $end            [ reduce using rule 135 (declaracion -> impresion .) ]
  ! END             [ reduce using rule 135 (declaracion -> impresion .) ]


state 8

    (8) cuerpo -> impresion_vacia .
    (136) declaracion -> impresion_vacia .

  ! reduce/reduce conflict for VARIABLE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PRINT resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PUTS resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PRINTF resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for GETS resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for IF resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for DEF resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for WHILE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CASE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for UNTIL resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for ENTERO resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for WHEN resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CLASS resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CADENA resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for $end resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for END resolved using rule 8 (cuerpo -> impresion_vacia .)
    VARIABLE        reduce using rule 8 (cuerpo -> impresion_vacia .)
    PRINT           reduce using rule 8 (cuerpo -> impresion_vacia .)
    PUTS            reduce using rule 8 (cuerpo -> impresion_vacia .)
    PRINTF          reduce using rule 8 (cuerpo -> impresion_vacia .)
    GETS            reduce using rule 8 (cuerpo -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 8 (cuerpo -> impresion_vacia .)
    IF              reduce using rule 8 (cuerpo -> impresion_vacia .)
    DEF             reduce using rule 8 (cuerpo -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 8 (cuerpo -> impresion_vacia .)
    WHILE           reduce using rule 8 (cuerpo -> impresion_vacia .)
    CASE            reduce using rule 8 (cuerpo -> impresion_vacia .)
    UNTIL           reduce using rule 8 (cuerpo -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 8 (cuerpo -> impresion_vacia .)
    SIMBOLO         reduce using rule 8 (cuerpo -> impresion_vacia .)
    FLOTANTE        reduce using rule 8 (cuerpo -> impresion_vacia .)
    ENTERO          reduce using rule 8 (cuerpo -> impresion_vacia .)
    WHEN            reduce using rule 8 (cuerpo -> impresion_vacia .)
    CLASS           reduce using rule 8 (cuerpo -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 8 (cuerpo -> impresion_vacia .)
    CADENA          reduce using rule 8 (cuerpo -> impresion_vacia .)
    $end            reduce using rule 8 (cuerpo -> impresion_vacia .)
    END             reduce using rule 8 (cuerpo -> impresion_vacia .)

  ! VARIABLE        [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! PRINT           [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! PUTS            [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! PRINTF          [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! GETS            [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! LLAVE_IZ        [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! IF              [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! DEF             [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! CORCHETE_IZ     [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! WHILE           [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! CASE            [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! UNTIL           [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! PARENTESIS_IZ   [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! SIMBOLO         [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! FLOTANTE        [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! ENTERO          [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! WHEN            [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! CLASS           [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! VARIABLECLASE   [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! CADENA          [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! $end            [ reduce using rule 136 (declaracion -> impresion_vacia .) ]
  ! END             [ reduce using rule 136 (declaracion -> impresion_vacia .) ]


state 9

    (9) cuerpo -> expresiones_booleanas .
    (137) declaracion -> expresiones_booleanas .

  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PUTS resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PRINTF resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for GETS resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for IF resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for DEF resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CASE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for ENTERO resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for WHEN resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CLASS resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CADENA resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for $end resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for END resolved using rule 9 (cuerpo -> expresiones_booleanas .)
    VARIABLE        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PRINT           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PUTS            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PRINTF          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    GETS            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    IF              reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    DEF             reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    WHILE           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CASE            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    UNTIL           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    ENTERO          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    WHEN            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CLASS           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CADENA          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    $end            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 9 (cuerpo -> expresiones_booleanas .)

  ! VARIABLE        [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PRINT           [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PUTS            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PRINTF          [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! GETS            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! LLAVE_IZ        [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! IF              [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! DEF             [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! CORCHETE_IZ     [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! WHILE           [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! CASE            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! UNTIL           [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PARENTESIS_IZ   [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! SIMBOLO         [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! FLOTANTE        [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! ENTERO          [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! WHEN            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! CLASS           [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! VARIABLECLASE   [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! CADENA          [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! $end            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! END             [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]


state 10

    (10) cuerpo -> solicitudDatosTeclado .
    (138) declaracion -> solicitudDatosTeclado .

  ! reduce/reduce conflict for VARIABLE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PUTS resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PRINTF resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for GETS resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for IF resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for DEF resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CASE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for UNTIL resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for ENTERO resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for WHEN resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CLASS resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CADENA resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for $end resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for END resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
    VARIABLE        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PRINT           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PUTS            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    GETS            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    IF              reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    DEF             reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    WHILE           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CASE            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    WHEN            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CLASS           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CADENA          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    $end            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)

  ! VARIABLE        [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! PRINT           [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! PUTS            [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! PRINTF          [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! GETS            [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! LLAVE_IZ        [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! IF              [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! DEF             [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! CORCHETE_IZ     [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! WHILE           [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! CASE            [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! UNTIL           [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! PARENTESIS_IZ   [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! SIMBOLO         [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! FLOTANTE        [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! ENTERO          [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! WHEN            [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! CLASS           [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! VARIABLECLASE   [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! CADENA          [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! $end            [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]
  ! END             [ reduce using rule 138 (declaracion -> solicitudDatosTeclado .) ]


state 11

    (11) cuerpo -> hashes .
    (139) declaracion -> hashes .

  ! reduce/reduce conflict for VARIABLE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PRINT resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PUTS resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PRINTF resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for GETS resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for IF resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for DEF resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CASE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for UNTIL resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for ENTERO resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for WHEN resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CLASS resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CADENA resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for $end resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for END resolved using rule 11 (cuerpo -> hashes .)
    VARIABLE        reduce using rule 11 (cuerpo -> hashes .)
    PRINT           reduce using rule 11 (cuerpo -> hashes .)
    PUTS            reduce using rule 11 (cuerpo -> hashes .)
    PRINTF          reduce using rule 11 (cuerpo -> hashes .)
    GETS            reduce using rule 11 (cuerpo -> hashes .)
    LLAVE_IZ        reduce using rule 11 (cuerpo -> hashes .)
    IF              reduce using rule 11 (cuerpo -> hashes .)
    DEF             reduce using rule 11 (cuerpo -> hashes .)
    CORCHETE_IZ     reduce using rule 11 (cuerpo -> hashes .)
    WHILE           reduce using rule 11 (cuerpo -> hashes .)
    CASE            reduce using rule 11 (cuerpo -> hashes .)
    UNTIL           reduce using rule 11 (cuerpo -> hashes .)
    PARENTESIS_IZ   reduce using rule 11 (cuerpo -> hashes .)
    SIMBOLO         reduce using rule 11 (cuerpo -> hashes .)
    FLOTANTE        reduce using rule 11 (cuerpo -> hashes .)
    ENTERO          reduce using rule 11 (cuerpo -> hashes .)
    WHEN            reduce using rule 11 (cuerpo -> hashes .)
    CLASS           reduce using rule 11 (cuerpo -> hashes .)
    VARIABLECLASE   reduce using rule 11 (cuerpo -> hashes .)
    CADENA          reduce using rule 11 (cuerpo -> hashes .)
    $end            reduce using rule 11 (cuerpo -> hashes .)
    END             reduce using rule 11 (cuerpo -> hashes .)

  ! VARIABLE        [ reduce using rule 139 (declaracion -> hashes .) ]
  ! PRINT           [ reduce using rule 139 (declaracion -> hashes .) ]
  ! PUTS            [ reduce using rule 139 (declaracion -> hashes .) ]
  ! PRINTF          [ reduce using rule 139 (declaracion -> hashes .) ]
  ! GETS            [ reduce using rule 139 (declaracion -> hashes .) ]
  ! LLAVE_IZ        [ reduce using rule 139 (declaracion -> hashes .) ]
  ! IF              [ reduce using rule 139 (declaracion -> hashes .) ]
  ! DEF             [ reduce using rule 139 (declaracion -> hashes .) ]
  ! CORCHETE_IZ     [ reduce using rule 139 (declaracion -> hashes .) ]
  ! WHILE           [ reduce using rule 139 (declaracion -> hashes .) ]
  ! CASE            [ reduce using rule 139 (declaracion -> hashes .) ]
  ! UNTIL           [ reduce using rule 139 (declaracion -> hashes .) ]
  ! PARENTESIS_IZ   [ reduce using rule 139 (declaracion -> hashes .) ]
  ! SIMBOLO         [ reduce using rule 139 (declaracion -> hashes .) ]
  ! FLOTANTE        [ reduce using rule 139 (declaracion -> hashes .) ]
  ! ENTERO          [ reduce using rule 139 (declaracion -> hashes .) ]
  ! WHEN            [ reduce using rule 139 (declaracion -> hashes .) ]
  ! CLASS           [ reduce using rule 139 (declaracion -> hashes .) ]
  ! VARIABLECLASE   [ reduce using rule 139 (declaracion -> hashes .) ]
  ! CADENA          [ reduce using rule 139 (declaracion -> hashes .) ]
  ! $end            [ reduce using rule 139 (declaracion -> hashes .) ]
  ! END             [ reduce using rule 139 (declaracion -> hashes .) ]


state 12

    (12) cuerpo -> estructura_ifUnaLinea .
    (142) declaracion -> estructura_ifUnaLinea .

  ! reduce/reduce conflict for VARIABLE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PRINT resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PRINTF resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for GETS resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for IF resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for DEF resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CASE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for UNTIL resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for ENTERO resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for WHEN resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CLASS resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CADENA resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for $end resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for END resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    VARIABLE        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    GETS            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    IF              reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    DEF             reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CASE            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    $end            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    END             reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)

  ! VARIABLE        [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! PRINT           [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! PUTS            [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! PRINTF          [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! GETS            [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! LLAVE_IZ        [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! IF              [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! DEF             [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! CORCHETE_IZ     [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! WHILE           [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! CASE            [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! UNTIL           [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! PARENTESIS_IZ   [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! SIMBOLO         [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! FLOTANTE        [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! ENTERO          [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! WHEN            [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! CLASS           [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! VARIABLECLASE   [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! CADENA          [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! $end            [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]
  ! END             [ reduce using rule 142 (declaracion -> estructura_ifUnaLinea .) ]


state 13

    (13) cuerpo -> estructura_if .
    (140) declaracion -> estructura_if .

  ! reduce/reduce conflict for VARIABLE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PUTS resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PRINTF resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for GETS resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for IF resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for DEF resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CASE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for UNTIL resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for ENTERO resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for WHEN resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CLASS resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CADENA resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for $end resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for END resolved using rule 13 (cuerpo -> estructura_if .)
    VARIABLE        reduce using rule 13 (cuerpo -> estructura_if .)
    PRINT           reduce using rule 13 (cuerpo -> estructura_if .)
    PUTS            reduce using rule 13 (cuerpo -> estructura_if .)
    PRINTF          reduce using rule 13 (cuerpo -> estructura_if .)
    GETS            reduce using rule 13 (cuerpo -> estructura_if .)
    LLAVE_IZ        reduce using rule 13 (cuerpo -> estructura_if .)
    IF              reduce using rule 13 (cuerpo -> estructura_if .)
    DEF             reduce using rule 13 (cuerpo -> estructura_if .)
    CORCHETE_IZ     reduce using rule 13 (cuerpo -> estructura_if .)
    WHILE           reduce using rule 13 (cuerpo -> estructura_if .)
    CASE            reduce using rule 13 (cuerpo -> estructura_if .)
    UNTIL           reduce using rule 13 (cuerpo -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 13 (cuerpo -> estructura_if .)
    SIMBOLO         reduce using rule 13 (cuerpo -> estructura_if .)
    FLOTANTE        reduce using rule 13 (cuerpo -> estructura_if .)
    ENTERO          reduce using rule 13 (cuerpo -> estructura_if .)
    WHEN            reduce using rule 13 (cuerpo -> estructura_if .)
    CLASS           reduce using rule 13 (cuerpo -> estructura_if .)
    VARIABLECLASE   reduce using rule 13 (cuerpo -> estructura_if .)
    CADENA          reduce using rule 13 (cuerpo -> estructura_if .)
    $end            reduce using rule 13 (cuerpo -> estructura_if .)
    END             reduce using rule 13 (cuerpo -> estructura_if .)

  ! VARIABLE        [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! PRINT           [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! PUTS            [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! PRINTF          [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! GETS            [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! LLAVE_IZ        [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! IF              [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! DEF             [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! CORCHETE_IZ     [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! WHILE           [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! CASE            [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! UNTIL           [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! PARENTESIS_IZ   [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! SIMBOLO         [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! FLOTANTE        [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! ENTERO          [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! WHEN            [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! CLASS           [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! VARIABLECLASE   [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! CADENA          [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! $end            [ reduce using rule 140 (declaracion -> estructura_if .) ]
  ! END             [ reduce using rule 140 (declaracion -> estructura_if .) ]


state 14

    (14) cuerpo -> funciones .

    VARIABLE        reduce using rule 14 (cuerpo -> funciones .)
    PRINT           reduce using rule 14 (cuerpo -> funciones .)
    PUTS            reduce using rule 14 (cuerpo -> funciones .)
    PRINTF          reduce using rule 14 (cuerpo -> funciones .)
    GETS            reduce using rule 14 (cuerpo -> funciones .)
    LLAVE_IZ        reduce using rule 14 (cuerpo -> funciones .)
    IF              reduce using rule 14 (cuerpo -> funciones .)
    DEF             reduce using rule 14 (cuerpo -> funciones .)
    CORCHETE_IZ     reduce using rule 14 (cuerpo -> funciones .)
    WHILE           reduce using rule 14 (cuerpo -> funciones .)
    CASE            reduce using rule 14 (cuerpo -> funciones .)
    UNTIL           reduce using rule 14 (cuerpo -> funciones .)
    PARENTESIS_IZ   reduce using rule 14 (cuerpo -> funciones .)
    SIMBOLO         reduce using rule 14 (cuerpo -> funciones .)
    FLOTANTE        reduce using rule 14 (cuerpo -> funciones .)
    ENTERO          reduce using rule 14 (cuerpo -> funciones .)
    WHEN            reduce using rule 14 (cuerpo -> funciones .)
    CLASS           reduce using rule 14 (cuerpo -> funciones .)
    VARIABLECLASE   reduce using rule 14 (cuerpo -> funciones .)
    CADENA          reduce using rule 14 (cuerpo -> funciones .)
    $end            reduce using rule 14 (cuerpo -> funciones .)
    END             reduce using rule 14 (cuerpo -> funciones .)


state 15

    (15) cuerpo -> funcionesEstructuras .

    VARIABLE        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PRINT           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PUTS            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PRINTF          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    GETS            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    LLAVE_IZ        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    IF              reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    DEF             reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CORCHETE_IZ     reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    WHILE           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CASE            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    UNTIL           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PARENTESIS_IZ   reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    SIMBOLO         reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    FLOTANTE        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    ENTERO          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    WHEN            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CLASS           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    VARIABLECLASE   reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CADENA          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    $end            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 15 (cuerpo -> funcionesEstructuras .)


state 16

    (16) cuerpo -> array .

    VARIABLE        reduce using rule 16 (cuerpo -> array .)
    PRINT           reduce using rule 16 (cuerpo -> array .)
    PUTS            reduce using rule 16 (cuerpo -> array .)
    PRINTF          reduce using rule 16 (cuerpo -> array .)
    GETS            reduce using rule 16 (cuerpo -> array .)
    LLAVE_IZ        reduce using rule 16 (cuerpo -> array .)
    IF              reduce using rule 16 (cuerpo -> array .)
    DEF             reduce using rule 16 (cuerpo -> array .)
    CORCHETE_IZ     reduce using rule 16 (cuerpo -> array .)
    WHILE           reduce using rule 16 (cuerpo -> array .)
    CASE            reduce using rule 16 (cuerpo -> array .)
    UNTIL           reduce using rule 16 (cuerpo -> array .)
    PARENTESIS_IZ   reduce using rule 16 (cuerpo -> array .)
    SIMBOLO         reduce using rule 16 (cuerpo -> array .)
    FLOTANTE        reduce using rule 16 (cuerpo -> array .)
    ENTERO          reduce using rule 16 (cuerpo -> array .)
    WHEN            reduce using rule 16 (cuerpo -> array .)
    CLASS           reduce using rule 16 (cuerpo -> array .)
    VARIABLECLASE   reduce using rule 16 (cuerpo -> array .)
    CADENA          reduce using rule 16 (cuerpo -> array .)
    $end            reduce using rule 16 (cuerpo -> array .)
    END             reduce using rule 16 (cuerpo -> array .)


state 17

    (17) cuerpo -> each_array .

    VARIABLE        reduce using rule 17 (cuerpo -> each_array .)
    PRINT           reduce using rule 17 (cuerpo -> each_array .)
    PUTS            reduce using rule 17 (cuerpo -> each_array .)
    PRINTF          reduce using rule 17 (cuerpo -> each_array .)
    GETS            reduce using rule 17 (cuerpo -> each_array .)
    LLAVE_IZ        reduce using rule 17 (cuerpo -> each_array .)
    IF              reduce using rule 17 (cuerpo -> each_array .)
    DEF             reduce using rule 17 (cuerpo -> each_array .)
    CORCHETE_IZ     reduce using rule 17 (cuerpo -> each_array .)
    WHILE           reduce using rule 17 (cuerpo -> each_array .)
    CASE            reduce using rule 17 (cuerpo -> each_array .)
    UNTIL           reduce using rule 17 (cuerpo -> each_array .)
    PARENTESIS_IZ   reduce using rule 17 (cuerpo -> each_array .)
    SIMBOLO         reduce using rule 17 (cuerpo -> each_array .)
    FLOTANTE        reduce using rule 17 (cuerpo -> each_array .)
    ENTERO          reduce using rule 17 (cuerpo -> each_array .)
    WHEN            reduce using rule 17 (cuerpo -> each_array .)
    CLASS           reduce using rule 17 (cuerpo -> each_array .)
    VARIABLECLASE   reduce using rule 17 (cuerpo -> each_array .)
    CADENA          reduce using rule 17 (cuerpo -> each_array .)
    $end            reduce using rule 17 (cuerpo -> each_array .)
    END             reduce using rule 17 (cuerpo -> each_array .)


state 18

    (18) cuerpo -> each_hash .

    VARIABLE        reduce using rule 18 (cuerpo -> each_hash .)
    PRINT           reduce using rule 18 (cuerpo -> each_hash .)
    PUTS            reduce using rule 18 (cuerpo -> each_hash .)
    PRINTF          reduce using rule 18 (cuerpo -> each_hash .)
    GETS            reduce using rule 18 (cuerpo -> each_hash .)
    LLAVE_IZ        reduce using rule 18 (cuerpo -> each_hash .)
    IF              reduce using rule 18 (cuerpo -> each_hash .)
    DEF             reduce using rule 18 (cuerpo -> each_hash .)
    CORCHETE_IZ     reduce using rule 18 (cuerpo -> each_hash .)
    WHILE           reduce using rule 18 (cuerpo -> each_hash .)
    CASE            reduce using rule 18 (cuerpo -> each_hash .)
    UNTIL           reduce using rule 18 (cuerpo -> each_hash .)
    PARENTESIS_IZ   reduce using rule 18 (cuerpo -> each_hash .)
    SIMBOLO         reduce using rule 18 (cuerpo -> each_hash .)
    FLOTANTE        reduce using rule 18 (cuerpo -> each_hash .)
    ENTERO          reduce using rule 18 (cuerpo -> each_hash .)
    WHEN            reduce using rule 18 (cuerpo -> each_hash .)
    CLASS           reduce using rule 18 (cuerpo -> each_hash .)
    VARIABLECLASE   reduce using rule 18 (cuerpo -> each_hash .)
    CADENA          reduce using rule 18 (cuerpo -> each_hash .)
    $end            reduce using rule 18 (cuerpo -> each_hash .)
    END             reduce using rule 18 (cuerpo -> each_hash .)


state 19

    (19) cuerpo -> sentencia_while .
    (143) declaracion -> sentencia_while .

  ! reduce/reduce conflict for VARIABLE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PRINT resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PUTS resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PRINTF resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for GETS resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for IF resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for DEF resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CASE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for UNTIL resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for ENTERO resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for WHEN resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CLASS resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CADENA resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for $end resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for END resolved using rule 19 (cuerpo -> sentencia_while .)
    VARIABLE        reduce using rule 19 (cuerpo -> sentencia_while .)
    PRINT           reduce using rule 19 (cuerpo -> sentencia_while .)
    PUTS            reduce using rule 19 (cuerpo -> sentencia_while .)
    PRINTF          reduce using rule 19 (cuerpo -> sentencia_while .)
    GETS            reduce using rule 19 (cuerpo -> sentencia_while .)
    LLAVE_IZ        reduce using rule 19 (cuerpo -> sentencia_while .)
    IF              reduce using rule 19 (cuerpo -> sentencia_while .)
    DEF             reduce using rule 19 (cuerpo -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 19 (cuerpo -> sentencia_while .)
    WHILE           reduce using rule 19 (cuerpo -> sentencia_while .)
    CASE            reduce using rule 19 (cuerpo -> sentencia_while .)
    UNTIL           reduce using rule 19 (cuerpo -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 19 (cuerpo -> sentencia_while .)
    SIMBOLO         reduce using rule 19 (cuerpo -> sentencia_while .)
    FLOTANTE        reduce using rule 19 (cuerpo -> sentencia_while .)
    ENTERO          reduce using rule 19 (cuerpo -> sentencia_while .)
    WHEN            reduce using rule 19 (cuerpo -> sentencia_while .)
    CLASS           reduce using rule 19 (cuerpo -> sentencia_while .)
    VARIABLECLASE   reduce using rule 19 (cuerpo -> sentencia_while .)
    CADENA          reduce using rule 19 (cuerpo -> sentencia_while .)
    $end            reduce using rule 19 (cuerpo -> sentencia_while .)
    END             reduce using rule 19 (cuerpo -> sentencia_while .)

  ! VARIABLE        [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! PRINT           [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! PUTS            [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! PRINTF          [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! GETS            [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! LLAVE_IZ        [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! IF              [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! DEF             [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! CORCHETE_IZ     [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! WHILE           [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! CASE            [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! UNTIL           [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! PARENTESIS_IZ   [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! SIMBOLO         [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! FLOTANTE        [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! ENTERO          [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! WHEN            [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! CLASS           [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! VARIABLECLASE   [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! CADENA          [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! $end            [ reduce using rule 143 (declaracion -> sentencia_while .) ]
  ! END             [ reduce using rule 143 (declaracion -> sentencia_while .) ]


state 20

    (20) cuerpo -> sentencia_while_bool .
    (144) declaracion -> sentencia_while_bool .

  ! reduce/reduce conflict for VARIABLE resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for PUTS resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for PRINTF resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for GETS resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for IF resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for DEF resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for CASE resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for UNTIL resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for WHEN resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for CLASS resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for $end resolved using rule 20 (cuerpo -> sentencia_while_bool .)
  ! reduce/reduce conflict for END resolved using rule 20 (cuerpo -> sentencia_while_bool .)
    VARIABLE        reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PRINT           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PUTS            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PRINTF          reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    GETS            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    LLAVE_IZ        reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    IF              reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    DEF             reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CORCHETE_IZ     reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    WHILE           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CASE            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    UNTIL           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PARENTESIS_IZ   reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    SIMBOLO         reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    FLOTANTE        reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    ENTERO          reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    WHEN            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CLASS           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    VARIABLECLASE   reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CADENA          reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    $end            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    END             reduce using rule 20 (cuerpo -> sentencia_while_bool .)

  ! VARIABLE        [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! PRINT           [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! PUTS            [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! PRINTF          [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! GETS            [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! LLAVE_IZ        [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! IF              [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! DEF             [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! CORCHETE_IZ     [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! WHILE           [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! CASE            [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! UNTIL           [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! PARENTESIS_IZ   [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! SIMBOLO         [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! FLOTANTE        [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! ENTERO          [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! WHEN            [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! CLASS           [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! VARIABLECLASE   [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! CADENA          [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! $end            [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]
  ! END             [ reduce using rule 144 (declaracion -> sentencia_while_bool .) ]


state 21

    (21) cuerpo -> sentencia_case .

    VARIABLE        reduce using rule 21 (cuerpo -> sentencia_case .)
    PRINT           reduce using rule 21 (cuerpo -> sentencia_case .)
    PUTS            reduce using rule 21 (cuerpo -> sentencia_case .)
    PRINTF          reduce using rule 21 (cuerpo -> sentencia_case .)
    GETS            reduce using rule 21 (cuerpo -> sentencia_case .)
    LLAVE_IZ        reduce using rule 21 (cuerpo -> sentencia_case .)
    IF              reduce using rule 21 (cuerpo -> sentencia_case .)
    DEF             reduce using rule 21 (cuerpo -> sentencia_case .)
    CORCHETE_IZ     reduce using rule 21 (cuerpo -> sentencia_case .)
    WHILE           reduce using rule 21 (cuerpo -> sentencia_case .)
    CASE            reduce using rule 21 (cuerpo -> sentencia_case .)
    UNTIL           reduce using rule 21 (cuerpo -> sentencia_case .)
    PARENTESIS_IZ   reduce using rule 21 (cuerpo -> sentencia_case .)
    SIMBOLO         reduce using rule 21 (cuerpo -> sentencia_case .)
    FLOTANTE        reduce using rule 21 (cuerpo -> sentencia_case .)
    ENTERO          reduce using rule 21 (cuerpo -> sentencia_case .)
    WHEN            reduce using rule 21 (cuerpo -> sentencia_case .)
    CLASS           reduce using rule 21 (cuerpo -> sentencia_case .)
    VARIABLECLASE   reduce using rule 21 (cuerpo -> sentencia_case .)
    CADENA          reduce using rule 21 (cuerpo -> sentencia_case .)
    $end            reduce using rule 21 (cuerpo -> sentencia_case .)
    END             reduce using rule 21 (cuerpo -> sentencia_case .)


state 22

    (22) cuerpo -> sentencias_when .

    VARIABLE        reduce using rule 22 (cuerpo -> sentencias_when .)
    PRINT           reduce using rule 22 (cuerpo -> sentencias_when .)
    PUTS            reduce using rule 22 (cuerpo -> sentencias_when .)
    PRINTF          reduce using rule 22 (cuerpo -> sentencias_when .)
    GETS            reduce using rule 22 (cuerpo -> sentencias_when .)
    LLAVE_IZ        reduce using rule 22 (cuerpo -> sentencias_when .)
    IF              reduce using rule 22 (cuerpo -> sentencias_when .)
    DEF             reduce using rule 22 (cuerpo -> sentencias_when .)
    CORCHETE_IZ     reduce using rule 22 (cuerpo -> sentencias_when .)
    WHILE           reduce using rule 22 (cuerpo -> sentencias_when .)
    CASE            reduce using rule 22 (cuerpo -> sentencias_when .)
    UNTIL           reduce using rule 22 (cuerpo -> sentencias_when .)
    PARENTESIS_IZ   reduce using rule 22 (cuerpo -> sentencias_when .)
    SIMBOLO         reduce using rule 22 (cuerpo -> sentencias_when .)
    FLOTANTE        reduce using rule 22 (cuerpo -> sentencias_when .)
    ENTERO          reduce using rule 22 (cuerpo -> sentencias_when .)
    WHEN            reduce using rule 22 (cuerpo -> sentencias_when .)
    CLASS           reduce using rule 22 (cuerpo -> sentencias_when .)
    VARIABLECLASE   reduce using rule 22 (cuerpo -> sentencias_when .)
    CADENA          reduce using rule 22 (cuerpo -> sentencias_when .)
    $end            reduce using rule 22 (cuerpo -> sentencias_when .)
    END             reduce using rule 22 (cuerpo -> sentencias_when .)


state 23

    (23) cuerpo -> sentencia_until .

    VARIABLE        reduce using rule 23 (cuerpo -> sentencia_until .)
    PRINT           reduce using rule 23 (cuerpo -> sentencia_until .)
    PUTS            reduce using rule 23 (cuerpo -> sentencia_until .)
    PRINTF          reduce using rule 23 (cuerpo -> sentencia_until .)
    GETS            reduce using rule 23 (cuerpo -> sentencia_until .)
    LLAVE_IZ        reduce using rule 23 (cuerpo -> sentencia_until .)
    IF              reduce using rule 23 (cuerpo -> sentencia_until .)
    DEF             reduce using rule 23 (cuerpo -> sentencia_until .)
    CORCHETE_IZ     reduce using rule 23 (cuerpo -> sentencia_until .)
    WHILE           reduce using rule 23 (cuerpo -> sentencia_until .)
    CASE            reduce using rule 23 (cuerpo -> sentencia_until .)
    UNTIL           reduce using rule 23 (cuerpo -> sentencia_until .)
    PARENTESIS_IZ   reduce using rule 23 (cuerpo -> sentencia_until .)
    SIMBOLO         reduce using rule 23 (cuerpo -> sentencia_until .)
    FLOTANTE        reduce using rule 23 (cuerpo -> sentencia_until .)
    ENTERO          reduce using rule 23 (cuerpo -> sentencia_until .)
    WHEN            reduce using rule 23 (cuerpo -> sentencia_until .)
    CLASS           reduce using rule 23 (cuerpo -> sentencia_until .)
    VARIABLECLASE   reduce using rule 23 (cuerpo -> sentencia_until .)
    CADENA          reduce using rule 23 (cuerpo -> sentencia_until .)
    $end            reduce using rule 23 (cuerpo -> sentencia_until .)
    END             reduce using rule 23 (cuerpo -> sentencia_until .)


state 24

    (24) cuerpo -> definicion_clase .

    VARIABLE        reduce using rule 24 (cuerpo -> definicion_clase .)
    PRINT           reduce using rule 24 (cuerpo -> definicion_clase .)
    PUTS            reduce using rule 24 (cuerpo -> definicion_clase .)
    PRINTF          reduce using rule 24 (cuerpo -> definicion_clase .)
    GETS            reduce using rule 24 (cuerpo -> definicion_clase .)
    LLAVE_IZ        reduce using rule 24 (cuerpo -> definicion_clase .)
    IF              reduce using rule 24 (cuerpo -> definicion_clase .)
    DEF             reduce using rule 24 (cuerpo -> definicion_clase .)
    CORCHETE_IZ     reduce using rule 24 (cuerpo -> definicion_clase .)
    WHILE           reduce using rule 24 (cuerpo -> definicion_clase .)
    CASE            reduce using rule 24 (cuerpo -> definicion_clase .)
    UNTIL           reduce using rule 24 (cuerpo -> definicion_clase .)
    PARENTESIS_IZ   reduce using rule 24 (cuerpo -> definicion_clase .)
    SIMBOLO         reduce using rule 24 (cuerpo -> definicion_clase .)
    FLOTANTE        reduce using rule 24 (cuerpo -> definicion_clase .)
    ENTERO          reduce using rule 24 (cuerpo -> definicion_clase .)
    WHEN            reduce using rule 24 (cuerpo -> definicion_clase .)
    CLASS           reduce using rule 24 (cuerpo -> definicion_clase .)
    VARIABLECLASE   reduce using rule 24 (cuerpo -> definicion_clase .)
    CADENA          reduce using rule 24 (cuerpo -> definicion_clase .)
    $end            reduce using rule 24 (cuerpo -> definicion_clase .)
    END             reduce using rule 24 (cuerpo -> definicion_clase .)


state 25

    (25) cuerpo -> entero_a_flotante .

    VARIABLE        reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PRINT           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PUTS            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PRINTF          reduce using rule 25 (cuerpo -> entero_a_flotante .)
    GETS            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    LLAVE_IZ        reduce using rule 25 (cuerpo -> entero_a_flotante .)
    IF              reduce using rule 25 (cuerpo -> entero_a_flotante .)
    DEF             reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 25 (cuerpo -> entero_a_flotante .)
    WHILE           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CASE            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    UNTIL           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 25 (cuerpo -> entero_a_flotante .)
    SIMBOLO         reduce using rule 25 (cuerpo -> entero_a_flotante .)
    FLOTANTE        reduce using rule 25 (cuerpo -> entero_a_flotante .)
    ENTERO          reduce using rule 25 (cuerpo -> entero_a_flotante .)
    WHEN            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CLASS           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    VARIABLECLASE   reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CADENA          reduce using rule 25 (cuerpo -> entero_a_flotante .)
    $end            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 25 (cuerpo -> entero_a_flotante .)


state 26

    (26) cuerpo -> declaracion .

    VARIABLE        reduce using rule 26 (cuerpo -> declaracion .)
    PRINT           reduce using rule 26 (cuerpo -> declaracion .)
    PUTS            reduce using rule 26 (cuerpo -> declaracion .)
    PRINTF          reduce using rule 26 (cuerpo -> declaracion .)
    GETS            reduce using rule 26 (cuerpo -> declaracion .)
    LLAVE_IZ        reduce using rule 26 (cuerpo -> declaracion .)
    IF              reduce using rule 26 (cuerpo -> declaracion .)
    DEF             reduce using rule 26 (cuerpo -> declaracion .)
    CORCHETE_IZ     reduce using rule 26 (cuerpo -> declaracion .)
    WHILE           reduce using rule 26 (cuerpo -> declaracion .)
    CASE            reduce using rule 26 (cuerpo -> declaracion .)
    UNTIL           reduce using rule 26 (cuerpo -> declaracion .)
    PARENTESIS_IZ   reduce using rule 26 (cuerpo -> declaracion .)
    SIMBOLO         reduce using rule 26 (cuerpo -> declaracion .)
    FLOTANTE        reduce using rule 26 (cuerpo -> declaracion .)
    ENTERO          reduce using rule 26 (cuerpo -> declaracion .)
    WHEN            reduce using rule 26 (cuerpo -> declaracion .)
    CLASS           reduce using rule 26 (cuerpo -> declaracion .)
    VARIABLECLASE   reduce using rule 26 (cuerpo -> declaracion .)
    CADENA          reduce using rule 26 (cuerpo -> declaracion .)
    $end            reduce using rule 26 (cuerpo -> declaracion .)
    END             reduce using rule 26 (cuerpo -> declaracion .)


state 27

    (50) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (40) operadores -> . MAS
    (41) operadores -> . MENOS
    (42) operadores -> . DIVISION
    (43) operadores -> . MULTIPLICACION
    (44) operadores -> . EXPONENCIACION
    (45) operadores -> . MODULO

    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    DIVISION        shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    EXPONENCIACION  shift and go to state 63
    MODULO          shift and go to state 64

    operadores                     shift and go to state 58

state 28

    (29) input_concatenacion -> concatenacionSimpleCadena .
    (35) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    VARIABLE        reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINT           reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    PUTS            reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINTF          reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    GETS            reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    LLAVE_IZ        reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    IF              reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    DEF             reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    CORCHETE_IZ     reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    WHILE           reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    CASE            reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    UNTIL           reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    PARENTESIS_IZ   reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    SIMBOLO         reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    FLOTANTE        reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    ENTERO          reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    CLASS           reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    VARIABLECLASE   reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    CADENA          reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    $end            reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 29 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 65


state 29

    (30) input_concatenacion -> concatenacion_funcion .

    VARIABLE        reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    PRINT           reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    PUTS            reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    PRINTF          reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    GETS            reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    LLAVE_IZ        reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    IF              reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    DEF             reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    CORCHETE_IZ     reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    WHILE           reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    CASE            reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    UNTIL           reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    PARENTESIS_IZ   reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    SIMBOLO         reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    FLOTANTE        reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    ENTERO          reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    CLASS           reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    VARIABLECLASE   reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    CADENA          reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    $end            reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 30 (input_concatenacion -> concatenacion_funcion .)


state 30

    (71) asignacion -> VARIABLE . IGUAL CADENA
    (72) asignacion -> VARIABLE . IGUAL expresionNumerica
    (73) asignacion -> VARIABLE . IGUAL hashes
    (74) asignacion -> VARIABLE . IGUAL SIMBOLO
    (75) asignacion -> VARIABLE . IGUAL array
    (76) asignacion -> VARIABLE . IGUAL input_concatenacion
    (77) asignacion -> VARIABLE . IGUAL booleanos
    (78) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (79) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (120) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (121) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (89) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (164) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (39) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (49) expresionNumerica -> VARIABLE .
    (31) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (28) valorSimbolo -> VARIABLE .
    (70) asignacion_clase -> VARIABLE . IGUAL booleanos
    (33) valorCadena -> VARIABLE .
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 33 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 66
    PUNTO           shift and go to state 68
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MAS             reduce using rule 33 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75

  ! MAS             [ reduce using rule 49 (expresionNumerica -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 67

state 31

    (32) valorCadena -> CADENA .

    MAS             reduce using rule 32 (valorCadena -> CADENA .)
    VARIABLE        reduce using rule 32 (valorCadena -> CADENA .)
    PRINT           reduce using rule 32 (valorCadena -> CADENA .)
    PUTS            reduce using rule 32 (valorCadena -> CADENA .)
    PRINTF          reduce using rule 32 (valorCadena -> CADENA .)
    GETS            reduce using rule 32 (valorCadena -> CADENA .)
    LLAVE_IZ        reduce using rule 32 (valorCadena -> CADENA .)
    IF              reduce using rule 32 (valorCadena -> CADENA .)
    DEF             reduce using rule 32 (valorCadena -> CADENA .)
    CORCHETE_IZ     reduce using rule 32 (valorCadena -> CADENA .)
    WHILE           reduce using rule 32 (valorCadena -> CADENA .)
    CASE            reduce using rule 32 (valorCadena -> CADENA .)
    UNTIL           reduce using rule 32 (valorCadena -> CADENA .)
    PARENTESIS_IZ   reduce using rule 32 (valorCadena -> CADENA .)
    SIMBOLO         reduce using rule 32 (valorCadena -> CADENA .)
    FLOTANTE        reduce using rule 32 (valorCadena -> CADENA .)
    ENTERO          reduce using rule 32 (valorCadena -> CADENA .)
    WHEN            reduce using rule 32 (valorCadena -> CADENA .)
    CLASS           reduce using rule 32 (valorCadena -> CADENA .)
    VARIABLECLASE   reduce using rule 32 (valorCadena -> CADENA .)
    CADENA          reduce using rule 32 (valorCadena -> CADENA .)
    $end            reduce using rule 32 (valorCadena -> CADENA .)
    DO              reduce using rule 32 (valorCadena -> CADENA .)
    END             reduce using rule 32 (valorCadena -> CADENA .)
    ELSE            reduce using rule 32 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 32 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 32 (valorCadena -> CADENA .)


state 32

    (27) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    NAVE            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    PRINTF          reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    DEF             reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    CASE            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    UNTIL           reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    CLASS           reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    CADENA          reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    Y_SIGNO         reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    O_SIGNO         reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    DO              reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 27 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_DER  reduce using rule 27 (valorSimbolo -> SIMBOLO .)


state 33

    (64) impresion -> valor_print . valores
    (53) valores -> . valor
    (54) valores -> . valor COMA valores
    (55) valores -> . valor estructura_ifUnaLinea
    (56) valores -> . valor sentencia_while_bool
    (59) valor -> . CADENA
    (60) valor -> . valorNumerico
    (61) valor -> . VARIABLE
    (62) valor -> . VARIABLECLASE
    (63) valor -> . SIMBOLO
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    CADENA          shift and go to state 78
    VARIABLE        shift and go to state 80
    VARIABLECLASE   shift and go to state 81
    SIMBOLO         shift and go to state 82
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    valores                        shift and go to state 76
    valor                          shift and go to state 77
    valorNumerico                  shift and go to state 79

state 34

    (93) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (51) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 83
    CADENA          reduce using rule 51 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 51 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 51 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 51 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 51 (valor_print -> PRINT .)
    ENTERO          reduce using rule 51 (valor_print -> PRINT .)


state 35

    (48) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 35
    VARIABLE        shift and go to state 86
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    operacionAritmetica            shift and go to state 84
    expresionNumerica              shift and go to state 27
    valorNumerico                  shift and go to state 85

state 36

    (94) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> PUTS .
    (52) valor_print -> PUTS .

  ! shift/reduce conflict for PARENTESIS_IZ resolved as shift
  ! reduce/reduce conflict for CADENA resolved using rule 52 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 52 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 52 (valor_print -> PUTS .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 52 (valor_print -> PUTS .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 52 (valor_print -> PUTS .)
  ! reduce/reduce conflict for ENTERO resolved using rule 52 (valor_print -> PUTS .)
    PARENTESIS_IZ   shift and go to state 87
    PRINT           reduce using rule 95 (impresion_vacia -> PUTS .)
    PUTS            reduce using rule 95 (impresion_vacia -> PUTS .)
    PRINTF          reduce using rule 95 (impresion_vacia -> PUTS .)
    GETS            reduce using rule 95 (impresion_vacia -> PUTS .)
    LLAVE_IZ        reduce using rule 95 (impresion_vacia -> PUTS .)
    IF              reduce using rule 95 (impresion_vacia -> PUTS .)
    DEF             reduce using rule 95 (impresion_vacia -> PUTS .)
    CORCHETE_IZ     reduce using rule 95 (impresion_vacia -> PUTS .)
    WHILE           reduce using rule 95 (impresion_vacia -> PUTS .)
    CASE            reduce using rule 95 (impresion_vacia -> PUTS .)
    UNTIL           reduce using rule 95 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 95 (impresion_vacia -> PUTS .)
    CLASS           reduce using rule 95 (impresion_vacia -> PUTS .)
    $end            reduce using rule 95 (impresion_vacia -> PUTS .)
    DO              reduce using rule 95 (impresion_vacia -> PUTS .)
    END             reduce using rule 95 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 95 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 95 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 52 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 52 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 52 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 52 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 52 (valor_print -> PUTS .)
    ENTERO          reduce using rule 52 (valor_print -> PUTS .)

  ! VARIABLE        [ reduce using rule 95 (impresion_vacia -> PUTS .) ]
  ! PARENTESIS_IZ   [ reduce using rule 95 (impresion_vacia -> PUTS .) ]
  ! SIMBOLO         [ reduce using rule 95 (impresion_vacia -> PUTS .) ]
  ! FLOTANTE        [ reduce using rule 95 (impresion_vacia -> PUTS .) ]
  ! ENTERO          [ reduce using rule 95 (impresion_vacia -> PUTS .) ]
  ! VARIABLECLASE   [ reduce using rule 95 (impresion_vacia -> PUTS .) ]
  ! CADENA          [ reduce using rule 95 (impresion_vacia -> PUTS .) ]


state 37

    (96) impresion_vacia -> PRINTF . PARENTESIS_IZ PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 88


state 38

    (106) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75

    operadoresComparacion          shift and go to state 89

state 39

    (107) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (46) expresionNumerica -> valorNumerico .
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 46 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 46 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 46 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 46 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75

    operadoresComparacion          shift and go to state 90

state 40

    (111) solicitudDatosTeclado -> GETS .
    (112) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    VARIABLE        reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    PRINT           reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    PUTS            reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    PRINTF          reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    GETS            reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    LLAVE_IZ        reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    IF              reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    DEF             reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    CORCHETE_IZ     reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    WHILE           reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    CASE            reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    UNTIL           reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    PARENTESIS_IZ   reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    SIMBOLO         reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    FLOTANTE        reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    ENTERO          reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    CLASS           reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    VARIABLECLASE   reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    CADENA          reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    $end            reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 111 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 91


state 41

    (156) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (157) hashes -> LLAVE_IZ . LLAVE_DER
    (162) elemento_hash -> . claveValor
    (163) elemento_hash -> . claveValor COMA elemento_hash
    (158) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (159) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (160) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (161) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 93
    VARIABLE        shift and go to state 95
    CADENA          shift and go to state 96

    elemento_hash                  shift and go to state 92
    claveValor                     shift and go to state 94

state 42

    (130) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (128) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (124) condicionIf -> . expresiones_booleanas
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (127) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 99
    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    condicionIf                    shift and go to state 97
    expresiones_booleanas          shift and go to state 98
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 43

    (113) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (114) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (115) funciones -> DEF . VARIABLE declaraciones END

    VARIABLE        shift and go to state 102


state 44

    (87) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (88) array -> CORCHETE_IZ . CORCHETE_DER
    (80) elementos_array -> . elemento_array COMA elementos_array
    (81) elementos_array -> . elemento_array
    (82) elemento_array -> . CADENA
    (83) elemento_array -> . ENTERO
    (84) elemento_array -> . FLOTANTE
    (85) elemento_array -> . array
    (86) elemento_array -> . VARIABLE
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 104
    CADENA          shift and go to state 106
    ENTERO          shift and go to state 107
    FLOTANTE        shift and go to state 108
    VARIABLE        shift and go to state 110
    CORCHETE_IZ     shift and go to state 44

    elementos_array                shift and go to state 103
    elemento_array                 shift and go to state 105
    array                          shift and go to state 109

state 45

    (149) sentencia_while -> WHILE . expresiones_booleanas sentencia_while END
    (150) sentencia_while -> WHILE . expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> WHILE . declaracion declaraciones END
    (148) sentencia_while_bool -> WHILE . VARIABLE declaraciones END
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS

    VARIABLE        shift and go to state 114
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35

    expresiones_booleanas          shift and go to state 111
    sentencia_while                shift and go to state 112
    declaracion                    shift and go to state 113
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33

state 46

    (151) sentencia_case -> CASE . VARIABLE sentencia_when END

    VARIABLE        shift and go to state 125


state 47

    (153) sentencias_when -> sentencia_when .
    (154) sentencias_when -> sentencia_when . sentencias_when
    (153) sentencias_when -> . sentencia_when
    (154) sentencias_when -> . sentencia_when sentencias_when
    (152) sentencia_when -> . WHEN declaracion declaracion

  ! shift/reduce conflict for WHEN resolved as shift
    VARIABLE        reduce using rule 153 (sentencias_when -> sentencia_when .)
    PRINT           reduce using rule 153 (sentencias_when -> sentencia_when .)
    PUTS            reduce using rule 153 (sentencias_when -> sentencia_when .)
    PRINTF          reduce using rule 153 (sentencias_when -> sentencia_when .)
    GETS            reduce using rule 153 (sentencias_when -> sentencia_when .)
    LLAVE_IZ        reduce using rule 153 (sentencias_when -> sentencia_when .)
    IF              reduce using rule 153 (sentencias_when -> sentencia_when .)
    DEF             reduce using rule 153 (sentencias_when -> sentencia_when .)
    CORCHETE_IZ     reduce using rule 153 (sentencias_when -> sentencia_when .)
    WHILE           reduce using rule 153 (sentencias_when -> sentencia_when .)
    CASE            reduce using rule 153 (sentencias_when -> sentencia_when .)
    UNTIL           reduce using rule 153 (sentencias_when -> sentencia_when .)
    PARENTESIS_IZ   reduce using rule 153 (sentencias_when -> sentencia_when .)
    SIMBOLO         reduce using rule 153 (sentencias_when -> sentencia_when .)
    FLOTANTE        reduce using rule 153 (sentencias_when -> sentencia_when .)
    ENTERO          reduce using rule 153 (sentencias_when -> sentencia_when .)
    CLASS           reduce using rule 153 (sentencias_when -> sentencia_when .)
    VARIABLECLASE   reduce using rule 153 (sentencias_when -> sentencia_when .)
    CADENA          reduce using rule 153 (sentencias_when -> sentencia_when .)
    $end            reduce using rule 153 (sentencias_when -> sentencia_when .)
    END             reduce using rule 153 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 54

  ! WHEN            [ reduce using rule 153 (sentencias_when -> sentencia_when .) ]

    sentencia_when                 shift and go to state 47
    sentencias_when                shift and go to state 126

state 48

    (155) sentencia_until -> UNTIL . declaracion DO declaracion END
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 127
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 49

    (169) definicion_clase -> encabezadoClase . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 130
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 50

    (141) declaracion -> asignacion_clase .

    VARIABLE        reduce using rule 141 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 141 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 141 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 141 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 141 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 141 (declaracion -> asignacion_clase .)
    IF              reduce using rule 141 (declaracion -> asignacion_clase .)
    DEF             reduce using rule 141 (declaracion -> asignacion_clase .)
    CORCHETE_IZ     reduce using rule 141 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 141 (declaracion -> asignacion_clase .)
    CASE            reduce using rule 141 (declaracion -> asignacion_clase .)
    UNTIL           reduce using rule 141 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 141 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 141 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 141 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 141 (declaracion -> asignacion_clase .)
    WHEN            reduce using rule 141 (declaracion -> asignacion_clase .)
    CLASS           reduce using rule 141 (declaracion -> asignacion_clase .)
    VARIABLECLASE   reduce using rule 141 (declaracion -> asignacion_clase .)
    CADENA          reduce using rule 141 (declaracion -> asignacion_clase .)
    $end            reduce using rule 141 (declaracion -> asignacion_clase .)
    DO              reduce using rule 141 (declaracion -> asignacion_clase .)
    END             reduce using rule 141 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 141 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 141 (declaracion -> asignacion_clase .)


state 51

    (34) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 132


state 52

    (36) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 36 (valorNumerico -> FLOTANTE .)
    NAVE            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 36 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 36 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 36 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 36 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 36 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 36 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 36 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 36 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    PRINTF          reduce using rule 36 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 36 (valorNumerico -> FLOTANTE .)
    DEF             reduce using rule 36 (valorNumerico -> FLOTANTE .)
    CORCHETE_IZ     reduce using rule 36 (valorNumerico -> FLOTANTE .)
    CASE            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    UNTIL           reduce using rule 36 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 36 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 36 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 36 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 36 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    CLASS           reduce using rule 36 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 36 (valorNumerico -> FLOTANTE .)
    CADENA          reduce using rule 36 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 36 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 36 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 36 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 36 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 36 (valorNumerico -> FLOTANTE .)
    Y_SIGNO         reduce using rule 36 (valorNumerico -> FLOTANTE .)
    O_SIGNO         reduce using rule 36 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 36 (valorNumerico -> FLOTANTE .)


state 53

    (37) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 37 (valorNumerico -> ENTERO .)
    NAVE            reduce using rule 37 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 37 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 37 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 37 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 37 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 37 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 37 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 37 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 37 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 37 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 37 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 37 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 37 (valorNumerico -> ENTERO .)
    IF              reduce using rule 37 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 37 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 37 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 37 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 37 (valorNumerico -> ENTERO .)
    PRINTF          reduce using rule 37 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 37 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 37 (valorNumerico -> ENTERO .)
    DEF             reduce using rule 37 (valorNumerico -> ENTERO .)
    CORCHETE_IZ     reduce using rule 37 (valorNumerico -> ENTERO .)
    CASE            reduce using rule 37 (valorNumerico -> ENTERO .)
    UNTIL           reduce using rule 37 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 37 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 37 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 37 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 37 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 37 (valorNumerico -> ENTERO .)
    CLASS           reduce using rule 37 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 37 (valorNumerico -> ENTERO .)
    CADENA          reduce using rule 37 (valorNumerico -> ENTERO .)
    $end            reduce using rule 37 (valorNumerico -> ENTERO .)
    DO              reduce using rule 37 (valorNumerico -> ENTERO .)
    END             reduce using rule 37 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 37 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 37 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 37 (valorNumerico -> ENTERO .)
    Y_SIGNO         reduce using rule 37 (valorNumerico -> ENTERO .)
    O_SIGNO         reduce using rule 37 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 37 (valorNumerico -> ENTERO .)


state 54

    (152) sentencia_when -> WHEN . declaracion declaracion
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 133
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 55

    (167) encabezadoClase -> CLASS . ID_CLASE
    (168) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 134


state 56

    (65) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (66) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (67) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (68) asignacion_clase -> VARIABLECLASE . IGUAL array
    (69) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 135


state 57

    (3) cuerpoInstruccion -> cuerpo cuerpoInstruccion .

    $end            reduce using rule 3 (cuerpoInstruccion -> cuerpo cuerpoInstruccion .)


state 58

    (50) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 35
    VARIABLE        shift and go to state 86
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    expresionNumerica              shift and go to state 136
    valorNumerico                  shift and go to state 85
    operacionAritmetica            shift and go to state 137

state 59

    (40) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MAS .)
    VARIABLE        reduce using rule 40 (operadores -> MAS .)
    FLOTANTE        reduce using rule 40 (operadores -> MAS .)
    ENTERO          reduce using rule 40 (operadores -> MAS .)


state 60

    (41) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 41 (operadores -> MENOS .)
    VARIABLE        reduce using rule 41 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 41 (operadores -> MENOS .)
    ENTERO          reduce using rule 41 (operadores -> MENOS .)


state 61

    (42) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 42 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 42 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 42 (operadores -> DIVISION .)
    ENTERO          reduce using rule 42 (operadores -> DIVISION .)


state 62

    (43) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 43 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 43 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 43 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 43 (operadores -> MULTIPLICACION .)


state 63

    (44) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 44 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 44 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 44 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 44 (operadores -> EXPONENCIACION .)


state 64

    (45) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 45 (operadores -> MODULO .)
    VARIABLE        reduce using rule 45 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 45 (operadores -> MODULO .)
    ENTERO          reduce using rule 45 (operadores -> MODULO .)


state 65

    (35) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    CADENA          shift and go to state 31
    VARIABLE        shift and go to state 139

    valorCadena                    shift and go to state 138

state 66

    (71) asignacion -> VARIABLE IGUAL . CADENA
    (72) asignacion -> VARIABLE IGUAL . expresionNumerica
    (73) asignacion -> VARIABLE IGUAL . hashes
    (74) asignacion -> VARIABLE IGUAL . SIMBOLO
    (75) asignacion -> VARIABLE IGUAL . array
    (76) asignacion -> VARIABLE IGUAL . input_concatenacion
    (77) asignacion -> VARIABLE IGUAL . booleanos
    (78) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (79) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (70) asignacion_clase -> VARIABLE IGUAL . booleanos
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER
    (29) input_concatenacion -> . concatenacionSimpleCadena
    (30) input_concatenacion -> . concatenacion_funcion
    (57) booleanos -> . TRUE
    (58) booleanos -> . FALSE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (39) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (34) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (35) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (31) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    CADENA          shift and go to state 141
    SIMBOLO         shift and go to state 144
    PARENTESIS_IZ   shift and go to state 35
    VARIABLE        shift and go to state 140
    LLAVE_IZ        shift and go to state 41
    CORCHETE_IZ     shift and go to state 44
    TRUE            shift and go to state 150
    FALSE           shift and go to state 151
    GETS            shift and go to state 40
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    expresionNumerica              shift and go to state 142
    hashes                         shift and go to state 143
    array                          shift and go to state 145
    input_concatenacion            shift and go to state 146
    booleanos                      shift and go to state 147
    solicitudDatosTeclado          shift and go to state 148
    entero_a_flotante              shift and go to state 149
    valorNumerico                  shift and go to state 85
    operacionAritmetica            shift and go to state 137
    concatenacionSimpleCadena      shift and go to state 28
    concatenacion_funcion          shift and go to state 29
    valorCadena                    shift and go to state 51

state 67

    (108) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (109) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 152
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    valorNumerico                  shift and go to state 153

state 68

    (120) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (121) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (89) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (164) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (39) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (31) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (116) funcionesArray -> . SORT
    (117) funcionesArray -> . FOR EACH
    (119) funcionesNumeros -> . TO_F

    DO              shift and go to state 156
    EACH            shift and go to state 157
    TO_F            shift and go to state 158
    CONCAT          shift and go to state 159
    SORT            shift and go to state 160
    FOR             shift and go to state 161

    funcionesArray                 shift and go to state 154
    funcionesNumeros               shift and go to state 155

state 69

    (97) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 97 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 97 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 97 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 97 (operadoresComparacion -> IGUAL_DOBLEP .)


state 70

    (98) operadoresComparacion -> NAVE .

    VARIABLE        reduce using rule 98 (operadoresComparacion -> NAVE .)
    FLOTANTE        reduce using rule 98 (operadoresComparacion -> NAVE .)
    ENTERO          reduce using rule 98 (operadoresComparacion -> NAVE .)
    SIMBOLO         reduce using rule 98 (operadoresComparacion -> NAVE .)


state 71

    (99) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 99 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 99 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 99 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 99 (operadoresComparacion -> DIFERENTE .)


state 72

    (100) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 100 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 100 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 100 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 100 (operadoresComparacion -> MAYOR_QUE .)


state 73

    (101) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 101 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 101 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 101 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 101 (operadoresComparacion -> MENOR_QUE .)


state 74

    (102) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 102 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 102 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 102 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 102 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 75

    (103) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 103 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 103 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 103 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 103 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 76

    (64) impresion -> valor_print valores .

    VARIABLE        reduce using rule 64 (impresion -> valor_print valores .)
    PRINT           reduce using rule 64 (impresion -> valor_print valores .)
    PUTS            reduce using rule 64 (impresion -> valor_print valores .)
    PRINTF          reduce using rule 64 (impresion -> valor_print valores .)
    GETS            reduce using rule 64 (impresion -> valor_print valores .)
    LLAVE_IZ        reduce using rule 64 (impresion -> valor_print valores .)
    IF              reduce using rule 64 (impresion -> valor_print valores .)
    DEF             reduce using rule 64 (impresion -> valor_print valores .)
    CORCHETE_IZ     reduce using rule 64 (impresion -> valor_print valores .)
    WHILE           reduce using rule 64 (impresion -> valor_print valores .)
    CASE            reduce using rule 64 (impresion -> valor_print valores .)
    UNTIL           reduce using rule 64 (impresion -> valor_print valores .)
    PARENTESIS_IZ   reduce using rule 64 (impresion -> valor_print valores .)
    SIMBOLO         reduce using rule 64 (impresion -> valor_print valores .)
    FLOTANTE        reduce using rule 64 (impresion -> valor_print valores .)
    ENTERO          reduce using rule 64 (impresion -> valor_print valores .)
    WHEN            reduce using rule 64 (impresion -> valor_print valores .)
    CLASS           reduce using rule 64 (impresion -> valor_print valores .)
    VARIABLECLASE   reduce using rule 64 (impresion -> valor_print valores .)
    CADENA          reduce using rule 64 (impresion -> valor_print valores .)
    $end            reduce using rule 64 (impresion -> valor_print valores .)
    DO              reduce using rule 64 (impresion -> valor_print valores .)
    END             reduce using rule 64 (impresion -> valor_print valores .)
    ELSE            reduce using rule 64 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 64 (impresion -> valor_print valores .)


state 77

    (53) valores -> valor .
    (54) valores -> valor . COMA valores
    (55) valores -> valor . estructura_ifUnaLinea
    (56) valores -> valor . sentencia_while_bool
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    VARIABLE        reduce using rule 53 (valores -> valor .)
    PRINT           reduce using rule 53 (valores -> valor .)
    PUTS            reduce using rule 53 (valores -> valor .)
    PRINTF          reduce using rule 53 (valores -> valor .)
    GETS            reduce using rule 53 (valores -> valor .)
    LLAVE_IZ        reduce using rule 53 (valores -> valor .)
    DEF             reduce using rule 53 (valores -> valor .)
    CORCHETE_IZ     reduce using rule 53 (valores -> valor .)
    CASE            reduce using rule 53 (valores -> valor .)
    UNTIL           reduce using rule 53 (valores -> valor .)
    PARENTESIS_IZ   reduce using rule 53 (valores -> valor .)
    SIMBOLO         reduce using rule 53 (valores -> valor .)
    FLOTANTE        reduce using rule 53 (valores -> valor .)
    ENTERO          reduce using rule 53 (valores -> valor .)
    WHEN            reduce using rule 53 (valores -> valor .)
    CLASS           reduce using rule 53 (valores -> valor .)
    VARIABLECLASE   reduce using rule 53 (valores -> valor .)
    CADENA          reduce using rule 53 (valores -> valor .)
    $end            reduce using rule 53 (valores -> valor .)
    DO              reduce using rule 53 (valores -> valor .)
    END             reduce using rule 53 (valores -> valor .)
    ELSE            reduce using rule 53 (valores -> valor .)
    ELSEIF          reduce using rule 53 (valores -> valor .)
    COMA            shift and go to state 162
    IF              shift and go to state 165
    WHILE           shift and go to state 166

  ! IF              [ reduce using rule 53 (valores -> valor .) ]
  ! WHILE           [ reduce using rule 53 (valores -> valor .) ]

    estructura_ifUnaLinea          shift and go to state 163
    sentencia_while_bool           shift and go to state 164

state 78

    (59) valor -> CADENA .

    COMA            reduce using rule 59 (valor -> CADENA .)
    IF              reduce using rule 59 (valor -> CADENA .)
    WHILE           reduce using rule 59 (valor -> CADENA .)
    VARIABLE        reduce using rule 59 (valor -> CADENA .)
    PRINT           reduce using rule 59 (valor -> CADENA .)
    PUTS            reduce using rule 59 (valor -> CADENA .)
    PRINTF          reduce using rule 59 (valor -> CADENA .)
    GETS            reduce using rule 59 (valor -> CADENA .)
    LLAVE_IZ        reduce using rule 59 (valor -> CADENA .)
    DEF             reduce using rule 59 (valor -> CADENA .)
    CORCHETE_IZ     reduce using rule 59 (valor -> CADENA .)
    CASE            reduce using rule 59 (valor -> CADENA .)
    UNTIL           reduce using rule 59 (valor -> CADENA .)
    PARENTESIS_IZ   reduce using rule 59 (valor -> CADENA .)
    SIMBOLO         reduce using rule 59 (valor -> CADENA .)
    FLOTANTE        reduce using rule 59 (valor -> CADENA .)
    ENTERO          reduce using rule 59 (valor -> CADENA .)
    WHEN            reduce using rule 59 (valor -> CADENA .)
    CLASS           reduce using rule 59 (valor -> CADENA .)
    VARIABLECLASE   reduce using rule 59 (valor -> CADENA .)
    CADENA          reduce using rule 59 (valor -> CADENA .)
    $end            reduce using rule 59 (valor -> CADENA .)
    DO              reduce using rule 59 (valor -> CADENA .)
    END             reduce using rule 59 (valor -> CADENA .)
    ELSE            reduce using rule 59 (valor -> CADENA .)
    ELSEIF          reduce using rule 59 (valor -> CADENA .)


state 79

    (60) valor -> valorNumerico .

    COMA            reduce using rule 60 (valor -> valorNumerico .)
    IF              reduce using rule 60 (valor -> valorNumerico .)
    WHILE           reduce using rule 60 (valor -> valorNumerico .)
    VARIABLE        reduce using rule 60 (valor -> valorNumerico .)
    PRINT           reduce using rule 60 (valor -> valorNumerico .)
    PUTS            reduce using rule 60 (valor -> valorNumerico .)
    PRINTF          reduce using rule 60 (valor -> valorNumerico .)
    GETS            reduce using rule 60 (valor -> valorNumerico .)
    LLAVE_IZ        reduce using rule 60 (valor -> valorNumerico .)
    DEF             reduce using rule 60 (valor -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 60 (valor -> valorNumerico .)
    CASE            reduce using rule 60 (valor -> valorNumerico .)
    UNTIL           reduce using rule 60 (valor -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 60 (valor -> valorNumerico .)
    SIMBOLO         reduce using rule 60 (valor -> valorNumerico .)
    FLOTANTE        reduce using rule 60 (valor -> valorNumerico .)
    ENTERO          reduce using rule 60 (valor -> valorNumerico .)
    WHEN            reduce using rule 60 (valor -> valorNumerico .)
    CLASS           reduce using rule 60 (valor -> valorNumerico .)
    VARIABLECLASE   reduce using rule 60 (valor -> valorNumerico .)
    CADENA          reduce using rule 60 (valor -> valorNumerico .)
    $end            reduce using rule 60 (valor -> valorNumerico .)
    DO              reduce using rule 60 (valor -> valorNumerico .)
    END             reduce using rule 60 (valor -> valorNumerico .)
    ELSE            reduce using rule 60 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 60 (valor -> valorNumerico .)


state 80

    (61) valor -> VARIABLE .

    COMA            reduce using rule 61 (valor -> VARIABLE .)
    IF              reduce using rule 61 (valor -> VARIABLE .)
    WHILE           reduce using rule 61 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 61 (valor -> VARIABLE .)
    PRINT           reduce using rule 61 (valor -> VARIABLE .)
    PUTS            reduce using rule 61 (valor -> VARIABLE .)
    PRINTF          reduce using rule 61 (valor -> VARIABLE .)
    GETS            reduce using rule 61 (valor -> VARIABLE .)
    LLAVE_IZ        reduce using rule 61 (valor -> VARIABLE .)
    DEF             reduce using rule 61 (valor -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 61 (valor -> VARIABLE .)
    CASE            reduce using rule 61 (valor -> VARIABLE .)
    UNTIL           reduce using rule 61 (valor -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 61 (valor -> VARIABLE .)
    SIMBOLO         reduce using rule 61 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 61 (valor -> VARIABLE .)
    ENTERO          reduce using rule 61 (valor -> VARIABLE .)
    WHEN            reduce using rule 61 (valor -> VARIABLE .)
    CLASS           reduce using rule 61 (valor -> VARIABLE .)
    VARIABLECLASE   reduce using rule 61 (valor -> VARIABLE .)
    CADENA          reduce using rule 61 (valor -> VARIABLE .)
    $end            reduce using rule 61 (valor -> VARIABLE .)
    DO              reduce using rule 61 (valor -> VARIABLE .)
    END             reduce using rule 61 (valor -> VARIABLE .)
    ELSE            reduce using rule 61 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 61 (valor -> VARIABLE .)


state 81

    (62) valor -> VARIABLECLASE .

    COMA            reduce using rule 62 (valor -> VARIABLECLASE .)
    IF              reduce using rule 62 (valor -> VARIABLECLASE .)
    WHILE           reduce using rule 62 (valor -> VARIABLECLASE .)
    VARIABLE        reduce using rule 62 (valor -> VARIABLECLASE .)
    PRINT           reduce using rule 62 (valor -> VARIABLECLASE .)
    PUTS            reduce using rule 62 (valor -> VARIABLECLASE .)
    PRINTF          reduce using rule 62 (valor -> VARIABLECLASE .)
    GETS            reduce using rule 62 (valor -> VARIABLECLASE .)
    LLAVE_IZ        reduce using rule 62 (valor -> VARIABLECLASE .)
    DEF             reduce using rule 62 (valor -> VARIABLECLASE .)
    CORCHETE_IZ     reduce using rule 62 (valor -> VARIABLECLASE .)
    CASE            reduce using rule 62 (valor -> VARIABLECLASE .)
    UNTIL           reduce using rule 62 (valor -> VARIABLECLASE .)
    PARENTESIS_IZ   reduce using rule 62 (valor -> VARIABLECLASE .)
    SIMBOLO         reduce using rule 62 (valor -> VARIABLECLASE .)
    FLOTANTE        reduce using rule 62 (valor -> VARIABLECLASE .)
    ENTERO          reduce using rule 62 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 62 (valor -> VARIABLECLASE .)
    CLASS           reduce using rule 62 (valor -> VARIABLECLASE .)
    VARIABLECLASE   reduce using rule 62 (valor -> VARIABLECLASE .)
    CADENA          reduce using rule 62 (valor -> VARIABLECLASE .)
    $end            reduce using rule 62 (valor -> VARIABLECLASE .)
    DO              reduce using rule 62 (valor -> VARIABLECLASE .)
    END             reduce using rule 62 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 62 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 62 (valor -> VARIABLECLASE .)


state 82

    (63) valor -> SIMBOLO .

    COMA            reduce using rule 63 (valor -> SIMBOLO .)
    IF              reduce using rule 63 (valor -> SIMBOLO .)
    WHILE           reduce using rule 63 (valor -> SIMBOLO .)
    VARIABLE        reduce using rule 63 (valor -> SIMBOLO .)
    PRINT           reduce using rule 63 (valor -> SIMBOLO .)
    PUTS            reduce using rule 63 (valor -> SIMBOLO .)
    PRINTF          reduce using rule 63 (valor -> SIMBOLO .)
    GETS            reduce using rule 63 (valor -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 63 (valor -> SIMBOLO .)
    DEF             reduce using rule 63 (valor -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 63 (valor -> SIMBOLO .)
    CASE            reduce using rule 63 (valor -> SIMBOLO .)
    UNTIL           reduce using rule 63 (valor -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 63 (valor -> SIMBOLO .)
    SIMBOLO         reduce using rule 63 (valor -> SIMBOLO .)
    FLOTANTE        reduce using rule 63 (valor -> SIMBOLO .)
    ENTERO          reduce using rule 63 (valor -> SIMBOLO .)
    WHEN            reduce using rule 63 (valor -> SIMBOLO .)
    CLASS           reduce using rule 63 (valor -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 63 (valor -> SIMBOLO .)
    CADENA          reduce using rule 63 (valor -> SIMBOLO .)
    $end            reduce using rule 63 (valor -> SIMBOLO .)
    DO              reduce using rule 63 (valor -> SIMBOLO .)
    END             reduce using rule 63 (valor -> SIMBOLO .)
    ELSE            reduce using rule 63 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 63 (valor -> SIMBOLO .)


state 83

    (93) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 167


state 84

    (48) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (47) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 168
    MAS             reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)


state 85

    (46) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 46 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 46 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 46 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 46 (expresionNumerica -> valorNumerico .)
    VARIABLE        reduce using rule 46 (expresionNumerica -> valorNumerico .)
    PRINT           reduce using rule 46 (expresionNumerica -> valorNumerico .)
    PUTS            reduce using rule 46 (expresionNumerica -> valorNumerico .)
    PRINTF          reduce using rule 46 (expresionNumerica -> valorNumerico .)
    GETS            reduce using rule 46 (expresionNumerica -> valorNumerico .)
    LLAVE_IZ        reduce using rule 46 (expresionNumerica -> valorNumerico .)
    IF              reduce using rule 46 (expresionNumerica -> valorNumerico .)
    DEF             reduce using rule 46 (expresionNumerica -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 46 (expresionNumerica -> valorNumerico .)
    WHILE           reduce using rule 46 (expresionNumerica -> valorNumerico .)
    CASE            reduce using rule 46 (expresionNumerica -> valorNumerico .)
    UNTIL           reduce using rule 46 (expresionNumerica -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 46 (expresionNumerica -> valorNumerico .)
    SIMBOLO         reduce using rule 46 (expresionNumerica -> valorNumerico .)
    FLOTANTE        reduce using rule 46 (expresionNumerica -> valorNumerico .)
    ENTERO          reduce using rule 46 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 46 (expresionNumerica -> valorNumerico .)
    CLASS           reduce using rule 46 (expresionNumerica -> valorNumerico .)
    VARIABLECLASE   reduce using rule 46 (expresionNumerica -> valorNumerico .)
    CADENA          reduce using rule 46 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 46 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 46 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 46 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 46 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 46 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 46 (expresionNumerica -> valorNumerico .)


state 86

    (49) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 49 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 49 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 49 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 49 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 49 (expresionNumerica -> VARIABLE .)


state 87

    (94) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 169


state 88

    (96) impresion_vacia -> PRINTF PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 170


state 89

    (106) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 32
    VARIABLE        shift and go to state 172

    valorSimbolo                   shift and go to state 171

state 90

    (107) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (110) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 174
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    valorNumerico                  shift and go to state 173

state 91

    (112) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (118) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 176

    funcionesFormatoImpresion      shift and go to state 175

state 92

    (156) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 177


state 93

    (157) hashes -> LLAVE_IZ LLAVE_DER .

    VARIABLE        reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINT           reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    PUTS            reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINTF          reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    GETS            reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    LLAVE_IZ        reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    IF              reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    DEF             reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHILE           reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    CASE            reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    UNTIL           reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    SIMBOLO         reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    FLOTANTE        reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    ENTERO          reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    CLASS           reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    VARIABLECLASE   reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    CADENA          reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    $end            reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 157 (hashes -> LLAVE_IZ LLAVE_DER .)


state 94

    (162) elemento_hash -> claveValor .
    (163) elemento_hash -> claveValor . COMA elemento_hash

    LLAVE_DER       reduce using rule 162 (elemento_hash -> claveValor .)
    COMA            shift and go to state 178


state 95

    (158) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (159) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 179


state 96

    (160) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (161) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 180


state 97

    (130) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (128) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (129) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 181
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 98

    (124) condicionIf -> expresiones_booleanas .
    (126) condicionIf -> expresiones_booleanas . funcionesComparacion condicionIf
    (104) funcionesComparacion -> . Y_SIGNO
    (105) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    PRINTF          reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 124 (condicionIf -> expresiones_booleanas .)
    Y_SIGNO         shift and go to state 183
    O_SIGNO         shift and go to state 184

    funcionesComparacion           shift and go to state 182

state 99

    (125) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (127) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 185


state 100

    (107) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75

    operadoresComparacion          shift and go to state 90

state 101

    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (28) valorSimbolo -> VARIABLE .
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75

  ! IGUAL_DOBLEP    [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 67

state 102

    (113) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (114) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (115) funciones -> DEF VARIABLE . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 186
    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 187
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 103

    (87) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 188


state 104

    (88) array -> CORCHETE_IZ CORCHETE_DER .

    VARIABLE        reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINT           reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    PUTS            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINTF          reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    GETS            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    IF              reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    DEF             reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHILE           reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    CASE            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    UNTIL           reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    SIMBOLO         reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    FLOTANTE        reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    ENTERO          reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    CLASS           reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    CADENA          reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    $end            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 88 (array -> CORCHETE_IZ CORCHETE_DER .)


state 105

    (80) elementos_array -> elemento_array . COMA elementos_array
    (81) elementos_array -> elemento_array .

    COMA            shift and go to state 189
    CORCHETE_DER    reduce using rule 81 (elementos_array -> elemento_array .)


state 106

    (82) elemento_array -> CADENA .

    COMA            reduce using rule 82 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 82 (elemento_array -> CADENA .)


state 107

    (83) elemento_array -> ENTERO .

    COMA            reduce using rule 83 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 83 (elemento_array -> ENTERO .)


state 108

    (84) elemento_array -> FLOTANTE .

    COMA            reduce using rule 84 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 84 (elemento_array -> FLOTANTE .)


state 109

    (85) elemento_array -> array .

    COMA            reduce using rule 85 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 85 (elemento_array -> array .)


state 110

    (86) elemento_array -> VARIABLE .

    COMA            reduce using rule 86 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 86 (elemento_array -> VARIABLE .)


state 111

    (149) sentencia_while -> WHILE expresiones_booleanas . sentencia_while END
    (150) sentencia_while -> WHILE expresiones_booleanas . declaracion END
    (137) declaracion -> expresiones_booleanas .
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for PRINTF resolved as shift
  ! shift/reduce conflict for GETS resolved as shift
  ! shift/reduce conflict for LLAVE_IZ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for PARENTESIS_IZ resolved as shift
  ! shift/reduce conflict for SIMBOLO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
    WHILE           shift and go to state 45
    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

  ! VARIABLE        [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PRINT           [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PUTS            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PRINTF          [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! GETS            [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! LLAVE_IZ        [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! IF              [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! VARIABLECLASE   [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! WHILE           [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! PARENTESIS_IZ   [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! SIMBOLO         [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! FLOTANTE        [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]
  ! ENTERO          [ reduce using rule 137 (declaracion -> expresiones_booleanas .) ]

    expresiones_booleanas          shift and go to state 128
    sentencia_while                shift and go to state 190
    declaracion                    shift and go to state 191
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 112

    (143) declaracion -> sentencia_while .

    VARIABLE        reduce using rule 143 (declaracion -> sentencia_while .)
    PRINT           reduce using rule 143 (declaracion -> sentencia_while .)
    PUTS            reduce using rule 143 (declaracion -> sentencia_while .)
    PRINTF          reduce using rule 143 (declaracion -> sentencia_while .)
    GETS            reduce using rule 143 (declaracion -> sentencia_while .)
    LLAVE_IZ        reduce using rule 143 (declaracion -> sentencia_while .)
    IF              reduce using rule 143 (declaracion -> sentencia_while .)
    VARIABLECLASE   reduce using rule 143 (declaracion -> sentencia_while .)
    WHILE           reduce using rule 143 (declaracion -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 143 (declaracion -> sentencia_while .)
    SIMBOLO         reduce using rule 143 (declaracion -> sentencia_while .)
    FLOTANTE        reduce using rule 143 (declaracion -> sentencia_while .)
    ENTERO          reduce using rule 143 (declaracion -> sentencia_while .)
    DO              reduce using rule 143 (declaracion -> sentencia_while .)
    END             reduce using rule 143 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 143 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 143 (declaracion -> sentencia_while .)
    WHEN            reduce using rule 143 (declaracion -> sentencia_while .)
    DEF             reduce using rule 143 (declaracion -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 143 (declaracion -> sentencia_while .)
    CASE            reduce using rule 143 (declaracion -> sentencia_while .)
    UNTIL           reduce using rule 143 (declaracion -> sentencia_while .)
    CLASS           reduce using rule 143 (declaracion -> sentencia_while .)
    CADENA          reduce using rule 143 (declaracion -> sentencia_while .)
    $end            reduce using rule 143 (declaracion -> sentencia_while .)


state 113

    (147) sentencia_while_bool -> WHILE declaracion . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 131
    declaraciones                  shift and go to state 192
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 114

    (148) sentencia_while_bool -> WHILE VARIABLE . declaraciones END
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (28) valorSimbolo -> VARIABLE .
    (71) asignacion -> VARIABLE . IGUAL CADENA
    (72) asignacion -> VARIABLE . IGUAL expresionNumerica
    (73) asignacion -> VARIABLE . IGUAL hashes
    (74) asignacion -> VARIABLE . IGUAL SIMBOLO
    (75) asignacion -> VARIABLE . IGUAL array
    (76) asignacion -> VARIABLE . IGUAL input_concatenacion
    (77) asignacion -> VARIABLE . IGUAL booleanos
    (78) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (79) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (70) asignacion_clase -> VARIABLE . IGUAL booleanos
    (49) expresionNumerica -> VARIABLE .
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 66
    MAS             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75
    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

  ! IGUAL_DOBLEP    [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]

    declaraciones                  shift and go to state 193
    operadoresComparacion          shift and go to state 67
    valorNumerico                  shift and go to state 39
    expresionNumerica              shift and go to state 27
    hashes                         shift and go to state 120
    solicitudDatosTeclado          shift and go to state 119
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38

state 115

    (133) declaracion -> operacionAritmetica .
    (47) expresionNumerica -> operacionAritmetica .

    VARIABLE        reduce using rule 133 (declaracion -> operacionAritmetica .)
    PRINT           reduce using rule 133 (declaracion -> operacionAritmetica .)
    PUTS            reduce using rule 133 (declaracion -> operacionAritmetica .)
    PRINTF          reduce using rule 133 (declaracion -> operacionAritmetica .)
    GETS            reduce using rule 133 (declaracion -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 133 (declaracion -> operacionAritmetica .)
    IF              reduce using rule 133 (declaracion -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 133 (declaracion -> operacionAritmetica .)
    WHILE           reduce using rule 133 (declaracion -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 133 (declaracion -> operacionAritmetica .)
    SIMBOLO         reduce using rule 133 (declaracion -> operacionAritmetica .)
    FLOTANTE        reduce using rule 133 (declaracion -> operacionAritmetica .)
    ENTERO          reduce using rule 133 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 133 (declaracion -> operacionAritmetica .)
    END             reduce using rule 133 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 133 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 133 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 133 (declaracion -> operacionAritmetica .)
    DEF             reduce using rule 133 (declaracion -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 133 (declaracion -> operacionAritmetica .)
    CASE            reduce using rule 133 (declaracion -> operacionAritmetica .)
    UNTIL           reduce using rule 133 (declaracion -> operacionAritmetica .)
    CLASS           reduce using rule 133 (declaracion -> operacionAritmetica .)
    CADENA          reduce using rule 133 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 133 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)


state 116

    (134) declaracion -> asignacion .

    VARIABLE        reduce using rule 134 (declaracion -> asignacion .)
    PRINT           reduce using rule 134 (declaracion -> asignacion .)
    PUTS            reduce using rule 134 (declaracion -> asignacion .)
    PRINTF          reduce using rule 134 (declaracion -> asignacion .)
    GETS            reduce using rule 134 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 134 (declaracion -> asignacion .)
    IF              reduce using rule 134 (declaracion -> asignacion .)
    VARIABLECLASE   reduce using rule 134 (declaracion -> asignacion .)
    WHILE           reduce using rule 134 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 134 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 134 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 134 (declaracion -> asignacion .)
    ENTERO          reduce using rule 134 (declaracion -> asignacion .)
    DO              reduce using rule 134 (declaracion -> asignacion .)
    END             reduce using rule 134 (declaracion -> asignacion .)
    ELSE            reduce using rule 134 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 134 (declaracion -> asignacion .)
    WHEN            reduce using rule 134 (declaracion -> asignacion .)
    DEF             reduce using rule 134 (declaracion -> asignacion .)
    CORCHETE_IZ     reduce using rule 134 (declaracion -> asignacion .)
    CASE            reduce using rule 134 (declaracion -> asignacion .)
    UNTIL           reduce using rule 134 (declaracion -> asignacion .)
    CLASS           reduce using rule 134 (declaracion -> asignacion .)
    CADENA          reduce using rule 134 (declaracion -> asignacion .)
    $end            reduce using rule 134 (declaracion -> asignacion .)


state 117

    (135) declaracion -> impresion .

    VARIABLE        reduce using rule 135 (declaracion -> impresion .)
    PRINT           reduce using rule 135 (declaracion -> impresion .)
    PUTS            reduce using rule 135 (declaracion -> impresion .)
    PRINTF          reduce using rule 135 (declaracion -> impresion .)
    GETS            reduce using rule 135 (declaracion -> impresion .)
    LLAVE_IZ        reduce using rule 135 (declaracion -> impresion .)
    IF              reduce using rule 135 (declaracion -> impresion .)
    VARIABLECLASE   reduce using rule 135 (declaracion -> impresion .)
    WHILE           reduce using rule 135 (declaracion -> impresion .)
    PARENTESIS_IZ   reduce using rule 135 (declaracion -> impresion .)
    SIMBOLO         reduce using rule 135 (declaracion -> impresion .)
    FLOTANTE        reduce using rule 135 (declaracion -> impresion .)
    ENTERO          reduce using rule 135 (declaracion -> impresion .)
    DO              reduce using rule 135 (declaracion -> impresion .)
    END             reduce using rule 135 (declaracion -> impresion .)
    ELSE            reduce using rule 135 (declaracion -> impresion .)
    ELSEIF          reduce using rule 135 (declaracion -> impresion .)
    WHEN            reduce using rule 135 (declaracion -> impresion .)
    DEF             reduce using rule 135 (declaracion -> impresion .)
    CORCHETE_IZ     reduce using rule 135 (declaracion -> impresion .)
    CASE            reduce using rule 135 (declaracion -> impresion .)
    UNTIL           reduce using rule 135 (declaracion -> impresion .)
    CLASS           reduce using rule 135 (declaracion -> impresion .)
    CADENA          reduce using rule 135 (declaracion -> impresion .)
    $end            reduce using rule 135 (declaracion -> impresion .)


state 118

    (136) declaracion -> impresion_vacia .

    VARIABLE        reduce using rule 136 (declaracion -> impresion_vacia .)
    PRINT           reduce using rule 136 (declaracion -> impresion_vacia .)
    PUTS            reduce using rule 136 (declaracion -> impresion_vacia .)
    PRINTF          reduce using rule 136 (declaracion -> impresion_vacia .)
    GETS            reduce using rule 136 (declaracion -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 136 (declaracion -> impresion_vacia .)
    IF              reduce using rule 136 (declaracion -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 136 (declaracion -> impresion_vacia .)
    WHILE           reduce using rule 136 (declaracion -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 136 (declaracion -> impresion_vacia .)
    SIMBOLO         reduce using rule 136 (declaracion -> impresion_vacia .)
    FLOTANTE        reduce using rule 136 (declaracion -> impresion_vacia .)
    ENTERO          reduce using rule 136 (declaracion -> impresion_vacia .)
    DO              reduce using rule 136 (declaracion -> impresion_vacia .)
    END             reduce using rule 136 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 136 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 136 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 136 (declaracion -> impresion_vacia .)
    DEF             reduce using rule 136 (declaracion -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 136 (declaracion -> impresion_vacia .)
    CASE            reduce using rule 136 (declaracion -> impresion_vacia .)
    UNTIL           reduce using rule 136 (declaracion -> impresion_vacia .)
    CLASS           reduce using rule 136 (declaracion -> impresion_vacia .)
    CADENA          reduce using rule 136 (declaracion -> impresion_vacia .)
    $end            reduce using rule 136 (declaracion -> impresion_vacia .)


state 119

    (138) declaracion -> solicitudDatosTeclado .

    VARIABLE        reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    PRINT           reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    PUTS            reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    GETS            reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    IF              reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    WHILE           reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    DEF             reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    CASE            reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    CLASS           reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    CADENA          reduce using rule 138 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 138 (declaracion -> solicitudDatosTeclado .)


state 120

    (139) declaracion -> hashes .

    VARIABLE        reduce using rule 139 (declaracion -> hashes .)
    PRINT           reduce using rule 139 (declaracion -> hashes .)
    PUTS            reduce using rule 139 (declaracion -> hashes .)
    PRINTF          reduce using rule 139 (declaracion -> hashes .)
    GETS            reduce using rule 139 (declaracion -> hashes .)
    LLAVE_IZ        reduce using rule 139 (declaracion -> hashes .)
    IF              reduce using rule 139 (declaracion -> hashes .)
    VARIABLECLASE   reduce using rule 139 (declaracion -> hashes .)
    WHILE           reduce using rule 139 (declaracion -> hashes .)
    PARENTESIS_IZ   reduce using rule 139 (declaracion -> hashes .)
    SIMBOLO         reduce using rule 139 (declaracion -> hashes .)
    FLOTANTE        reduce using rule 139 (declaracion -> hashes .)
    ENTERO          reduce using rule 139 (declaracion -> hashes .)
    DO              reduce using rule 139 (declaracion -> hashes .)
    END             reduce using rule 139 (declaracion -> hashes .)
    ELSE            reduce using rule 139 (declaracion -> hashes .)
    ELSEIF          reduce using rule 139 (declaracion -> hashes .)
    WHEN            reduce using rule 139 (declaracion -> hashes .)
    DEF             reduce using rule 139 (declaracion -> hashes .)
    CORCHETE_IZ     reduce using rule 139 (declaracion -> hashes .)
    CASE            reduce using rule 139 (declaracion -> hashes .)
    UNTIL           reduce using rule 139 (declaracion -> hashes .)
    CLASS           reduce using rule 139 (declaracion -> hashes .)
    CADENA          reduce using rule 139 (declaracion -> hashes .)
    $end            reduce using rule 139 (declaracion -> hashes .)


state 121

    (140) declaracion -> estructura_if .

    VARIABLE        reduce using rule 140 (declaracion -> estructura_if .)
    PRINT           reduce using rule 140 (declaracion -> estructura_if .)
    PUTS            reduce using rule 140 (declaracion -> estructura_if .)
    PRINTF          reduce using rule 140 (declaracion -> estructura_if .)
    GETS            reduce using rule 140 (declaracion -> estructura_if .)
    LLAVE_IZ        reduce using rule 140 (declaracion -> estructura_if .)
    IF              reduce using rule 140 (declaracion -> estructura_if .)
    VARIABLECLASE   reduce using rule 140 (declaracion -> estructura_if .)
    WHILE           reduce using rule 140 (declaracion -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 140 (declaracion -> estructura_if .)
    SIMBOLO         reduce using rule 140 (declaracion -> estructura_if .)
    FLOTANTE        reduce using rule 140 (declaracion -> estructura_if .)
    ENTERO          reduce using rule 140 (declaracion -> estructura_if .)
    DO              reduce using rule 140 (declaracion -> estructura_if .)
    END             reduce using rule 140 (declaracion -> estructura_if .)
    ELSE            reduce using rule 140 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 140 (declaracion -> estructura_if .)
    WHEN            reduce using rule 140 (declaracion -> estructura_if .)
    DEF             reduce using rule 140 (declaracion -> estructura_if .)
    CORCHETE_IZ     reduce using rule 140 (declaracion -> estructura_if .)
    CASE            reduce using rule 140 (declaracion -> estructura_if .)
    UNTIL           reduce using rule 140 (declaracion -> estructura_if .)
    CLASS           reduce using rule 140 (declaracion -> estructura_if .)
    CADENA          reduce using rule 140 (declaracion -> estructura_if .)
    $end            reduce using rule 140 (declaracion -> estructura_if .)


state 122

    (142) declaracion -> estructura_ifUnaLinea .

    VARIABLE        reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    GETS            reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    IF              reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    DEF             reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    CASE            reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 142 (declaracion -> estructura_ifUnaLinea .)


state 123

    (144) declaracion -> sentencia_while_bool .

    VARIABLE        reduce using rule 144 (declaracion -> sentencia_while_bool .)
    PRINT           reduce using rule 144 (declaracion -> sentencia_while_bool .)
    PUTS            reduce using rule 144 (declaracion -> sentencia_while_bool .)
    PRINTF          reduce using rule 144 (declaracion -> sentencia_while_bool .)
    GETS            reduce using rule 144 (declaracion -> sentencia_while_bool .)
    LLAVE_IZ        reduce using rule 144 (declaracion -> sentencia_while_bool .)
    IF              reduce using rule 144 (declaracion -> sentencia_while_bool .)
    VARIABLECLASE   reduce using rule 144 (declaracion -> sentencia_while_bool .)
    WHILE           reduce using rule 144 (declaracion -> sentencia_while_bool .)
    PARENTESIS_IZ   reduce using rule 144 (declaracion -> sentencia_while_bool .)
    SIMBOLO         reduce using rule 144 (declaracion -> sentencia_while_bool .)
    FLOTANTE        reduce using rule 144 (declaracion -> sentencia_while_bool .)
    ENTERO          reduce using rule 144 (declaracion -> sentencia_while_bool .)
    DO              reduce using rule 144 (declaracion -> sentencia_while_bool .)
    END             reduce using rule 144 (declaracion -> sentencia_while_bool .)
    ELSE            reduce using rule 144 (declaracion -> sentencia_while_bool .)
    ELSEIF          reduce using rule 144 (declaracion -> sentencia_while_bool .)
    WHEN            reduce using rule 144 (declaracion -> sentencia_while_bool .)
    DEF             reduce using rule 144 (declaracion -> sentencia_while_bool .)
    CORCHETE_IZ     reduce using rule 144 (declaracion -> sentencia_while_bool .)
    CASE            reduce using rule 144 (declaracion -> sentencia_while_bool .)
    UNTIL           reduce using rule 144 (declaracion -> sentencia_while_bool .)
    CLASS           reduce using rule 144 (declaracion -> sentencia_while_bool .)
    CADENA          reduce using rule 144 (declaracion -> sentencia_while_bool .)
    $end            reduce using rule 144 (declaracion -> sentencia_while_bool .)


state 124

    (128) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (130) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (124) condicionIf -> . expresiones_booleanas
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (127) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 99
    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    condicionIf                    shift and go to state 194
    expresiones_booleanas          shift and go to state 98
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 125

    (151) sentencia_case -> CASE VARIABLE . sentencia_when END
    (152) sentencia_when -> . WHEN declaracion declaracion

    WHEN            shift and go to state 54

    sentencia_when                 shift and go to state 195

state 126

    (154) sentencias_when -> sentencia_when sentencias_when .

    VARIABLE        reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    PRINT           reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    PUTS            reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    PRINTF          reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    GETS            reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    LLAVE_IZ        reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    IF              reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    DEF             reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    CORCHETE_IZ     reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    WHILE           reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    CASE            reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    UNTIL           reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    PARENTESIS_IZ   reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    SIMBOLO         reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    FLOTANTE        reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    ENTERO          reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    WHEN            reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    CLASS           reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    VARIABLECLASE   reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    CADENA          reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    $end            reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 154 (sentencias_when -> sentencia_when sentencias_when .)


state 127

    (155) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 196


state 128

    (137) declaracion -> expresiones_booleanas .

    DO              reduce using rule 137 (declaracion -> expresiones_booleanas .)
    VARIABLE        reduce using rule 137 (declaracion -> expresiones_booleanas .)
    PRINT           reduce using rule 137 (declaracion -> expresiones_booleanas .)
    PUTS            reduce using rule 137 (declaracion -> expresiones_booleanas .)
    PRINTF          reduce using rule 137 (declaracion -> expresiones_booleanas .)
    GETS            reduce using rule 137 (declaracion -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 137 (declaracion -> expresiones_booleanas .)
    IF              reduce using rule 137 (declaracion -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 137 (declaracion -> expresiones_booleanas .)
    WHILE           reduce using rule 137 (declaracion -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 137 (declaracion -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 137 (declaracion -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 137 (declaracion -> expresiones_booleanas .)
    ENTERO          reduce using rule 137 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 137 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 137 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 137 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 137 (declaracion -> expresiones_booleanas .)
    DEF             reduce using rule 137 (declaracion -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 137 (declaracion -> expresiones_booleanas .)
    CASE            reduce using rule 137 (declaracion -> expresiones_booleanas .)
    UNTIL           reduce using rule 137 (declaracion -> expresiones_booleanas .)
    CLASS           reduce using rule 137 (declaracion -> expresiones_booleanas .)
    CADENA          reduce using rule 137 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 137 (declaracion -> expresiones_booleanas .)


state 129

    (71) asignacion -> VARIABLE . IGUAL CADENA
    (72) asignacion -> VARIABLE . IGUAL expresionNumerica
    (73) asignacion -> VARIABLE . IGUAL hashes
    (74) asignacion -> VARIABLE . IGUAL SIMBOLO
    (75) asignacion -> VARIABLE . IGUAL array
    (76) asignacion -> VARIABLE . IGUAL input_concatenacion
    (77) asignacion -> VARIABLE . IGUAL booleanos
    (78) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (79) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (70) asignacion_clase -> VARIABLE . IGUAL booleanos
    (49) expresionNumerica -> VARIABLE .
    (28) valorSimbolo -> VARIABLE .
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 66
    MAS             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75

  ! IGUAL_DOBLEP    [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 67

state 130

    (169) definicion_clase -> encabezadoClase declaraciones . END

    END             shift and go to state 197


state 131

    (145) declaraciones -> declaracion .
    (146) declaraciones -> declaracion . declaraciones
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    END             reduce using rule 145 (declaraciones -> declaracion .)
    ELSE            reduce using rule 145 (declaraciones -> declaracion .)
    ELSEIF          reduce using rule 145 (declaraciones -> declaracion .)
    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 131
    declaraciones                  shift and go to state 198
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 132

    (34) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    CADENA          shift and go to state 31
    VARIABLE        shift and go to state 139

    valorCadena                    shift and go to state 199

state 133

    (152) sentencia_when -> WHEN declaracion . declaracion
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 200
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 134

    (167) encabezadoClase -> CLASS ID_CLASE .
    (168) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    VARIABLE        reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    PRINT           reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    PUTS            reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    PRINTF          reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    GETS            reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    LLAVE_IZ        reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    IF              reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    VARIABLECLASE   reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    WHILE           reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    PARENTESIS_IZ   reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    SIMBOLO         reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    FLOTANTE        reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    ENTERO          reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 201


state 135

    (65) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (66) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (67) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (68) asignacion_clase -> VARIABLECLASE IGUAL . array
    (69) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER
    (29) input_concatenacion -> . concatenacionSimpleCadena
    (30) input_concatenacion -> . concatenacion_funcion
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (34) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (35) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (31) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    CADENA          shift and go to state 202
    PARENTESIS_IZ   shift and go to state 35
    VARIABLE        shift and go to state 207
    LLAVE_IZ        shift and go to state 41
    CORCHETE_IZ     shift and go to state 44
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    expresionNumerica              shift and go to state 203
    hashes                         shift and go to state 204
    array                          shift and go to state 205
    input_concatenacion            shift and go to state 206
    valorNumerico                  shift and go to state 85
    operacionAritmetica            shift and go to state 137
    concatenacionSimpleCadena      shift and go to state 28
    concatenacion_funcion          shift and go to state 29
    valorCadena                    shift and go to state 51

state 136

    (50) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (50) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (40) operadores -> . MAS
    (41) operadores -> . MENOS
    (42) operadores -> . DIVISION
    (43) operadores -> . MULTIPLICACION
    (44) operadores -> . EXPONENCIACION
    (45) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    VARIABLE        reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINT           reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PUTS            reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINTF          reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    GETS            reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    LLAVE_IZ        reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IF              reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DEF             reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CORCHETE_IZ     reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHILE           reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CASE            reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    UNTIL           reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    SIMBOLO         reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    FLOTANTE        reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ENTERO          reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CLASS           reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    VARIABLECLASE   reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CADENA          reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    $end            reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    DIVISION        shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    EXPONENCIACION  shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 50 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 58

state 137

    (47) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    VARIABLE        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    PRINT           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    PUTS            reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    PRINTF          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    GETS            reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    IF              reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    DEF             reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    WHILE           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    CASE            reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    UNTIL           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    SIMBOLO         reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    FLOTANTE        reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    ENTERO          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    CLASS           reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    CADENA          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 47 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 47 (expresionNumerica -> operacionAritmetica .)


state 138

    (35) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLE        reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINT           reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PUTS            reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINTF          reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    GETS            reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IF              reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DEF             reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHILE           reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CASE            reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    UNTIL           reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ENTERO          reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CLASS           reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CADENA          reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 35 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 139

    (33) valorCadena -> VARIABLE .

    MAS             reduce using rule 33 (valorCadena -> VARIABLE .)
    VARIABLE        reduce using rule 33 (valorCadena -> VARIABLE .)
    PRINT           reduce using rule 33 (valorCadena -> VARIABLE .)
    PUTS            reduce using rule 33 (valorCadena -> VARIABLE .)
    PRINTF          reduce using rule 33 (valorCadena -> VARIABLE .)
    GETS            reduce using rule 33 (valorCadena -> VARIABLE .)
    LLAVE_IZ        reduce using rule 33 (valorCadena -> VARIABLE .)
    IF              reduce using rule 33 (valorCadena -> VARIABLE .)
    DEF             reduce using rule 33 (valorCadena -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 33 (valorCadena -> VARIABLE .)
    WHILE           reduce using rule 33 (valorCadena -> VARIABLE .)
    CASE            reduce using rule 33 (valorCadena -> VARIABLE .)
    UNTIL           reduce using rule 33 (valorCadena -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 33 (valorCadena -> VARIABLE .)
    SIMBOLO         reduce using rule 33 (valorCadena -> VARIABLE .)
    FLOTANTE        reduce using rule 33 (valorCadena -> VARIABLE .)
    ENTERO          reduce using rule 33 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 33 (valorCadena -> VARIABLE .)
    CLASS           reduce using rule 33 (valorCadena -> VARIABLE .)
    VARIABLECLASE   reduce using rule 33 (valorCadena -> VARIABLE .)
    CADENA          reduce using rule 33 (valorCadena -> VARIABLE .)
    $end            reduce using rule 33 (valorCadena -> VARIABLE .)
    DO              reduce using rule 33 (valorCadena -> VARIABLE .)
    END             reduce using rule 33 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 33 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 33 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 33 (valorCadena -> VARIABLE .)


state 140

    (49) expresionNumerica -> VARIABLE .
    (39) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (31) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (33) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 33 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 49 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 49 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 49 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 49 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 208
    MAS             reduce using rule 33 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 49 (expresionNumerica -> VARIABLE .) ]


state 141

    (71) asignacion -> VARIABLE IGUAL CADENA .
    (32) valorCadena -> CADENA .

    VARIABLE        reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINT           reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    PUTS            reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINTF          reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    GETS            reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    IF              reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    DEF             reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    WHILE           reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    CASE            reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    UNTIL           reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    SIMBOLO         reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    FLOTANTE        reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    ENTERO          reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    CLASS           reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    CADENA          reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 71 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 32 (valorCadena -> CADENA .)


state 142

    (72) asignacion -> VARIABLE IGUAL expresionNumerica .
    (50) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (40) operadores -> . MAS
    (41) operadores -> . MENOS
    (42) operadores -> . DIVISION
    (43) operadores -> . MULTIPLICACION
    (44) operadores -> . EXPONENCIACION
    (45) operadores -> . MODULO

    VARIABLE        reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINT           reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PUTS            reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    GETS            reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IF              reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DEF             reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHILE           reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CASE            reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CLASS           reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CADENA          reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    $end            reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 72 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    DIVISION        shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    EXPONENCIACION  shift and go to state 63
    MODULO          shift and go to state 64

    operadores                     shift and go to state 58

state 143

    (73) asignacion -> VARIABLE IGUAL hashes .

    VARIABLE        reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    PRINT           reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    PUTS            reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    PRINTF          reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    GETS            reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    IF              reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    DEF             reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    WHILE           reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    CASE            reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    UNTIL           reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    SIMBOLO         reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    FLOTANTE        reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    ENTERO          reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    CLASS           reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    CADENA          reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    $end            reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 73 (asignacion -> VARIABLE IGUAL hashes .)


state 144

    (74) asignacion -> VARIABLE IGUAL SIMBOLO .

    VARIABLE        reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINT           reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PUTS            reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINTF          reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    GETS            reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    LLAVE_IZ        reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IF              reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DEF             reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CORCHETE_IZ     reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHILE           reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CASE            reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    UNTIL           reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    SIMBOLO         reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    FLOTANTE        reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ENTERO          reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CLASS           reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    VARIABLECLASE   reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CADENA          reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    $end            reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 74 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 145

    (75) asignacion -> VARIABLE IGUAL array .

    VARIABLE        reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    PRINT           reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    PUTS            reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    PRINTF          reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    GETS            reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    LLAVE_IZ        reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    IF              reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    DEF             reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    CORCHETE_IZ     reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    WHILE           reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    CASE            reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    UNTIL           reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    SIMBOLO         reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    FLOTANTE        reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    ENTERO          reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    CLASS           reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    VARIABLECLASE   reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    CADENA          reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    $end            reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 75 (asignacion -> VARIABLE IGUAL array .)


state 146

    (76) asignacion -> VARIABLE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINT           reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PUTS            reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    GETS            reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IF              reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DEF             reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHILE           reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CASE            reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CLASS           reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CADENA          reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    $end            reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 76 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 147

    (77) asignacion -> VARIABLE IGUAL booleanos .
    (70) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLE resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CASE resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for UNTIL resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHEN resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CLASS resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CADENA resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CORCHETE_IZ     reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    UNTIL           reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CLASS           reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CADENA          reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 70 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLE        [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CORCHETE_IZ     [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CASE            [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! UNTIL           [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHEN            [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CLASS           [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLECLASE   [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CADENA          [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 77 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 148

    (78) asignacion -> VARIABLE IGUAL solicitudDatosTeclado .

    VARIABLE        reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINT           reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PUTS            reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINTF          reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    GETS            reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IF              reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DEF             reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHILE           reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CASE            reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    UNTIL           reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ENTERO          reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHEN            reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CLASS           reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CADENA          reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    $end            reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DO              reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    END             reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSE            reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSEIF          reduce using rule 78 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)


state 149

    (79) asignacion -> VARIABLE IGUAL entero_a_flotante .

    VARIABLE        reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINT           reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PUTS            reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINTF          reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    GETS            reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    LLAVE_IZ        reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IF              reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DEF             reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHILE           reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CASE            reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    UNTIL           reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    SIMBOLO         reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    FLOTANTE        reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ENTERO          reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHEN            reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CLASS           reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    VARIABLECLASE   reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CADENA          reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    $end            reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DO              reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    END             reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSE            reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSEIF          reduce using rule 79 (asignacion -> VARIABLE IGUAL entero_a_flotante .)


state 150

    (57) booleanos -> TRUE .

    VARIABLE        reduce using rule 57 (booleanos -> TRUE .)
    PRINT           reduce using rule 57 (booleanos -> TRUE .)
    PUTS            reduce using rule 57 (booleanos -> TRUE .)
    PRINTF          reduce using rule 57 (booleanos -> TRUE .)
    GETS            reduce using rule 57 (booleanos -> TRUE .)
    LLAVE_IZ        reduce using rule 57 (booleanos -> TRUE .)
    IF              reduce using rule 57 (booleanos -> TRUE .)
    DEF             reduce using rule 57 (booleanos -> TRUE .)
    CORCHETE_IZ     reduce using rule 57 (booleanos -> TRUE .)
    WHILE           reduce using rule 57 (booleanos -> TRUE .)
    CASE            reduce using rule 57 (booleanos -> TRUE .)
    UNTIL           reduce using rule 57 (booleanos -> TRUE .)
    PARENTESIS_IZ   reduce using rule 57 (booleanos -> TRUE .)
    SIMBOLO         reduce using rule 57 (booleanos -> TRUE .)
    FLOTANTE        reduce using rule 57 (booleanos -> TRUE .)
    ENTERO          reduce using rule 57 (booleanos -> TRUE .)
    WHEN            reduce using rule 57 (booleanos -> TRUE .)
    CLASS           reduce using rule 57 (booleanos -> TRUE .)
    VARIABLECLASE   reduce using rule 57 (booleanos -> TRUE .)
    CADENA          reduce using rule 57 (booleanos -> TRUE .)
    $end            reduce using rule 57 (booleanos -> TRUE .)
    DO              reduce using rule 57 (booleanos -> TRUE .)
    END             reduce using rule 57 (booleanos -> TRUE .)
    ELSE            reduce using rule 57 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 57 (booleanos -> TRUE .)


state 151

    (58) booleanos -> FALSE .

    VARIABLE        reduce using rule 58 (booleanos -> FALSE .)
    PRINT           reduce using rule 58 (booleanos -> FALSE .)
    PUTS            reduce using rule 58 (booleanos -> FALSE .)
    PRINTF          reduce using rule 58 (booleanos -> FALSE .)
    GETS            reduce using rule 58 (booleanos -> FALSE .)
    LLAVE_IZ        reduce using rule 58 (booleanos -> FALSE .)
    IF              reduce using rule 58 (booleanos -> FALSE .)
    DEF             reduce using rule 58 (booleanos -> FALSE .)
    CORCHETE_IZ     reduce using rule 58 (booleanos -> FALSE .)
    WHILE           reduce using rule 58 (booleanos -> FALSE .)
    CASE            reduce using rule 58 (booleanos -> FALSE .)
    UNTIL           reduce using rule 58 (booleanos -> FALSE .)
    PARENTESIS_IZ   reduce using rule 58 (booleanos -> FALSE .)
    SIMBOLO         reduce using rule 58 (booleanos -> FALSE .)
    FLOTANTE        reduce using rule 58 (booleanos -> FALSE .)
    ENTERO          reduce using rule 58 (booleanos -> FALSE .)
    WHEN            reduce using rule 58 (booleanos -> FALSE .)
    CLASS           reduce using rule 58 (booleanos -> FALSE .)
    VARIABLECLASE   reduce using rule 58 (booleanos -> FALSE .)
    CADENA          reduce using rule 58 (booleanos -> FALSE .)
    $end            reduce using rule 58 (booleanos -> FALSE .)
    DO              reduce using rule 58 (booleanos -> FALSE .)
    END             reduce using rule 58 (booleanos -> FALSE .)
    ELSE            reduce using rule 58 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 58 (booleanos -> FALSE .)


state 152

    (108) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DEF             reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CASE            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    $end            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 153

    (109) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DEF             reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CASE            reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    $end            reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 109 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 154

    (120) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    VARIABLE        reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINT           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PUTS            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINTF          reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    GETS            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    LLAVE_IZ        reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    IF              reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    DEF             reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CORCHETE_IZ     reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHILE           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CASE            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    UNTIL           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PARENTESIS_IZ   reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    SIMBOLO         reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    FLOTANTE        reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    ENTERO          reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHEN            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CLASS           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    VARIABLECLASE   reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CADENA          reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    $end            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 155

    (121) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    VARIABLE        reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINT           reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PUTS            reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINTF          reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    GETS            reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    LLAVE_IZ        reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    IF              reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    DEF             reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CORCHETE_IZ     reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHILE           reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CASE            reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    UNTIL           reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PARENTESIS_IZ   reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    SIMBOLO         reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    FLOTANTE        reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    ENTERO          reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHEN            reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CLASS           reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    VARIABLECLASE   reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CADENA          reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    $end            reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 121 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 156

    (89) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 209


state 157

    (164) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 210


state 158

    (39) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (119) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for VARIABLE resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINT resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PUTS resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINTF resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for GETS resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for IF resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for DEF resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CASE resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for UNTIL resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for ENTERO resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHEN resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CLASS resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CADENA resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for $end resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLE        reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! VARIABLE        [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! PRINT           [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! PUTS            [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! PRINTF          [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! GETS            [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! LLAVE_IZ        [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! IF              [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! DEF             [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! CORCHETE_IZ     [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! WHILE           [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! CASE            [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! UNTIL           [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! PARENTESIS_IZ   [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! SIMBOLO         [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! FLOTANTE        [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! ENTERO          [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! WHEN            [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! CLASS           [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! VARIABLECLASE   [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! CADENA          [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! $end            [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 119 (funcionesNumeros -> TO_F .) ]


state 159

    (31) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 211


state 160

    (116) funcionesArray -> SORT .

    VARIABLE        reduce using rule 116 (funcionesArray -> SORT .)
    PRINT           reduce using rule 116 (funcionesArray -> SORT .)
    PUTS            reduce using rule 116 (funcionesArray -> SORT .)
    PRINTF          reduce using rule 116 (funcionesArray -> SORT .)
    GETS            reduce using rule 116 (funcionesArray -> SORT .)
    LLAVE_IZ        reduce using rule 116 (funcionesArray -> SORT .)
    IF              reduce using rule 116 (funcionesArray -> SORT .)
    DEF             reduce using rule 116 (funcionesArray -> SORT .)
    CORCHETE_IZ     reduce using rule 116 (funcionesArray -> SORT .)
    WHILE           reduce using rule 116 (funcionesArray -> SORT .)
    CASE            reduce using rule 116 (funcionesArray -> SORT .)
    UNTIL           reduce using rule 116 (funcionesArray -> SORT .)
    PARENTESIS_IZ   reduce using rule 116 (funcionesArray -> SORT .)
    SIMBOLO         reduce using rule 116 (funcionesArray -> SORT .)
    FLOTANTE        reduce using rule 116 (funcionesArray -> SORT .)
    ENTERO          reduce using rule 116 (funcionesArray -> SORT .)
    WHEN            reduce using rule 116 (funcionesArray -> SORT .)
    CLASS           reduce using rule 116 (funcionesArray -> SORT .)
    VARIABLECLASE   reduce using rule 116 (funcionesArray -> SORT .)
    CADENA          reduce using rule 116 (funcionesArray -> SORT .)
    $end            reduce using rule 116 (funcionesArray -> SORT .)
    END             reduce using rule 116 (funcionesArray -> SORT .)


state 161

    (117) funcionesArray -> FOR . EACH

    EACH            shift and go to state 212


state 162

    (54) valores -> valor COMA . valores
    (53) valores -> . valor
    (54) valores -> . valor COMA valores
    (55) valores -> . valor estructura_ifUnaLinea
    (56) valores -> . valor sentencia_while_bool
    (59) valor -> . CADENA
    (60) valor -> . valorNumerico
    (61) valor -> . VARIABLE
    (62) valor -> . VARIABLECLASE
    (63) valor -> . SIMBOLO
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    CADENA          shift and go to state 78
    VARIABLE        shift and go to state 80
    VARIABLECLASE   shift and go to state 81
    SIMBOLO         shift and go to state 82
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    valor                          shift and go to state 77
    valores                        shift and go to state 213
    valorNumerico                  shift and go to state 79

state 163

    (55) valores -> valor estructura_ifUnaLinea .

    VARIABLE        reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    PRINT           reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    PUTS            reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    PRINTF          reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    GETS            reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    IF              reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    DEF             reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    WHILE           reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    CASE            reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    UNTIL           reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    ENTERO          reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    CLASS           reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    CADENA          reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    $end            reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 55 (valores -> valor estructura_ifUnaLinea .)


state 164

    (56) valores -> valor sentencia_while_bool .

    VARIABLE        reduce using rule 56 (valores -> valor sentencia_while_bool .)
    PRINT           reduce using rule 56 (valores -> valor sentencia_while_bool .)
    PUTS            reduce using rule 56 (valores -> valor sentencia_while_bool .)
    PRINTF          reduce using rule 56 (valores -> valor sentencia_while_bool .)
    GETS            reduce using rule 56 (valores -> valor sentencia_while_bool .)
    LLAVE_IZ        reduce using rule 56 (valores -> valor sentencia_while_bool .)
    IF              reduce using rule 56 (valores -> valor sentencia_while_bool .)
    DEF             reduce using rule 56 (valores -> valor sentencia_while_bool .)
    CORCHETE_IZ     reduce using rule 56 (valores -> valor sentencia_while_bool .)
    WHILE           reduce using rule 56 (valores -> valor sentencia_while_bool .)
    CASE            reduce using rule 56 (valores -> valor sentencia_while_bool .)
    UNTIL           reduce using rule 56 (valores -> valor sentencia_while_bool .)
    PARENTESIS_IZ   reduce using rule 56 (valores -> valor sentencia_while_bool .)
    SIMBOLO         reduce using rule 56 (valores -> valor sentencia_while_bool .)
    FLOTANTE        reduce using rule 56 (valores -> valor sentencia_while_bool .)
    ENTERO          reduce using rule 56 (valores -> valor sentencia_while_bool .)
    WHEN            reduce using rule 56 (valores -> valor sentencia_while_bool .)
    CLASS           reduce using rule 56 (valores -> valor sentencia_while_bool .)
    VARIABLECLASE   reduce using rule 56 (valores -> valor sentencia_while_bool .)
    CADENA          reduce using rule 56 (valores -> valor sentencia_while_bool .)
    $end            reduce using rule 56 (valores -> valor sentencia_while_bool .)
    DO              reduce using rule 56 (valores -> valor sentencia_while_bool .)
    END             reduce using rule 56 (valores -> valor sentencia_while_bool .)
    ELSE            reduce using rule 56 (valores -> valor sentencia_while_bool .)
    ELSEIF          reduce using rule 56 (valores -> valor sentencia_while_bool .)


state 165

    (130) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (124) condicionIf -> . expresiones_booleanas
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (127) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 99
    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    condicionIf                    shift and go to state 214
    expresiones_booleanas          shift and go to state 98
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 166

    (147) sentencia_while_bool -> WHILE . declaracion declaraciones END
    (148) sentencia_while_bool -> WHILE . VARIABLE declaraciones END
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 215
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 113
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 167

    (93) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 93 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 168

    (48) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINT           reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PUTS            reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINTF          reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    GETS            reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IF              reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DEF             reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHILE           reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CASE            reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    UNTIL           reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ENTERO          reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CLASS           reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CADENA          reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 169

    (94) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 94 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 170

    (96) impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 96 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)


state 171

    (106) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    VARIABLE        reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINTF          reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DEF             reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CORCHETE_IZ     reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CASE            reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    UNTIL           reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CLASS           reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CADENA          reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    $end            reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    Y_SIGNO         reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    O_SIGNO         reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_DER  reduce using rule 106 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)


state 172

    (28) valorSimbolo -> VARIABLE .

    VARIABLE        reduce using rule 28 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 28 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 28 (valorSimbolo -> VARIABLE .)
    PRINTF          reduce using rule 28 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 28 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 28 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 28 (valorSimbolo -> VARIABLE .)
    DEF             reduce using rule 28 (valorSimbolo -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 28 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 28 (valorSimbolo -> VARIABLE .)
    CASE            reduce using rule 28 (valorSimbolo -> VARIABLE .)
    UNTIL           reduce using rule 28 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 28 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 28 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 28 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 28 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 28 (valorSimbolo -> VARIABLE .)
    CLASS           reduce using rule 28 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 28 (valorSimbolo -> VARIABLE .)
    CADENA          reduce using rule 28 (valorSimbolo -> VARIABLE .)
    $end            reduce using rule 28 (valorSimbolo -> VARIABLE .)
    Y_SIGNO         reduce using rule 28 (valorSimbolo -> VARIABLE .)
    O_SIGNO         reduce using rule 28 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 28 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 28 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 28 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 28 (valorSimbolo -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 28 (valorSimbolo -> VARIABLE .)


state 173

    (107) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DEF             reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CASE            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    $end            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 174

    (110) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DEF             reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CASE            reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    $end            reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 110 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 175

    (112) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    VARIABLE        reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINT           reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PUTS            reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINTF          reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    GETS            reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    LLAVE_IZ        reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IF              reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DEF             reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CORCHETE_IZ     reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHILE           reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CASE            reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    UNTIL           reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PARENTESIS_IZ   reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    SIMBOLO         reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    FLOTANTE        reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ENTERO          reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CLASS           reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    VARIABLECLASE   reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CADENA          reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    $end            reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 112 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 176

    (118) funcionesFormatoImpresion -> CHOMP .

    VARIABLE        reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    PRINT           reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    PUTS            reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    PRINTF          reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    GETS            reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    LLAVE_IZ        reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    IF              reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    DEF             reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    CORCHETE_IZ     reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    WHILE           reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    CASE            reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    UNTIL           reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    PARENTESIS_IZ   reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    SIMBOLO         reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    FLOTANTE        reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    ENTERO          reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    CLASS           reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    VARIABLECLASE   reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    CADENA          reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    $end            reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 118 (funcionesFormatoImpresion -> CHOMP .)


state 177

    (156) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    VARIABLE        reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINT           reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PUTS            reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINTF          reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    GETS            reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    LLAVE_IZ        reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IF              reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DEF             reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHILE           reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CASE            reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    UNTIL           reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    SIMBOLO         reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    FLOTANTE        reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ENTERO          reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CLASS           reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    VARIABLECLASE   reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CADENA          reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    $end            reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 156 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 178

    (163) elemento_hash -> claveValor COMA . elemento_hash
    (162) elemento_hash -> . claveValor
    (163) elemento_hash -> . claveValor COMA elemento_hash
    (158) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (159) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (160) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (161) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 95
    CADENA          shift and go to state 96

    claveValor                     shift and go to state 94
    elemento_hash                  shift and go to state 216

state 179

    (158) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (159) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    CADENA          shift and go to state 218
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    valorNumerico                  shift and go to state 217

state 180

    (160) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (161) claveValor -> CADENA ASIGNA_HASH . CADENA
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    CADENA          shift and go to state 219
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    valorNumerico                  shift and go to state 220

state 181

    (130) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (128) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (129) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (131) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (132) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    END             shift and go to state 221
    ELSE            shift and go to state 222
    ELSEIF          shift and go to state 224

    estructura_secundaria_if       shift and go to state 223

state 182

    (126) condicionIf -> expresiones_booleanas funcionesComparacion . condicionIf
    (124) condicionIf -> . expresiones_booleanas
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (127) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 99
    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    expresiones_booleanas          shift and go to state 98
    condicionIf                    shift and go to state 225
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 183

    (104) funcionesComparacion -> Y_SIGNO .

    EXCLAMACION_BAJO reduce using rule 104 (funcionesComparacion -> Y_SIGNO .)
    VARIABLE        reduce using rule 104 (funcionesComparacion -> Y_SIGNO .)
    SIMBOLO         reduce using rule 104 (funcionesComparacion -> Y_SIGNO .)
    FLOTANTE        reduce using rule 104 (funcionesComparacion -> Y_SIGNO .)
    ENTERO          reduce using rule 104 (funcionesComparacion -> Y_SIGNO .)


state 184

    (105) funcionesComparacion -> O_SIGNO .

    EXCLAMACION_BAJO reduce using rule 105 (funcionesComparacion -> O_SIGNO .)
    VARIABLE        reduce using rule 105 (funcionesComparacion -> O_SIGNO .)
    SIMBOLO         reduce using rule 105 (funcionesComparacion -> O_SIGNO .)
    FLOTANTE        reduce using rule 105 (funcionesComparacion -> O_SIGNO .)
    ENTERO          reduce using rule 105 (funcionesComparacion -> O_SIGNO .)


state 185

    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (127) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    expresiones_booleanas          shift and go to state 226
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 186

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaraciones END
    (114) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaraciones END
    (48) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (122) argumentos -> . VARIABLE
    (123) argumentos -> . VARIABLE COMA argumentos
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    PARENTESIS_DER  shift and go to state 228
    VARIABLE        shift and go to state 227
    PARENTESIS_IZ   shift and go to state 35
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    argumentos                     shift and go to state 229
    operacionAritmetica            shift and go to state 84
    expresionNumerica              shift and go to state 27
    valorNumerico                  shift and go to state 85

state 187

    (115) funciones -> DEF VARIABLE declaraciones . END

    END             shift and go to state 230


state 188

    (87) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    VARIABLE        reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINT           reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PUTS            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINTF          reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    GETS            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IF              reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DEF             reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHILE           reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CASE            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    UNTIL           reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    SIMBOLO         reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    FLOTANTE        reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ENTERO          reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CLASS           reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CADENA          reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    $end            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 87 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 189

    (80) elementos_array -> elemento_array COMA . elementos_array
    (80) elementos_array -> . elemento_array COMA elementos_array
    (81) elementos_array -> . elemento_array
    (82) elemento_array -> . CADENA
    (83) elemento_array -> . ENTERO
    (84) elemento_array -> . FLOTANTE
    (85) elemento_array -> . array
    (86) elemento_array -> . VARIABLE
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 106
    ENTERO          shift and go to state 107
    FLOTANTE        shift and go to state 108
    VARIABLE        shift and go to state 110
    CORCHETE_IZ     shift and go to state 44

    elemento_array                 shift and go to state 105
    elementos_array                shift and go to state 231
    array                          shift and go to state 109

state 190

    (149) sentencia_while -> WHILE expresiones_booleanas sentencia_while . END
    (143) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 232

  ! END             [ reduce using rule 143 (declaracion -> sentencia_while .) ]


state 191

    (150) sentencia_while -> WHILE expresiones_booleanas declaracion . END

    END             shift and go to state 233


state 192

    (147) sentencia_while_bool -> WHILE declaracion declaraciones . END

    END             shift and go to state 234


state 193

    (148) sentencia_while_bool -> WHILE VARIABLE declaraciones . END

    END             shift and go to state 235


state 194

    (128) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (129) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (130) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 236
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 195

    (151) sentencia_case -> CASE VARIABLE sentencia_when . END

    END             shift and go to state 237


state 196

    (155) sentencia_until -> UNTIL declaracion DO . declaracion END
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 238
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 197

    (169) definicion_clase -> encabezadoClase declaraciones END .

    VARIABLE        reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    PRINT           reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    PUTS            reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    PRINTF          reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    GETS            reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    LLAVE_IZ        reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    IF              reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    DEF             reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    CORCHETE_IZ     reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    WHILE           reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    CASE            reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    UNTIL           reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    PARENTESIS_IZ   reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    SIMBOLO         reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    FLOTANTE        reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    ENTERO          reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    WHEN            reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    CLASS           reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    VARIABLECLASE   reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    CADENA          reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    $end            reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)
    END             reduce using rule 169 (definicion_clase -> encabezadoClase declaraciones END .)


state 198

    (146) declaraciones -> declaracion declaraciones .

    END             reduce using rule 146 (declaraciones -> declaracion declaraciones .)
    ELSE            reduce using rule 146 (declaraciones -> declaracion declaraciones .)
    ELSEIF          reduce using rule 146 (declaraciones -> declaracion declaraciones .)


state 199

    (34) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLE        reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINT           reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PUTS            reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINTF          reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    GETS            reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IF              reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DEF             reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHILE           reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CASE            reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    UNTIL           reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ENTERO          reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CLASS           reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CADENA          reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 34 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 200

    (152) sentencia_when -> WHEN declaracion declaracion .

    WHEN            reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    VARIABLE        reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    PRINT           reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    PUTS            reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    PRINTF          reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    GETS            reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    LLAVE_IZ        reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    IF              reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    DEF             reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    CORCHETE_IZ     reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    WHILE           reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    CASE            reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    UNTIL           reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    PARENTESIS_IZ   reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    SIMBOLO         reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    FLOTANTE        reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    ENTERO          reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    CLASS           reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    VARIABLECLASE   reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    CADENA          reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    $end            reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)
    END             reduce using rule 152 (sentencia_when -> WHEN declaracion declaracion .)


state 201

    (168) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 239


state 202

    (65) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (32) valorCadena -> CADENA .

    VARIABLE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINT           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PUTS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINTF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    GETS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IF              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DEF             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHILE           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CASE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    UNTIL           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    SIMBOLO         reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    FLOTANTE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ENTERO          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHEN            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CLASS           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CADENA          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 32 (valorCadena -> CADENA .)


state 203

    (66) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (50) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (40) operadores -> . MAS
    (41) operadores -> . MENOS
    (42) operadores -> . DIVISION
    (43) operadores -> . MULTIPLICACION
    (44) operadores -> . EXPONENCIACION
    (45) operadores -> . MODULO

    VARIABLE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINT           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PUTS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    GETS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IF              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DEF             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHILE           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CASE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHEN            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CLASS           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CADENA          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    DIVISION        shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    EXPONENCIACION  shift and go to state 63
    MODULO          shift and go to state 64

    operadores                     shift and go to state 58

state 204

    (67) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    VARIABLE        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINT           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PUTS            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINTF          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    GETS            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IF              reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DEF             reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHILE           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CASE            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    UNTIL           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    SIMBOLO         reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    FLOTANTE        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ENTERO          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHEN            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CLASS           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CADENA          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 205

    (68) asignacion_clase -> VARIABLECLASE IGUAL array .

    VARIABLE        reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINT           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PUTS            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINTF          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    GETS            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    LLAVE_IZ        reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IF              reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DEF             reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CORCHETE_IZ     reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHILE           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CASE            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    UNTIL           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    SIMBOLO         reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    FLOTANTE        reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ENTERO          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHEN            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CLASS           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    VARIABLECLASE   reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CADENA          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 206

    (69) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINT           reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PUTS            reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    GETS            reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IF              reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DEF             reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHILE           reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CASE            reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHEN            reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CLASS           reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CADENA          reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 69 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 207

    (49) expresionNumerica -> VARIABLE .
    (31) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (33) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 33 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 49 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 49 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 49 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 49 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 49 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 49 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 240
    MAS             reduce using rule 33 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 49 (expresionNumerica -> VARIABLE .) ]


state 208

    (39) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (31) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    TO_F            shift and go to state 241
    CONCAT          shift and go to state 159


state 209

    (89) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 242


state 210

    (164) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 243


state 211

    (31) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    CADENA          shift and go to state 31
    VARIABLE        shift and go to state 139

    valorCadena                    shift and go to state 244

state 212

    (117) funcionesArray -> FOR EACH .

    VARIABLE        reduce using rule 117 (funcionesArray -> FOR EACH .)
    PRINT           reduce using rule 117 (funcionesArray -> FOR EACH .)
    PUTS            reduce using rule 117 (funcionesArray -> FOR EACH .)
    PRINTF          reduce using rule 117 (funcionesArray -> FOR EACH .)
    GETS            reduce using rule 117 (funcionesArray -> FOR EACH .)
    LLAVE_IZ        reduce using rule 117 (funcionesArray -> FOR EACH .)
    IF              reduce using rule 117 (funcionesArray -> FOR EACH .)
    DEF             reduce using rule 117 (funcionesArray -> FOR EACH .)
    CORCHETE_IZ     reduce using rule 117 (funcionesArray -> FOR EACH .)
    WHILE           reduce using rule 117 (funcionesArray -> FOR EACH .)
    CASE            reduce using rule 117 (funcionesArray -> FOR EACH .)
    UNTIL           reduce using rule 117 (funcionesArray -> FOR EACH .)
    PARENTESIS_IZ   reduce using rule 117 (funcionesArray -> FOR EACH .)
    SIMBOLO         reduce using rule 117 (funcionesArray -> FOR EACH .)
    FLOTANTE        reduce using rule 117 (funcionesArray -> FOR EACH .)
    ENTERO          reduce using rule 117 (funcionesArray -> FOR EACH .)
    WHEN            reduce using rule 117 (funcionesArray -> FOR EACH .)
    CLASS           reduce using rule 117 (funcionesArray -> FOR EACH .)
    VARIABLECLASE   reduce using rule 117 (funcionesArray -> FOR EACH .)
    CADENA          reduce using rule 117 (funcionesArray -> FOR EACH .)
    $end            reduce using rule 117 (funcionesArray -> FOR EACH .)
    END             reduce using rule 117 (funcionesArray -> FOR EACH .)


state 213

    (54) valores -> valor COMA valores .

    VARIABLE        reduce using rule 54 (valores -> valor COMA valores .)
    PRINT           reduce using rule 54 (valores -> valor COMA valores .)
    PUTS            reduce using rule 54 (valores -> valor COMA valores .)
    PRINTF          reduce using rule 54 (valores -> valor COMA valores .)
    GETS            reduce using rule 54 (valores -> valor COMA valores .)
    LLAVE_IZ        reduce using rule 54 (valores -> valor COMA valores .)
    IF              reduce using rule 54 (valores -> valor COMA valores .)
    DEF             reduce using rule 54 (valores -> valor COMA valores .)
    CORCHETE_IZ     reduce using rule 54 (valores -> valor COMA valores .)
    WHILE           reduce using rule 54 (valores -> valor COMA valores .)
    CASE            reduce using rule 54 (valores -> valor COMA valores .)
    UNTIL           reduce using rule 54 (valores -> valor COMA valores .)
    PARENTESIS_IZ   reduce using rule 54 (valores -> valor COMA valores .)
    SIMBOLO         reduce using rule 54 (valores -> valor COMA valores .)
    FLOTANTE        reduce using rule 54 (valores -> valor COMA valores .)
    ENTERO          reduce using rule 54 (valores -> valor COMA valores .)
    WHEN            reduce using rule 54 (valores -> valor COMA valores .)
    CLASS           reduce using rule 54 (valores -> valor COMA valores .)
    VARIABLECLASE   reduce using rule 54 (valores -> valor COMA valores .)
    CADENA          reduce using rule 54 (valores -> valor COMA valores .)
    $end            reduce using rule 54 (valores -> valor COMA valores .)
    DO              reduce using rule 54 (valores -> valor COMA valores .)
    END             reduce using rule 54 (valores -> valor COMA valores .)
    ELSE            reduce using rule 54 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 54 (valores -> valor COMA valores .)


state 214

    (130) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 245
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 215

    (148) sentencia_while_bool -> WHILE VARIABLE . declaraciones END
    (71) asignacion -> VARIABLE . IGUAL CADENA
    (72) asignacion -> VARIABLE . IGUAL expresionNumerica
    (73) asignacion -> VARIABLE . IGUAL hashes
    (74) asignacion -> VARIABLE . IGUAL SIMBOLO
    (75) asignacion -> VARIABLE . IGUAL array
    (76) asignacion -> VARIABLE . IGUAL input_concatenacion
    (77) asignacion -> VARIABLE . IGUAL booleanos
    (78) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (79) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (70) asignacion_clase -> VARIABLE . IGUAL booleanos
    (49) expresionNumerica -> VARIABLE .
    (28) valorSimbolo -> VARIABLE .
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (97) operadoresComparacion -> . IGUAL_DOBLEP
    (98) operadoresComparacion -> . NAVE
    (99) operadoresComparacion -> . DIFERENTE
    (100) operadoresComparacion -> . MAYOR_QUE
    (101) operadoresComparacion -> . MENOR_QUE
    (102) operadoresComparacion -> . MENOR_IGUAL_QUE
    (103) operadoresComparacion -> . MAYOR_IGUAL_QUE
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 66
    MAS             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 69
    NAVE            shift and go to state 70
    DIFERENTE       shift and go to state 71
    MAYOR_QUE       shift and go to state 72
    MENOR_QUE       shift and go to state 73
    MENOR_IGUAL_QUE shift and go to state 74
    MAYOR_IGUAL_QUE shift and go to state 75
    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

  ! IGUAL_DOBLEP    [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 28 (valorSimbolo -> VARIABLE .) ]

    declaraciones                  shift and go to state 193
    expresionNumerica              shift and go to state 27
    hashes                         shift and go to state 120
    solicitudDatosTeclado          shift and go to state 119
    operadoresComparacion          shift and go to state 67
    valorNumerico                  shift and go to state 39
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38

state 216

    (163) elemento_hash -> claveValor COMA elemento_hash .

    LLAVE_DER       reduce using rule 163 (elemento_hash -> claveValor COMA elemento_hash .)


state 217

    (158) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 158 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 158 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 218

    (159) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 159 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 159 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 219

    (161) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 161 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 161 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 220

    (160) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 160 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 160 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 221

    (130) estructura_ifUnaLinea -> IF condicionIf declaraciones END .

    VARIABLE        reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINT           reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PUTS            reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINTF          reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    GETS            reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    LLAVE_IZ        reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IF              reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DEF             reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CORCHETE_IZ     reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHILE           reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CASE            reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    UNTIL           reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PARENTESIS_IZ   reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    SIMBOLO         reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    FLOTANTE        reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ENTERO          reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHEN            reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CLASS           reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    VARIABLECLASE   reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CADENA          reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    $end            reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DO              reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    END             reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSE            reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSEIF          reduce using rule 130 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)


state 222

    (128) estructura_if -> IF condicionIf declaraciones ELSE . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 246
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 223

    (129) estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 129 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)


state 224

    (131) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones ELSE declaraciones END
    (132) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones estructura_secundaria_if
    (124) condicionIf -> . expresiones_booleanas
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (127) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 99
    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    condicionIf                    shift and go to state 247
    expresiones_booleanas          shift and go to state 98
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 225

    (126) condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINT           reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PUTS            reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    GETS            reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    IF              reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    WHILE           reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 126 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)


state 226

    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER funcionesComparacion condicionIf
    (127) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 248


state 227

    (122) argumentos -> VARIABLE .
    (123) argumentos -> VARIABLE . COMA argumentos
    (49) expresionNumerica -> VARIABLE .

    PARENTESIS_DER  reduce using rule 122 (argumentos -> VARIABLE .)
    COMA            shift and go to state 249
    MAS             reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 49 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 49 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 49 (expresionNumerica -> VARIABLE .)


state 228

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 250
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 229

    (114) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaraciones END

    PARENTESIS_DER  shift and go to state 251


state 230

    (115) funciones -> DEF VARIABLE declaraciones END .

    VARIABLE        reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    PRINT           reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    PUTS            reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    PRINTF          reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    GETS            reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    IF              reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    DEF             reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    CORCHETE_IZ     reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    WHILE           reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    CASE            reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    UNTIL           reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    ENTERO          reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    WHEN            reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    CLASS           reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    CADENA          reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    $end            reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)
    END             reduce using rule 115 (funciones -> DEF VARIABLE declaraciones END .)


state 231

    (80) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 80 (elementos_array -> elemento_array COMA elementos_array .)


state 232

    (149) sentencia_while -> WHILE expresiones_booleanas sentencia_while END .

    VARIABLE        reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PRINT           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PUTS            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PRINTF          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    GETS            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    LLAVE_IZ        reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    IF              reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    DEF             reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CORCHETE_IZ     reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    WHILE           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CASE            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    UNTIL           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PARENTESIS_IZ   reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    SIMBOLO         reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    FLOTANTE        reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    ENTERO          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    WHEN            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CLASS           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    VARIABLECLASE   reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CADENA          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    $end            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    DO              reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    END             reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    ELSE            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    ELSEIF          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)


state 233

    (150) sentencia_while -> WHILE expresiones_booleanas declaracion END .

    VARIABLE        reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PRINT           reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PUTS            reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PRINTF          reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    GETS            reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    LLAVE_IZ        reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    IF              reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    DEF             reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CORCHETE_IZ     reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    WHILE           reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CASE            reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    UNTIL           reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PARENTESIS_IZ   reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    SIMBOLO         reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    FLOTANTE        reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    ENTERO          reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    WHEN            reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CLASS           reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    VARIABLECLASE   reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CADENA          reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    $end            reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    DO              reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    END             reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    ELSE            reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    ELSEIF          reduce using rule 150 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)


state 234

    (147) sentencia_while_bool -> WHILE declaracion declaraciones END .

    VARIABLE        reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PRINT           reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PUTS            reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PRINTF          reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    GETS            reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    LLAVE_IZ        reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    IF              reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    DEF             reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CORCHETE_IZ     reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    WHILE           reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CASE            reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    UNTIL           reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PARENTESIS_IZ   reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    SIMBOLO         reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    FLOTANTE        reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    ENTERO          reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    WHEN            reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CLASS           reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    VARIABLECLASE   reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CADENA          reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    $end            reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    DO              reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    END             reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    ELSE            reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    ELSEIF          reduce using rule 147 (sentencia_while_bool -> WHILE declaracion declaraciones END .)


state 235

    (148) sentencia_while_bool -> WHILE VARIABLE declaraciones END .

    VARIABLE        reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PRINT           reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PUTS            reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PRINTF          reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    GETS            reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    IF              reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    DEF             reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CORCHETE_IZ     reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    WHILE           reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CASE            reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    UNTIL           reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    ENTERO          reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    WHEN            reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CLASS           reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CADENA          reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    $end            reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    DO              reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    END             reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    ELSE            reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    ELSEIF          reduce using rule 148 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)


state 236

    (128) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (129) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (130) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (131) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (132) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 222
    END             shift and go to state 221
    ELSEIF          shift and go to state 224

    estructura_secundaria_if       shift and go to state 223

state 237

    (151) sentencia_case -> CASE VARIABLE sentencia_when END .

    VARIABLE        reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PRINT           reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PUTS            reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PRINTF          reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    GETS            reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    LLAVE_IZ        reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    IF              reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    DEF             reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CORCHETE_IZ     reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    WHILE           reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CASE            reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    UNTIL           reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PARENTESIS_IZ   reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    SIMBOLO         reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    FLOTANTE        reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    ENTERO          reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    WHEN            reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CLASS           reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    VARIABLECLASE   reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CADENA          reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    $end            reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    END             reduce using rule 151 (sentencia_case -> CASE VARIABLE sentencia_when END .)


state 238

    (155) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 252


state 239

    (168) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    VARIABLE        reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PRINT           reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PUTS            reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PRINTF          reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    GETS            reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    LLAVE_IZ        reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    IF              reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    VARIABLECLASE   reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    WHILE           reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PARENTESIS_IZ   reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    SIMBOLO         reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    FLOTANTE        reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    ENTERO          reduce using rule 168 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 240

    (31) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 159


state 241

    (39) entero_a_flotante -> VARIABLE PUNTO TO_F .

    VARIABLE        reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DO              reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSE            reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSEIF          reduce using rule 39 (entero_a_flotante -> VARIABLE PUNTO TO_F .)


state 242

    (89) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 253


state 243

    (164) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (165) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (166) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 254

    each_args_hash                 shift and go to state 255

state 244

    (31) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 256


state 245

    (130) estructura_ifUnaLinea -> IF condicionIf declaraciones . END

    END             shift and go to state 221


state 246

    (128) estructura_if -> IF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 257


state 247

    (131) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones ELSE declaraciones END
    (132) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones estructura_secundaria_if
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 258
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 248

    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER . funcionesComparacion condicionIf
    (127) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .
    (104) funcionesComparacion -> . Y_SIGNO
    (105) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINT           reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PUTS            reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINTF          reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    GETS            reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    IF              reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    WHILE           reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    SIMBOLO         reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    FLOTANTE        reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    ENTERO          reduce using rule 127 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    Y_SIGNO         shift and go to state 183
    O_SIGNO         shift and go to state 184

    funcionesComparacion           shift and go to state 259

state 249

    (123) argumentos -> VARIABLE COMA . argumentos
    (122) argumentos -> . VARIABLE
    (123) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 260

    argumentos                     shift and go to state 261

state 250

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones . END

    END             shift and go to state 262


state 251

    (114) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 263
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 252

    (155) sentencia_until -> UNTIL declaracion DO declaracion END .

    VARIABLE        reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINT           reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PUTS            reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINTF          reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    GETS            reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    LLAVE_IZ        reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    IF              reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    DEF             reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CORCHETE_IZ     reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHILE           reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CASE            reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    UNTIL           reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    SIMBOLO         reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    FLOTANTE        reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    ENTERO          reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHEN            reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CLASS           reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    VARIABLECLASE   reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CADENA          reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    $end            reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 155 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 253

    (89) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (90) cuerpo_each -> . cuerpo
    (91) cuerpo_each -> . vacio
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
    (20) cuerpo -> . sentencia_while_bool
    (21) cuerpo -> . sentencia_case
    (22) cuerpo -> . sentencias_when
    (23) cuerpo -> . sentencia_until
    (24) cuerpo -> . definicion_clase
    (25) cuerpo -> . entero_a_flotante
    (26) cuerpo -> . declaracion
    (92) vacio -> .
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) input_concatenacion -> . concatenacionSimpleCadena
    (30) input_concatenacion -> . concatenacion_funcion
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (115) funciones -> . DEF VARIABLE declaraciones END
    (120) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (121) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (87) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (88) array -> . CORCHETE_IZ CORCHETE_DER
    (89) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (164) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (151) sentencia_case -> . CASE VARIABLE sentencia_when END
    (153) sentencias_when -> . sentencia_when
    (154) sentencias_when -> . sentencia_when sentencias_when
    (155) sentencia_until -> . UNTIL declaracion DO declaracion END
    (169) definicion_clase -> . encabezadoClase declaraciones END
    (39) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (34) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (35) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (31) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO
    (152) sentencia_when -> . WHEN declaracion declaracion
    (167) encabezadoClase -> . CLASS ID_CLASE
    (168) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (32) valorCadena -> . CADENA
    (33) valorCadena -> . VARIABLE

    END             reduce using rule 92 (vacio -> .)
    VARIABLE        shift and go to state 30
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 42
    DEF             shift and go to state 43
    CORCHETE_IZ     shift and go to state 44
    WHILE           shift and go to state 45
    CASE            shift and go to state 46
    UNTIL           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53
    WHEN            shift and go to state 54
    CLASS           shift and go to state 55
    VARIABLECLASE   shift and go to state 56
    CADENA          shift and go to state 31

    cuerpo_each                    shift and go to state 264
    cuerpo                         shift and go to state 265
    vacio                          shift and go to state 266
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
    sentencia_while_bool           shift and go to state 20
    sentencia_case                 shift and go to state 21
    sentencias_when                shift and go to state 22
    sentencia_until                shift and go to state 23
    definicion_clase               shift and go to state 24
    entero_a_flotante              shift and go to state 25
    declaracion                    shift and go to state 26
    expresionNumerica              shift and go to state 27
    concatenacionSimpleCadena      shift and go to state 28
    concatenacion_funcion          shift and go to state 29
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39
    sentencia_when                 shift and go to state 47
    encabezadoClase                shift and go to state 49
    asignacion_clase               shift and go to state 50
    valorCadena                    shift and go to state 51

state 254

    (165) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (166) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 267
    BARRA           shift and go to state 268


state 255

    (164) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaracion                    shift and go to state 269
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 256

    (31) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    VARIABLE        reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINT           reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PUTS            reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINTF          reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    GETS            reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IF              reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DEF             reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHILE           reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CASE            reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    UNTIL           reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    SIMBOLO         reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    FLOTANTE        reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ENTERO          reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CLASS           reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CADENA          reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    $end            reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 31 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 257

    (128) estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)


state 258

    (131) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . ELSE declaraciones END
    (132) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . estructura_secundaria_if
    (131) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (132) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 270
    ELSEIF          shift and go to state 224

    estructura_secundaria_if       shift and go to state 271

state 259

    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion . condicionIf
    (124) condicionIf -> . expresiones_booleanas
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (127) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 99
    VARIABLE        shift and go to state 101
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    expresiones_booleanas          shift and go to state 98
    condicionIf                    shift and go to state 272
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 100

state 260

    (122) argumentos -> VARIABLE .
    (123) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 122 (argumentos -> VARIABLE .)
    COMA            shift and go to state 249


state 261

    (123) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 123 (argumentos -> VARIABLE COMA argumentos .)


state 262

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    END             reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)


state 263

    (114) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones . END

    END             shift and go to state 273


state 264

    (89) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 274


state 265

    (90) cuerpo_each -> cuerpo .

    END             reduce using rule 90 (cuerpo_each -> cuerpo .)


state 266

    (91) cuerpo_each -> vacio .

    END             reduce using rule 91 (cuerpo_each -> vacio .)


state 267

    (165) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 275


state 268

    (166) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    PRINTF          reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 166 (each_args_hash -> VARIABLE BARRA .)


state 269

    (164) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 276


state 270

    (131) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE . declaraciones END
    (145) declaraciones -> . declaracion
    (146) declaraciones -> . declaracion declaraciones
    (133) declaracion -> . operacionAritmetica
    (134) declaracion -> . asignacion
    (135) declaracion -> . impresion
    (136) declaracion -> . impresion_vacia
    (137) declaracion -> . expresiones_booleanas
    (138) declaracion -> . solicitudDatosTeclado
    (139) declaracion -> . hashes
    (140) declaracion -> . estructura_if
    (141) declaracion -> . asignacion_clase
    (142) declaracion -> . estructura_ifUnaLinea
    (143) declaracion -> . sentencia_while
    (144) declaracion -> . sentencia_while_bool
    (50) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL CADENA
    (72) asignacion -> . VARIABLE IGUAL expresionNumerica
    (73) asignacion -> . VARIABLE IGUAL hashes
    (74) asignacion -> . VARIABLE IGUAL SIMBOLO
    (75) asignacion -> . VARIABLE IGUAL array
    (76) asignacion -> . VARIABLE IGUAL input_concatenacion
    (77) asignacion -> . VARIABLE IGUAL booleanos
    (78) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (79) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (64) impresion -> . valor_print valores
    (93) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (95) impresion_vacia -> . PUTS
    (96) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (106) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (109) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (110) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (111) solicitudDatosTeclado -> . GETS
    (112) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (156) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (157) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (65) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (66) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (67) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (68) asignacion_clase -> . VARIABLECLASE IGUAL array
    (69) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (70) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (149) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (150) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (147) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (148) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (46) expresionNumerica -> . valorNumerico
    (47) expresionNumerica -> . operacionAritmetica
    (48) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (49) expresionNumerica -> . VARIABLE
    (51) valor_print -> . PRINT
    (52) valor_print -> . PUTS
    (27) valorSimbolo -> . SIMBOLO
    (28) valorSimbolo -> . VARIABLE
    (36) valorNumerico -> . FLOTANTE
    (37) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 129
    PRINT           shift and go to state 34
    PUTS            shift and go to state 36
    PRINTF          shift and go to state 37
    GETS            shift and go to state 40
    LLAVE_IZ        shift and go to state 41
    IF              shift and go to state 124
    VARIABLECLASE   shift and go to state 56
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 35
    SIMBOLO         shift and go to state 32
    FLOTANTE        shift and go to state 52
    ENTERO          shift and go to state 53

    declaraciones                  shift and go to state 277
    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 115
    asignacion                     shift and go to state 116
    impresion                      shift and go to state 117
    impresion_vacia                shift and go to state 118
    expresiones_booleanas          shift and go to state 128
    solicitudDatosTeclado          shift and go to state 119
    hashes                         shift and go to state 120
    estructura_if                  shift and go to state 121
    asignacion_clase               shift and go to state 50
    estructura_ifUnaLinea          shift and go to state 122
    sentencia_while                shift and go to state 112
    sentencia_while_bool           shift and go to state 123
    expresionNumerica              shift and go to state 27
    valor_print                    shift and go to state 33
    valorSimbolo                   shift and go to state 38
    valorNumerico                  shift and go to state 39

state 271

    (132) estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 132 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)


state 272

    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINT           reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PUTS            reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    GETS            reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    IF              reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    WHILE           reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)


state 273

    (114) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    END             reduce using rule 114 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)


state 274

    (89) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    VARIABLE        reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINT           reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PUTS            reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINTF          reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    GETS            reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    LLAVE_IZ        reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    IF              reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    DEF             reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CORCHETE_IZ     reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHILE           reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CASE            reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    UNTIL           reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PARENTESIS_IZ   reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    SIMBOLO         reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    FLOTANTE        reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    ENTERO          reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHEN            reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CLASS           reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    VARIABLECLASE   reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CADENA          reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    $end            reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 89 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 275

    (165) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 278


state 276

    (164) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    VARIABLE        reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINT           reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PUTS            reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINTF          reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    GETS            reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    LLAVE_IZ        reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    IF              reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    DEF             reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CORCHETE_IZ     reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHILE           reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CASE            reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    UNTIL           reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PARENTESIS_IZ   reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    SIMBOLO         reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    FLOTANTE        reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    ENTERO          reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHEN            reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CLASS           reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    VARIABLECLASE   reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CADENA          reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    $end            reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 164 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 277

    (131) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 279


state 278

    (165) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINTF          reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 165 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 279

    (131) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 30 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 30 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 30 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 30 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 30 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 30 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 30 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_IZ in state 36 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 101 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 101 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 101 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 111 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 111 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 111 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 111 resolved as shift
WARNING: shift/reduce conflict for PRINTF in state 111 resolved as shift
WARNING: shift/reduce conflict for GETS in state 111 resolved as shift
WARNING: shift/reduce conflict for LLAVE_IZ in state 111 resolved as shift
WARNING: shift/reduce conflict for IF in state 111 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 111 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_IZ in state 111 resolved as shift
WARNING: shift/reduce conflict for SIMBOLO in state 111 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 111 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 111 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 114 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 114 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 114 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 129 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 129 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 129 resolved as shift
WARNING: shift/reduce conflict for MAS in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 136 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 136 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 136 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 136 resolved as shift
WARNING: shift/reduce conflict for END in state 190 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 215 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 215 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 215 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 215 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 215 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 215 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 215 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (cuerpo -> operacionAritmetica)
WARNING: rejected rule (declaracion -> operacionAritmetica) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (cuerpo -> asignacion)
WARNING: rejected rule (declaracion -> asignacion) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (cuerpo -> impresion)
WARNING: rejected rule (declaracion -> impresion) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (cuerpo -> impresion_vacia)
WARNING: rejected rule (declaracion -> impresion_vacia) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (cuerpo -> expresiones_booleanas)
WARNING: rejected rule (declaracion -> expresiones_booleanas) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (cuerpo -> solicitudDatosTeclado)
WARNING: rejected rule (declaracion -> solicitudDatosTeclado) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (cuerpo -> hashes)
WARNING: rejected rule (declaracion -> hashes) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (cuerpo -> estructura_ifUnaLinea)
WARNING: rejected rule (declaracion -> estructura_ifUnaLinea) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (cuerpo -> estructura_if)
WARNING: rejected rule (declaracion -> estructura_if) in state 13
WARNING: reduce/reduce conflict in state 19 resolved using rule (cuerpo -> sentencia_while)
WARNING: rejected rule (declaracion -> sentencia_while) in state 19
WARNING: reduce/reduce conflict in state 20 resolved using rule (cuerpo -> sentencia_while_bool)
WARNING: rejected rule (declaracion -> sentencia_while_bool) in state 20
WARNING: reduce/reduce conflict in state 30 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 30
WARNING: reduce/reduce conflict in state 36 resolved using rule (valor_print -> PUTS)
WARNING: rejected rule (impresion_vacia -> PUTS) in state 36
WARNING: reduce/reduce conflict in state 140 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 140
WARNING: reduce/reduce conflict in state 147 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 147
WARNING: reduce/reduce conflict in state 158 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 158
WARNING: reduce/reduce conflict in state 207 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 207
WARNING: Rule (asignacion -> VARIABLE IGUAL booleanos) is never reduced
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
