Tipo: DEF, Valor: def
Tipo: VARIABLE_LOCAL, Valor: multiplicar
Tipo: LPAREN, Valor: (
Tipo: VARIABLE_LOCAL, Valor: a
Tipo: COMMA, Valor: ,
Tipo: VARIABLE_LOCAL, Valor: b
Tipo: RPAREN, Valor: )
Tipo: VARIABLE_LOCAL, Valor: a
Tipo: TIMES, Valor: *
Tipo: VARIABLE_LOCAL, Valor: b
Tipo: END, Valor: end
Tipo: VARIABLE_LOCAL, Valor: numeros
Tipo: ASSIGNATION, Valor: =
Tipo: LBRACKET, Valor: [
Tipo: INTEGER, Valor: 2
Tipo: COMMA, Valor: ,
Tipo: INTEGER, Valor: 4
Tipo: COMMA, Valor: ,
Tipo: INTEGER, Valor: 6
Tipo: COMMA, Valor: ,
Tipo: INTEGER, Valor: 8
Tipo: RBRACKET, Valor: ]
Tipo: IF, Valor: if
Tipo: VARIABLE_LOCAL, Valor: numeros
Tipo: LBRACKET, Valor: [
Tipo: INTEGER, Valor: 0
Tipo: RBRACKET, Valor: ]
Tipo: BIGGER, Valor: >
Tipo: INTEGER, Valor: 1
Tipo: PUTS, Valor: puts
Tipo: STRING, Valor: "El primer numero del arreglo es mayor que 1"
Tipo: END, Valor: end
Tipo: VARIABLE_LOCAL, Valor: resultado
Tipo: ASSIGNATION, Valor: =
Tipo: VARIABLE_LOCAL, Valor: multiplicar
Tipo: LPAREN, Valor: (
Tipo: VARIABLE_LOCAL, Valor: numeros
Tipo: LBRACKET, Valor: [
Tipo: INTEGER, Valor: 1
Tipo: RBRACKET, Valor: ]
Tipo: COMMA, Valor: ,
Tipo: VARIABLE_LOCAL, Valor: numeros
Tipo: LBRACKET, Valor: [
Tipo: INTEGER, Valor: 2
Tipo: RBRACKET, Valor: ]
Tipo: RPAREN, Valor: )
Tipo: PUTS, Valor: puts
Tipo: STRING, Valor: "El resultado de la multiplicacion es #{resultado}"
('program', [('function_def', 'multiplicar', ['a', 'b'], ('binary_op', '*', 'a', 'b')), ('assignment', 'numeros', ('array', [2, 4, 6, 8])), ('if', ('binary_op', '>', ('array_access', 'numeros', 0), 1), [('puts', '"El primer numero del arreglo es mayor que 1"')]), ('assignment', 'resultado', ('function_call', 'multiplicar', [('array_access', 'numeros', 1), ('array_access', 'numeros', 2)])), ('puts', '"El resultado de la multiplicacion es #{resultado}"')])